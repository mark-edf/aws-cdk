.. @jsii-pacmak:meta@ {"fingerprint":"RYusig8M2OZ4IufGmu3GRlsbY6gmbZlp6NO35PyXvoQ="}

@aws-cdk/aws-ec2
================

.. mdinclude:: ./__aws-cdk_aws-ec2.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.EC2/0.24.1>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.EC2" Version="0.24.1" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.EC2 --version 0.24.1

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.EC2" version="0.24.1" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/ec2/0.24.1/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:ec2:jar:0.24.1'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="ec2" rev="0.24.1"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>ec2</artifactId>
           <version>0.24.1</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:ec2:0.24.1'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='ec2', version='0.24.1')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-ec2/v/0.24.1>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-ec2@0.24.1

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-ec2": "^0.24.1"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-ec2@0.24.1


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-ec2/v/0.24.1>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-ec2@0.24.1

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-ec2": "^0.24.1"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-ec2@0.24.1



.. py:module:: @aws-cdk/aws-ec2

AllTraffic
^^^^^^^^^^

.. py:class:: AllTraffic()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AllTraffic;

      .. code-tab:: javascript

         const { AllTraffic } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AllTraffic } from '@aws-cdk/aws-ec2';



   All Traffic



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


AmazonLinuxEdition (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AmazonLinuxEdition

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AmazonLinuxEdition;

      .. code-tab:: javascript

         const { AmazonLinuxEdition } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AmazonLinuxEdition } from '@aws-cdk/aws-ec2';



   Amazon Linux edition



   .. py:data:: Standard

   Standard edition



   .. py:data:: Minimal

   Minimal edition




AmazonLinuxGeneration (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AmazonLinuxGeneration

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AmazonLinuxGeneration;

      .. code-tab:: javascript

         const { AmazonLinuxGeneration } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AmazonLinuxGeneration } from '@aws-cdk/aws-ec2';



   What generation of Amazon Linux to use



   .. py:data:: AmazonLinux

   Amazon Linux



   .. py:data:: AmazonLinux2

   Amazon Linux 2




AmazonLinuxImage
^^^^^^^^^^^^^^^^

.. py:class:: AmazonLinuxImage([props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AmazonLinuxImage;

      .. code-tab:: javascript

         const { AmazonLinuxImage } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AmazonLinuxImage } from '@aws-cdk/aws-ec2';



   Selects the latest version of Amazon Linux

   

   The AMI ID is selected using the values published to the SSM parameter store.



   :implements: :py:class:`~@aws-cdk/aws-ec2.IMachineImageSource`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.AmazonLinuxImageProps`\  *(optional)*

   .. py:method:: getImage(scope) -> @aws-cdk/aws-ec2.MachineImage

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IMachineImageSource.getImage`

      Return the image to use in the given context



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.MachineImage`\ 


AmazonLinuxImageProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AmazonLinuxImageProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AmazonLinuxImageProps;

      .. code-tab:: javascript

         // AmazonLinuxImageProps is an interface

      .. code-tab:: typescript

         import { AmazonLinuxImageProps } from '@aws-cdk/aws-ec2';



   Amazon Linux image properties





   .. py:attribute:: edition

      What edition of Amazon Linux to use



      :type: :py:class:`~@aws-cdk/aws-ec2.AmazonLinuxEdition`\  *(optional)*
      :default: Standard


   .. py:attribute:: generation

      What generation of Amazon Linux to use



      :type: :py:class:`~@aws-cdk/aws-ec2.AmazonLinuxGeneration`\  *(optional)*
      :default: AmazonLinux


   .. py:attribute:: storage

      What storage backed image to use



      :type: :py:class:`~@aws-cdk/aws-ec2.AmazonLinuxStorage`\  *(optional)*
      :default: GeneralPurpose


   .. py:attribute:: virtualization

      Virtualization type



      :type: :py:class:`~@aws-cdk/aws-ec2.AmazonLinuxVirt`\  *(optional)*
      :default: HVM


AmazonLinuxStorage (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AmazonLinuxStorage

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AmazonLinuxStorage;

      .. code-tab:: javascript

         const { AmazonLinuxStorage } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AmazonLinuxStorage } from '@aws-cdk/aws-ec2';



   .. py:data:: EBS

   EBS-backed storage



   .. py:data:: GeneralPurpose

   General Purpose-based storage (recommended)




AmazonLinuxVirt (enum)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AmazonLinuxVirt

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AmazonLinuxVirt;

      .. code-tab:: javascript

         const { AmazonLinuxVirt } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AmazonLinuxVirt } from '@aws-cdk/aws-ec2';



   Virtualization type for Amazon Linux



   .. py:data:: HVM

   HVM virtualization (recommended)



   .. py:data:: PV

   PV virtualization




AnyIPv4
^^^^^^^

.. py:class:: AnyIPv4()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AnyIPv4;

      .. code-tab:: javascript

         const { AnyIPv4 } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AnyIPv4 } from '@aws-cdk/aws-ec2';



   Any IPv4 address



   :extends: :py:class:`~@aws-cdk/aws-ec2.CidrIPv4`\ 

   .. py:method:: toEgressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.CidrIPv4 <@aws-cdk/aws-ec2.CidrIPv4.toEgressRuleJSON>`

      Produce the egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toIngressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.CidrIPv4 <@aws-cdk/aws-ec2.CidrIPv4.toIngressRuleJSON>`

      Produce the ingress rule JSON for the given connection



      :rtype: any


   .. py:attribute:: canInlineRule

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv4 <@aws-cdk/aws-ec2.CidrIPv4.canInlineRule>`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: cidrIp

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv4 <@aws-cdk/aws-ec2.CidrIPv4.cidrIp>`

      :type: string *(readonly)*


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv4 <@aws-cdk/aws-ec2.CidrIPv4.connections>`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv4 <@aws-cdk/aws-ec2.CidrIPv4.uniqueId>`

      A unique identifier for this connection peer



      :type: string *(readonly)*


AnyIPv6
^^^^^^^

.. py:class:: AnyIPv6()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.AnyIPv6;

      .. code-tab:: javascript

         const { AnyIPv6 } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { AnyIPv6 } from '@aws-cdk/aws-ec2';



   Any IPv6 address



   :extends: :py:class:`~@aws-cdk/aws-ec2.CidrIPv6`\ 

   .. py:method:: toEgressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.CidrIPv6 <@aws-cdk/aws-ec2.CidrIPv6.toEgressRuleJSON>`

      Produce the egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toIngressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.CidrIPv6 <@aws-cdk/aws-ec2.CidrIPv6.toIngressRuleJSON>`

      Produce the ingress rule JSON for the given connection



      :rtype: any


   .. py:attribute:: canInlineRule

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv6 <@aws-cdk/aws-ec2.CidrIPv6.canInlineRule>`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: cidrIpv6

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv6 <@aws-cdk/aws-ec2.CidrIPv6.cidrIpv6>`

      :type: string *(readonly)*


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv6 <@aws-cdk/aws-ec2.CidrIPv6.connections>`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.CidrIPv6 <@aws-cdk/aws-ec2.CidrIPv6.uniqueId>`

      A unique identifier for this connection peer



      :type: string *(readonly)*


CfnCustomerGateway
^^^^^^^^^^^^^^^^^^

.. py:class:: CfnCustomerGateway(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnCustomerGateway;

      .. code-tab:: javascript

         const { CfnCustomerGateway } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnCustomerGateway } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnCustomerGatewayProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: customerGatewayName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnCustomerGatewayProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnCustomerGatewayProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnCustomerGatewayProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnCustomerGatewayProps;

      .. code-tab:: javascript

         // CfnCustomerGatewayProps is an interface

      .. code-tab:: typescript

         import { CfnCustomerGatewayProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: bgpAsn

      ``AWS::EC2::CustomerGateway.BgpAsn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn


      :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: ipAddress

      ``AWS::EC2::CustomerGateway.IpAddress``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress


      :type: string


   .. py:attribute:: type

      ``AWS::EC2::CustomerGateway.Type``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type


      :type: string


   .. py:attribute:: tags

      ``AWS::EC2::CustomerGateway.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnDHCPOptions
^^^^^^^^^^^^^^

.. py:class:: CfnDHCPOptions(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnDHCPOptions;

      .. code-tab:: javascript

         const { CfnDHCPOptions } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnDHCPOptions } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnDHCPOptionsProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: dhcpOptionsName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnDHCPOptionsProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnDHCPOptionsProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDHCPOptionsProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnDHCPOptionsProps;

      .. code-tab:: javascript

         // CfnDHCPOptionsProps is an interface

      .. code-tab:: typescript

         import { CfnDHCPOptionsProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: domainName

      ``AWS::EC2::DHCPOptions.DomainName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainname


      :type: string *(optional)*


   .. py:attribute:: domainNameServers

      ``AWS::EC2::DHCPOptions.DomainNameServers``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainnameservers


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: netbiosNameServers

      ``AWS::EC2::DHCPOptions.NetbiosNameServers``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnameservers


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: netbiosNodeType

      ``AWS::EC2::DHCPOptions.NetbiosNodeType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnodetype


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: ntpServers

      ``AWS::EC2::DHCPOptions.NtpServers``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-ntpservers


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::DHCPOptions.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnEC2Fleet
^^^^^^^^^^^

.. py:class:: CfnEC2Fleet(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEC2Fleet;

      .. code-tab:: javascript

         const { CfnEC2Fleet } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnEC2Fleet } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnEC2FleetProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: ec2FleetId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnEC2FleetProps`\  *(readonly)*

   .. py:class:: FleetLaunchTemplateConfigRequestProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: launchTemplateSpecification

         ``CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.LaunchTemplateSpecification``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-launchtemplatespecification


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty`\  *(optional)*


      .. py:attribute:: overrides

         ``CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.Overrides``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-overrides


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty`\ )[] *(optional)*


   .. py:class:: FleetLaunchTemplateOverridesRequestProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: availabilityZone

         ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.AvailabilityZone``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-availabilityzone


         :type: string *(optional)*


      .. py:attribute:: instanceType

         ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.InstanceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancetype


         :type: string *(optional)*


      .. py:attribute:: maxPrice

         ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.MaxPrice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-maxprice


         :type: string *(optional)*


      .. py:attribute:: priority

         ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.Priority``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-priority


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: subnetId

         ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.SubnetId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-subnetid


         :type: string *(optional)*


      .. py:attribute:: weightedCapacity

         ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.WeightedCapacity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-weightedcapacity


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: FleetLaunchTemplateSpecificationRequestProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: launchTemplateId

         ``CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplateid


         :type: string *(optional)*


      .. py:attribute:: launchTemplateName

         ``CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplatename


         :type: string *(optional)*


      .. py:attribute:: version

         ``CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.Version``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-version


         :type: string *(optional)*


   .. py:class:: OnDemandOptionsRequestProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.OnDemandOptionsRequestProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.OnDemandOptionsRequestProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: allocationStrategy

         ``CfnEC2Fleet.OnDemandOptionsRequestProperty.AllocationStrategy``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-allocationstrategy


         :type: string *(optional)*


   .. py:class:: SpotOptionsRequestProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.SpotOptionsRequestProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.SpotOptionsRequestProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.SpotOptionsRequestProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: allocationStrategy

         ``CfnEC2Fleet.SpotOptionsRequestProperty.AllocationStrategy``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-allocationstrategy


         :type: string *(optional)*


      .. py:attribute:: instanceInterruptionBehavior

         ``CfnEC2Fleet.SpotOptionsRequestProperty.InstanceInterruptionBehavior``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instanceinterruptionbehavior


         :type: string *(optional)*


      .. py:attribute:: instancePoolsToUseCount

         ``CfnEC2Fleet.SpotOptionsRequestProperty.InstancePoolsToUseCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instancepoolstousecount


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: TagRequestProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.TagRequestProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.TagRequestProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.TagRequestProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: key

         ``CfnEC2Fleet.TagRequestProperty.Key``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html#cfn-ec2-ec2fleet-tagrequest-key


         :type: string *(optional)*


      .. py:attribute:: value

         ``CfnEC2Fleet.TagRequestProperty.Value``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html#cfn-ec2-ec2fleet-tagrequest-value


         :type: string *(optional)*


   .. py:class:: TagSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.TagSpecificationProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.TagSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.TagSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: resourceType

         ``CfnEC2Fleet.TagSpecificationProperty.ResourceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-resourcetype


         :type: string *(optional)*


      .. py:attribute:: tags

         ``CfnEC2Fleet.TagSpecificationProperty.Tags``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-tags


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.TagRequestProperty`\ )[] *(optional)*


   .. py:class:: TargetCapacitySpecificationRequestProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty;

         .. code-tab:: javascript

            // CfnEC2Fleet.TargetCapacitySpecificationRequestProperty is an interface

         .. code-tab:: typescript

            import { CfnEC2Fleet.TargetCapacitySpecificationRequestProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: totalTargetCapacity

         ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.TotalTargetCapacity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-totaltargetcapacity


         :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: defaultTargetCapacityType

         ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.DefaultTargetCapacityType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-defaulttargetcapacitytype


         :type: string *(optional)*


      .. py:attribute:: onDemandTargetCapacity

         ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.OnDemandTargetCapacity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-ondemandtargetcapacity


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: spotTargetCapacity

         ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.SpotTargetCapacity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-spottargetcapacity


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnEC2FleetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnEC2FleetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEC2FleetProps;

      .. code-tab:: javascript

         // CfnEC2FleetProps is an interface

      .. code-tab:: typescript

         import { CfnEC2FleetProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: launchTemplateConfigs

      ``AWS::EC2::EC2Fleet.LaunchTemplateConfigs``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty`\ )[]


   .. py:attribute:: targetCapacitySpecification

      ``AWS::EC2::EC2Fleet.TargetCapacitySpecification``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.TargetCapacitySpecificationRequestProperty`\ 


   .. py:attribute:: excessCapacityTerminationPolicy

      ``AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy


      :type: string *(optional)*


   .. py:attribute:: onDemandOptions

      ``AWS::EC2::EC2Fleet.OnDemandOptions``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.OnDemandOptionsRequestProperty`\  *(optional)*


   .. py:attribute:: replaceUnhealthyInstances

      ``AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: spotOptions

      ``AWS::EC2::EC2Fleet.SpotOptions``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.SpotOptionsRequestProperty`\  *(optional)*


   .. py:attribute:: tagSpecifications

      ``AWS::EC2::EC2Fleet.TagSpecifications``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnEC2Fleet.TagSpecificationProperty`\ )[] *(optional)*


   .. py:attribute:: terminateInstancesWithExpiration

      ``AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: type

      ``AWS::EC2::EC2Fleet.Type``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type


      :type: string *(optional)*


   .. py:attribute:: validFrom

      ``AWS::EC2::EC2Fleet.ValidFrom``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom


      :type: string *(optional)*


   .. py:attribute:: validUntil

      ``AWS::EC2::EC2Fleet.ValidUntil``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil


      :type: string *(optional)*


CfnEIP
^^^^^^

.. py:class:: CfnEIP(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEIP;

      .. code-tab:: javascript

         const { CfnEIP } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnEIP } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnEIPProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: eipAllocationId

      :type: string *(readonly)*


   .. py:attribute:: eipIp

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnEIPProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnEIPAssociation
^^^^^^^^^^^^^^^^^

.. py:class:: CfnEIPAssociation(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEIPAssociation;

      .. code-tab:: javascript

         const { CfnEIPAssociation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnEIPAssociation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnEIPAssociationProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: eipAssociationName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnEIPAssociationProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnEIPAssociationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnEIPAssociationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEIPAssociationProps;

      .. code-tab:: javascript

         // CfnEIPAssociationProps is an interface

      .. code-tab:: typescript

         import { CfnEIPAssociationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: allocationId

      ``AWS::EC2::EIPAssociation.AllocationId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid


      :type: string *(optional)*


   .. py:attribute:: eip

      ``AWS::EC2::EIPAssociation.EIP``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip


      :type: string *(optional)*


   .. py:attribute:: instanceId

      ``AWS::EC2::EIPAssociation.InstanceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid


      :type: string *(optional)*


   .. py:attribute:: networkInterfaceId

      ``AWS::EC2::EIPAssociation.NetworkInterfaceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid


      :type: string *(optional)*


   .. py:attribute:: privateIpAddress

      ``AWS::EC2::EIPAssociation.PrivateIpAddress``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress


      :type: string *(optional)*


CfnEIPProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnEIPProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEIPProps;

      .. code-tab:: javascript

         // CfnEIPProps is an interface

      .. code-tab:: typescript

         import { CfnEIPProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: domain

      ``AWS::EC2::EIP.Domain``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain


      :type: string *(optional)*


   .. py:attribute:: instanceId

      ``AWS::EC2::EIP.InstanceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid


      :type: string *(optional)*


   .. py:attribute:: publicIpv4Pool

      ``AWS::EC2::EIP.PublicIpv4Pool``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool


      :type: string *(optional)*


CfnEgressOnlyInternetGateway
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnEgressOnlyInternetGateway(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEgressOnlyInternetGateway;

      .. code-tab:: javascript

         const { CfnEgressOnlyInternetGateway } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnEgressOnlyInternetGateway } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: egressOnlyInternetGatewayId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnEgressOnlyInternetGatewayProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnEgressOnlyInternetGatewayProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnEgressOnlyInternetGatewayProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnEgressOnlyInternetGatewayProps;

      .. code-tab:: javascript

         // CfnEgressOnlyInternetGatewayProps is an interface

      .. code-tab:: typescript

         import { CfnEgressOnlyInternetGatewayProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: vpcId

      ``AWS::EC2::EgressOnlyInternetGateway.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid


      :type: string


CfnFlowLog
^^^^^^^^^^

.. py:class:: CfnFlowLog(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnFlowLog;

      .. code-tab:: javascript

         const { CfnFlowLog } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnFlowLog } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnFlowLogProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: flowLogId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnFlowLogProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnFlowLogProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnFlowLogProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnFlowLogProps;

      .. code-tab:: javascript

         // CfnFlowLogProps is an interface

      .. code-tab:: typescript

         import { CfnFlowLogProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: resourceId

      ``AWS::EC2::FlowLog.ResourceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid


      :type: string


   .. py:attribute:: resourceType

      ``AWS::EC2::FlowLog.ResourceType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype


      :type: string


   .. py:attribute:: trafficType

      ``AWS::EC2::FlowLog.TrafficType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype


      :type: string


   .. py:attribute:: deliverLogsPermissionArn

      ``AWS::EC2::FlowLog.DeliverLogsPermissionArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn


      :type: string *(optional)*


   .. py:attribute:: logDestination

      ``AWS::EC2::FlowLog.LogDestination``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination


      :type: string *(optional)*


   .. py:attribute:: logDestinationType

      ``AWS::EC2::FlowLog.LogDestinationType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype


      :type: string *(optional)*


   .. py:attribute:: logGroupName

      ``AWS::EC2::FlowLog.LogGroupName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname


      :type: string *(optional)*


CfnHost
^^^^^^^

.. py:class:: CfnHost(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnHost;

      .. code-tab:: javascript

         const { CfnHost } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnHost } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnHostProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: hostId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnHostProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnHostProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnHostProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnHostProps;

      .. code-tab:: javascript

         // CfnHostProps is an interface

      .. code-tab:: typescript

         import { CfnHostProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: availabilityZone

      ``AWS::EC2::Host.AvailabilityZone``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone


      :type: string


   .. py:attribute:: instanceType

      ``AWS::EC2::Host.InstanceType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype


      :type: string


   .. py:attribute:: autoPlacement

      ``AWS::EC2::Host.AutoPlacement``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement


      :type: string *(optional)*


CfnInstance
^^^^^^^^^^^

.. py:class:: CfnInstance(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnInstance;

      .. code-tab:: javascript

         const { CfnInstance } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnInstance } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnInstanceProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: instanceAvailabilityZone

      :type: string *(readonly)*


   .. py:attribute:: instanceId

      :type: string *(readonly)*


   .. py:attribute:: instancePrivateDnsName

      :type: string *(readonly)*


   .. py:attribute:: instancePrivateIp

      :type: string *(readonly)*


   .. py:attribute:: instancePublicDnsName

      :type: string *(readonly)*


   .. py:attribute:: instancePublicIp

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnInstanceProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*

   .. py:class:: AssociationParameterProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.AssociationParameterProperty;

         .. code-tab:: javascript

            // CfnInstance.AssociationParameterProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.AssociationParameterProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: key

         ``CfnInstance.AssociationParameterProperty.Key``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-key


         :type: string


      .. py:attribute:: value

         ``CfnInstance.AssociationParameterProperty.Value``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-value


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


   .. py:class:: BlockDeviceMappingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.BlockDeviceMappingProperty;

         .. code-tab:: javascript

            // CfnInstance.BlockDeviceMappingProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.BlockDeviceMappingProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: deviceName

         ``CfnInstance.BlockDeviceMappingProperty.DeviceName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-devicename


         :type: string


      .. py:attribute:: ebs

         ``CfnInstance.BlockDeviceMappingProperty.Ebs``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-ebs


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.EbsProperty`\  *(optional)*


      .. py:attribute:: noDevice

         ``CfnInstance.BlockDeviceMappingProperty.NoDevice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-nodevice


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.NoDeviceProperty`\  *(optional)*


      .. py:attribute:: virtualName

         ``CfnInstance.BlockDeviceMappingProperty.VirtualName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-virtualname


         :type: string *(optional)*


   .. py:class:: CreditSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.CreditSpecificationProperty;

         .. code-tab:: javascript

            // CfnInstance.CreditSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.CreditSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: cpuCredits

         ``CfnInstance.CreditSpecificationProperty.CPUCredits``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html#cfn-ec2-instance-creditspecification-cpucredits


         :type: string *(optional)*


   .. py:class:: EbsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.EbsProperty;

         .. code-tab:: javascript

            // CfnInstance.EbsProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.EbsProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: deleteOnTermination

         ``CfnInstance.EbsProperty.DeleteOnTermination``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-deleteontermination


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: encrypted

         ``CfnInstance.EbsProperty.Encrypted``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-encrypted


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: iops

         ``CfnInstance.EbsProperty.Iops``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-iops


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: snapshotId

         ``CfnInstance.EbsProperty.SnapshotId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-snapshotid


         :type: string *(optional)*


      .. py:attribute:: volumeSize

         ``CfnInstance.EbsProperty.VolumeSize``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumesize


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: volumeType

         ``CfnInstance.EbsProperty.VolumeType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumetype


         :type: string *(optional)*


   .. py:class:: ElasticGpuSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.ElasticGpuSpecificationProperty;

         .. code-tab:: javascript

            // CfnInstance.ElasticGpuSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.ElasticGpuSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: type

         ``CfnInstance.ElasticGpuSpecificationProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html#cfn-ec2-instance-elasticgpuspecification-type


         :type: string


   .. py:class:: ElasticInferenceAcceleratorProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.ElasticInferenceAcceleratorProperty;

         .. code-tab:: javascript

            // CfnInstance.ElasticInferenceAcceleratorProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.ElasticInferenceAcceleratorProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: type

         ``CfnInstance.ElasticInferenceAcceleratorProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-type


         :type: string


   .. py:class:: InstanceIpv6AddressProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.InstanceIpv6AddressProperty;

         .. code-tab:: javascript

            // CfnInstance.InstanceIpv6AddressProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.InstanceIpv6AddressProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: ipv6Address

         ``CfnInstance.InstanceIpv6AddressProperty.Ipv6Address``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html#cfn-ec2-instance-instanceipv6address-ipv6address


         :type: string


   .. py:class:: LaunchTemplateSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.LaunchTemplateSpecificationProperty;

         .. code-tab:: javascript

            // CfnInstance.LaunchTemplateSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.LaunchTemplateSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: version

         ``CfnInstance.LaunchTemplateSpecificationProperty.Version``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-version


         :type: string


      .. py:attribute:: launchTemplateId

         ``CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplateid


         :type: string *(optional)*


      .. py:attribute:: launchTemplateName

         ``CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplatename


         :type: string *(optional)*


   .. py:class:: LicenseSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.LicenseSpecificationProperty;

         .. code-tab:: javascript

            // CfnInstance.LicenseSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.LicenseSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: licenseConfigurationArn

         ``CfnInstance.LicenseSpecificationProperty.LicenseConfigurationArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html#cfn-ec2-instance-licensespecification-licenseconfigurationarn


         :type: string


   .. py:class:: NetworkInterfaceProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.NetworkInterfaceProperty;

         .. code-tab:: javascript

            // CfnInstance.NetworkInterfaceProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.NetworkInterfaceProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: deviceIndex

         ``CfnInstance.NetworkInterfaceProperty.DeviceIndex``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-deviceindex


         :type: string


      .. py:attribute:: associatePublicIpAddress

         ``CfnInstance.NetworkInterfaceProperty.AssociatePublicIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-associatepubip


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: deleteOnTermination

         ``CfnInstance.NetworkInterfaceProperty.DeleteOnTermination``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-delete


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: description

         ``CfnInstance.NetworkInterfaceProperty.Description``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-description


         :type: string *(optional)*


      .. py:attribute:: groupSet

         ``CfnInstance.NetworkInterfaceProperty.GroupSet``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-groupset


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: ipv6AddressCount

         ``CfnInstance.NetworkInterfaceProperty.Ipv6AddressCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresscount


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: ipv6Addresses

         ``CfnInstance.NetworkInterfaceProperty.Ipv6Addresses``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresses


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty`\ )[] *(optional)*


      .. py:attribute:: networkInterfaceId

         ``CfnInstance.NetworkInterfaceProperty.NetworkInterfaceId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-network-iface


         :type: string *(optional)*


      .. py:attribute:: privateIpAddress

         ``CfnInstance.NetworkInterfaceProperty.PrivateIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddress


         :type: string *(optional)*


      .. py:attribute:: privateIpAddresses

         ``CfnInstance.NetworkInterfaceProperty.PrivateIpAddresses``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddresses


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.PrivateIpAddressSpecificationProperty`\ )[] *(optional)*


      .. py:attribute:: secondaryPrivateIpAddressCount

         ``CfnInstance.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-secondprivateip


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: subnetId

         ``CfnInstance.NetworkInterfaceProperty.SubnetId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-subnetid


         :type: string *(optional)*


   .. py:class:: NoDeviceProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.NoDeviceProperty;

         .. code-tab:: javascript

            // CfnInstance.NoDeviceProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.NoDeviceProperty } from '@aws-cdk/aws-ec2';





   .. py:class:: PrivateIpAddressSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.PrivateIpAddressSpecificationProperty;

         .. code-tab:: javascript

            // CfnInstance.PrivateIpAddressSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.PrivateIpAddressSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: primary

         ``CfnInstance.PrivateIpAddressSpecificationProperty.Primary``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: privateIpAddress

         ``CfnInstance.PrivateIpAddressSpecificationProperty.PrivateIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress


         :type: string


   .. py:class:: SsmAssociationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.SsmAssociationProperty;

         .. code-tab:: javascript

            // CfnInstance.SsmAssociationProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.SsmAssociationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: documentName

         ``CfnInstance.SsmAssociationProperty.DocumentName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-documentname


         :type: string


      .. py:attribute:: associationParameters

         ``CfnInstance.SsmAssociationProperty.AssociationParameters``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-associationparameters


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.AssociationParameterProperty`\ )[] *(optional)*


   .. py:class:: VolumeProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnInstance.VolumeProperty;

         .. code-tab:: javascript

            // CfnInstance.VolumeProperty is an interface

         .. code-tab:: typescript

            import { CfnInstance.VolumeProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: device

         ``CfnInstance.VolumeProperty.Device``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-device


         :type: string


      .. py:attribute:: volumeId

         ``CfnInstance.VolumeProperty.VolumeId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-volumeid


         :type: string



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnInstanceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnInstanceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnInstanceProps;

      .. code-tab:: javascript

         // CfnInstanceProps is an interface

      .. code-tab:: typescript

         import { CfnInstanceProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: additionalInfo

      ``AWS::EC2::Instance.AdditionalInfo``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo


      :type: string *(optional)*


   .. py:attribute:: affinity

      ``AWS::EC2::Instance.Affinity``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity


      :type: string *(optional)*


   .. py:attribute:: availabilityZone

      ``AWS::EC2::Instance.AvailabilityZone``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone


      :type: string *(optional)*


   .. py:attribute:: blockDeviceMappings

      ``AWS::EC2::Instance.BlockDeviceMappings``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.BlockDeviceMappingProperty`\ )[] *(optional)*


   .. py:attribute:: creditSpecification

      ``AWS::EC2::Instance.CreditSpecification``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.CreditSpecificationProperty`\  *(optional)*


   .. py:attribute:: disableApiTermination

      ``AWS::EC2::Instance.DisableApiTermination``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: ebsOptimized

      ``AWS::EC2::Instance.EbsOptimized``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: elasticGpuSpecifications

      ``AWS::EC2::Instance.ElasticGpuSpecifications``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.ElasticGpuSpecificationProperty`\ )[] *(optional)*


   .. py:attribute:: elasticInferenceAccelerators

      ``AWS::EC2::Instance.ElasticInferenceAccelerators``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.ElasticInferenceAcceleratorProperty`\ )[] *(optional)*


   .. py:attribute:: hostId

      ``AWS::EC2::Instance.HostId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid


      :type: string *(optional)*


   .. py:attribute:: iamInstanceProfile

      ``AWS::EC2::Instance.IamInstanceProfile``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile


      :type: string *(optional)*


   .. py:attribute:: imageId

      ``AWS::EC2::Instance.ImageId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid


      :type: string *(optional)*


   .. py:attribute:: instanceInitiatedShutdownBehavior

      ``AWS::EC2::Instance.InstanceInitiatedShutdownBehavior``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior


      :type: string *(optional)*


   .. py:attribute:: instanceType

      ``AWS::EC2::Instance.InstanceType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype


      :type: string *(optional)*


   .. py:attribute:: ipv6AddressCount

      ``AWS::EC2::Instance.Ipv6AddressCount``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: ipv6Addresses

      ``AWS::EC2::Instance.Ipv6Addresses``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.InstanceIpv6AddressProperty`\ )[] *(optional)*


   .. py:attribute:: kernelId

      ``AWS::EC2::Instance.KernelId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid


      :type: string *(optional)*


   .. py:attribute:: keyName

      ``AWS::EC2::Instance.KeyName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname


      :type: string *(optional)*


   .. py:attribute:: launchTemplate

      ``AWS::EC2::Instance.LaunchTemplate``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.LaunchTemplateSpecificationProperty`\  *(optional)*


   .. py:attribute:: licenseSpecifications

      ``AWS::EC2::Instance.LicenseSpecifications``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.LicenseSpecificationProperty`\ )[] *(optional)*


   .. py:attribute:: monitoring

      ``AWS::EC2::Instance.Monitoring``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: networkInterfaces

      ``AWS::EC2::Instance.NetworkInterfaces``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.NetworkInterfaceProperty`\ )[] *(optional)*


   .. py:attribute:: placementGroupName

      ``AWS::EC2::Instance.PlacementGroupName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname


      :type: string *(optional)*


   .. py:attribute:: privateIpAddress

      ``AWS::EC2::Instance.PrivateIpAddress``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress


      :type: string *(optional)*


   .. py:attribute:: ramdiskId

      ``AWS::EC2::Instance.RamdiskId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid


      :type: string *(optional)*


   .. py:attribute:: securityGroupIds

      ``AWS::EC2::Instance.SecurityGroupIds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: securityGroups

      ``AWS::EC2::Instance.SecurityGroups``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: sourceDestCheck

      ``AWS::EC2::Instance.SourceDestCheck``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: ssmAssociations

      ``AWS::EC2::Instance.SsmAssociations``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.SsmAssociationProperty`\ )[] *(optional)*


   .. py:attribute:: subnetId

      ``AWS::EC2::Instance.SubnetId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid


      :type: string *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::Instance.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


   .. py:attribute:: tenancy

      ``AWS::EC2::Instance.Tenancy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy


      :type: string *(optional)*


   .. py:attribute:: userData

      ``AWS::EC2::Instance.UserData``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata


      :type: string *(optional)*


   .. py:attribute:: volumes

      ``AWS::EC2::Instance.Volumes``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnInstance.VolumeProperty`\ )[] *(optional)*


CfnInternetGateway
^^^^^^^^^^^^^^^^^^

.. py:class:: CfnInternetGateway(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnInternetGateway;

      .. code-tab:: javascript

         const { CfnInternetGateway } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnInternetGateway } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnInternetGatewayProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: internetGatewayName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnInternetGatewayProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnInternetGatewayProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnInternetGatewayProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnInternetGatewayProps;

      .. code-tab:: javascript

         // CfnInternetGatewayProps is an interface

      .. code-tab:: typescript

         import { CfnInternetGatewayProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: tags

      ``AWS::EC2::InternetGateway.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnLaunchTemplate
^^^^^^^^^^^^^^^^^

.. py:class:: CfnLaunchTemplate(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnLaunchTemplate;

      .. code-tab:: javascript

         const { CfnLaunchTemplate } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnLaunchTemplate } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplateProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: launchTemplateDefaultVersionNumber

      :type: string *(readonly)*


   .. py:attribute:: launchTemplateId

      :type: string *(readonly)*


   .. py:attribute:: launchTemplateLatestVersionNumber

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplateProps`\  *(readonly)*

   .. py:class:: BlockDeviceMappingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.BlockDeviceMappingProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.BlockDeviceMappingProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.BlockDeviceMappingProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: deviceName

         ``CfnLaunchTemplate.BlockDeviceMappingProperty.DeviceName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-devicename


         :type: string *(optional)*


      .. py:attribute:: ebs

         ``CfnLaunchTemplate.BlockDeviceMappingProperty.Ebs``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.EbsProperty`\  *(optional)*


      .. py:attribute:: noDevice

         ``CfnLaunchTemplate.BlockDeviceMappingProperty.NoDevice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-nodevice


         :type: string *(optional)*


      .. py:attribute:: virtualName

         ``CfnLaunchTemplate.BlockDeviceMappingProperty.VirtualName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-virtualname


         :type: string *(optional)*


   .. py:class:: CreditSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.CreditSpecificationProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.CreditSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.CreditSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: cpuCredits

         ``CfnLaunchTemplate.CreditSpecificationProperty.CpuCredits``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification-cpucredits


         :type: string *(optional)*


   .. py:class:: EbsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.EbsProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.EbsProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.EbsProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: deleteOnTermination

         ``CfnLaunchTemplate.EbsProperty.DeleteOnTermination``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-deleteontermination


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: encrypted

         ``CfnLaunchTemplate.EbsProperty.Encrypted``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-encrypted


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: iops

         ``CfnLaunchTemplate.EbsProperty.Iops``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-iops


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: kmsKeyId

         ``CfnLaunchTemplate.EbsProperty.KmsKeyId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-kmskeyid


         :type: string *(optional)*


      .. py:attribute:: snapshotId

         ``CfnLaunchTemplate.EbsProperty.SnapshotId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-snapshotid


         :type: string *(optional)*


      .. py:attribute:: volumeSize

         ``CfnLaunchTemplate.EbsProperty.VolumeSize``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumesize


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: volumeType

         ``CfnLaunchTemplate.EbsProperty.VolumeType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumetype


         :type: string *(optional)*


   .. py:class:: ElasticGpuSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.ElasticGpuSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.ElasticGpuSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: type

         ``CfnLaunchTemplate.ElasticGpuSpecificationProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html#cfn-ec2-launchtemplate-elasticgpuspecification-type


         :type: string *(optional)*


   .. py:class:: IamInstanceProfileProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.IamInstanceProfileProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.IamInstanceProfileProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.IamInstanceProfileProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: arn

         ``CfnLaunchTemplate.IamInstanceProfileProperty.Arn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-arn


         :type: string *(optional)*


      .. py:attribute:: name

         ``CfnLaunchTemplate.IamInstanceProfileProperty.Name``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-name


         :type: string *(optional)*


   .. py:class:: InstanceMarketOptionsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.InstanceMarketOptionsProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.InstanceMarketOptionsProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: marketType

         ``CfnLaunchTemplate.InstanceMarketOptionsProperty.MarketType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-markettype


         :type: string *(optional)*


      .. py:attribute:: spotOptions

         ``CfnLaunchTemplate.InstanceMarketOptionsProperty.SpotOptions``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.SpotOptionsProperty`\  *(optional)*


   .. py:class:: Ipv6AddProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.Ipv6AddProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.Ipv6AddProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.Ipv6AddProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: ipv6Address

         ``CfnLaunchTemplate.Ipv6AddProperty.Ipv6Address``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address


         :type: string *(optional)*


   .. py:class:: LaunchTemplateDataProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.LaunchTemplateDataProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.LaunchTemplateDataProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.LaunchTemplateDataProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: blockDeviceMappings

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.BlockDeviceMappings``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.BlockDeviceMappingProperty`\ )[] *(optional)*


      .. py:attribute:: creditSpecification

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.CreditSpecification``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.CreditSpecificationProperty`\  *(optional)*


      .. py:attribute:: disableApiTermination

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.DisableApiTermination``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-disableapitermination


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: ebsOptimized

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.EbsOptimized``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ebsoptimized


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: elasticGpuSpecifications

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.ElasticGpuSpecifications``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticgpuspecifications


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.ElasticGpuSpecificationProperty`\ )[] *(optional)*


      .. py:attribute:: iamInstanceProfile

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.IamInstanceProfile``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.IamInstanceProfileProperty`\  *(optional)*


      .. py:attribute:: imageId

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.ImageId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-imageid


         :type: string *(optional)*


      .. py:attribute:: instanceInitiatedShutdownBehavior

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceInitiatedShutdownBehavior``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instanceinitiatedshutdownbehavior


         :type: string *(optional)*


      .. py:attribute:: instanceMarketOptions

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceMarketOptions``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.InstanceMarketOptionsProperty`\  *(optional)*


      .. py:attribute:: instanceType

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancetype


         :type: string *(optional)*


      .. py:attribute:: kernelId

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.KernelId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid


         :type: string *(optional)*


      .. py:attribute:: keyName

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.KeyName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-keyname


         :type: string *(optional)*


      .. py:attribute:: monitoring

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.Monitoring``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.MonitoringProperty`\  *(optional)*


      .. py:attribute:: networkInterfaces

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.NetworkInterfaces``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-networkinterfaces


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.NetworkInterfaceProperty`\ )[] *(optional)*


      .. py:attribute:: placement

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.Placement``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-placement


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.PlacementProperty`\  *(optional)*


      .. py:attribute:: ramDiskId

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.RamDiskId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ramdiskid


         :type: string *(optional)*


      .. py:attribute:: securityGroupIds

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroupIds``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroupids


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: securityGroups

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroups``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroups


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: tagSpecifications

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.TagSpecifications``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.TagSpecificationProperty`\ )[] *(optional)*


      .. py:attribute:: userData

         ``CfnLaunchTemplate.LaunchTemplateDataProperty.UserData``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-userdata


         :type: string *(optional)*


   .. py:class:: MonitoringProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.MonitoringProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.MonitoringProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.MonitoringProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: enabled

         ``CfnLaunchTemplate.MonitoringProperty.Enabled``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring-enabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: NetworkInterfaceProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.NetworkInterfaceProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.NetworkInterfaceProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.NetworkInterfaceProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: associatePublicIpAddress

         ``CfnLaunchTemplate.NetworkInterfaceProperty.AssociatePublicIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: deleteOnTermination

         ``CfnLaunchTemplate.NetworkInterfaceProperty.DeleteOnTermination``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: description

         ``CfnLaunchTemplate.NetworkInterfaceProperty.Description``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description


         :type: string *(optional)*


      .. py:attribute:: deviceIndex

         ``CfnLaunchTemplate.NetworkInterfaceProperty.DeviceIndex``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: groups

         ``CfnLaunchTemplate.NetworkInterfaceProperty.Groups``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: ipv6AddressCount

         ``CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6AddressCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: ipv6Addresses

         ``CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6Addresses``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.Ipv6AddProperty`\ )[] *(optional)*


      .. py:attribute:: networkInterfaceId

         ``CfnLaunchTemplate.NetworkInterfaceProperty.NetworkInterfaceId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid


         :type: string *(optional)*


      .. py:attribute:: privateIpAddress

         ``CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress


         :type: string *(optional)*


      .. py:attribute:: privateIpAddresses

         ``CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddresses``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.PrivateIpAddProperty`\ )[] *(optional)*


      .. py:attribute:: secondaryPrivateIpAddressCount

         ``CfnLaunchTemplate.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: subnetId

         ``CfnLaunchTemplate.NetworkInterfaceProperty.SubnetId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid


         :type: string *(optional)*


   .. py:class:: PlacementProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.PlacementProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.PlacementProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.PlacementProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: affinity

         ``CfnLaunchTemplate.PlacementProperty.Affinity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-affinity


         :type: string *(optional)*


      .. py:attribute:: availabilityZone

         ``CfnLaunchTemplate.PlacementProperty.AvailabilityZone``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-availabilityzone


         :type: string *(optional)*


      .. py:attribute:: groupName

         ``CfnLaunchTemplate.PlacementProperty.GroupName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-groupname


         :type: string *(optional)*


      .. py:attribute:: hostId

         ``CfnLaunchTemplate.PlacementProperty.HostId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostid


         :type: string *(optional)*


      .. py:attribute:: tenancy

         ``CfnLaunchTemplate.PlacementProperty.Tenancy``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-tenancy


         :type: string *(optional)*


   .. py:class:: PrivateIpAddProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.PrivateIpAddProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.PrivateIpAddProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.PrivateIpAddProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: primary

         ``CfnLaunchTemplate.PrivateIpAddProperty.Primary``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-primary


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: privateIpAddress

         ``CfnLaunchTemplate.PrivateIpAddProperty.PrivateIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-privateipaddress


         :type: string *(optional)*


   .. py:class:: SpotOptionsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.SpotOptionsProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.SpotOptionsProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.SpotOptionsProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: instanceInterruptionBehavior

         ``CfnLaunchTemplate.SpotOptionsProperty.InstanceInterruptionBehavior``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-instanceinterruptionbehavior


         :type: string *(optional)*


      .. py:attribute:: maxPrice

         ``CfnLaunchTemplate.SpotOptionsProperty.MaxPrice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-maxprice


         :type: string *(optional)*


      .. py:attribute:: spotInstanceType

         ``CfnLaunchTemplate.SpotOptionsProperty.SpotInstanceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-spotinstancetype


         :type: string *(optional)*


   .. py:class:: TagSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnLaunchTemplate.TagSpecificationProperty;

         .. code-tab:: javascript

            // CfnLaunchTemplate.TagSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnLaunchTemplate.TagSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: resourceType

         ``CfnLaunchTemplate.TagSpecificationProperty.ResourceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-resourcetype


         :type: string *(optional)*


      .. py:attribute:: tags

         ``CfnLaunchTemplate.TagSpecificationProperty.Tags``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-tags


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnLaunchTemplateProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnLaunchTemplateProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnLaunchTemplateProps;

      .. code-tab:: javascript

         // CfnLaunchTemplateProps is an interface

      .. code-tab:: typescript

         import { CfnLaunchTemplateProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: launchTemplateData

      ``AWS::EC2::LaunchTemplate.LaunchTemplateData``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnLaunchTemplate.LaunchTemplateDataProperty`\  *(optional)*


   .. py:attribute:: launchTemplateName

      ``AWS::EC2::LaunchTemplate.LaunchTemplateName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename


      :type: string *(optional)*


CfnNatGateway
^^^^^^^^^^^^^

.. py:class:: CfnNatGateway(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNatGateway;

      .. code-tab:: javascript

         const { CfnNatGateway } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnNatGateway } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnNatGatewayProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: natGatewayId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnNatGatewayProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnNatGatewayProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNatGatewayProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNatGatewayProps;

      .. code-tab:: javascript

         // CfnNatGatewayProps is an interface

      .. code-tab:: typescript

         import { CfnNatGatewayProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: allocationId

      ``AWS::EC2::NatGateway.AllocationId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid


      :type: string


   .. py:attribute:: subnetId

      ``AWS::EC2::NatGateway.SubnetId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid


      :type: string


   .. py:attribute:: tags

      ``AWS::EC2::NatGateway.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnNetworkAcl
^^^^^^^^^^^^^

.. py:class:: CfnNetworkAcl(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkAcl;

      .. code-tab:: javascript

         const { CfnNetworkAcl } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnNetworkAcl } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkAclProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: networkAclName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkAclProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnNetworkAclEntry
^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkAclEntry(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkAclEntry;

      .. code-tab:: javascript

         const { CfnNetworkAclEntry } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnNetworkAclEntry } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkAclEntryProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: networkAclEntryName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkAclEntryProps`\  *(readonly)*

   .. py:class:: IcmpProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnNetworkAclEntry.IcmpProperty;

         .. code-tab:: javascript

            // CfnNetworkAclEntry.IcmpProperty is an interface

         .. code-tab:: typescript

            import { CfnNetworkAclEntry.IcmpProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: code

         ``CfnNetworkAclEntry.IcmpProperty.Code``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-code


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: type

         ``CfnNetworkAclEntry.IcmpProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-type


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: PortRangeProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnNetworkAclEntry.PortRangeProperty;

         .. code-tab:: javascript

            // CfnNetworkAclEntry.PortRangeProperty is an interface

         .. code-tab:: typescript

            import { CfnNetworkAclEntry.PortRangeProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: from

         ``CfnNetworkAclEntry.PortRangeProperty.From``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-from


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: to

         ``CfnNetworkAclEntry.PortRangeProperty.To``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-to


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnNetworkAclEntryProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkAclEntryProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkAclEntryProps;

      .. code-tab:: javascript

         // CfnNetworkAclEntryProps is an interface

      .. code-tab:: typescript

         import { CfnNetworkAclEntryProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: networkAclId

      ``AWS::EC2::NetworkAclEntry.NetworkAclId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-networkaclid


      :type: string


   .. py:attribute:: protocol

      ``AWS::EC2::NetworkAclEntry.Protocol``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol


      :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: ruleAction

      ``AWS::EC2::NetworkAclEntry.RuleAction``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ruleaction


      :type: string


   .. py:attribute:: ruleNumber

      ``AWS::EC2::NetworkAclEntry.RuleNumber``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-rulenumber


      :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: cidrBlock

      ``AWS::EC2::NetworkAclEntry.CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-cidrblock


      :type: string *(optional)*


   .. py:attribute:: egress

      ``AWS::EC2::NetworkAclEntry.Egress``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-egress


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: icmp

      ``AWS::EC2::NetworkAclEntry.Icmp``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-icmp


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnNetworkAclEntry.IcmpProperty`\  *(optional)*


   .. py:attribute:: ipv6CidrBlock

      ``AWS::EC2::NetworkAclEntry.Ipv6CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ipv6cidrblock


      :type: string *(optional)*


   .. py:attribute:: portRange

      ``AWS::EC2::NetworkAclEntry.PortRange``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-portrange


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnNetworkAclEntry.PortRangeProperty`\  *(optional)*


CfnNetworkAclProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkAclProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkAclProps;

      .. code-tab:: javascript

         // CfnNetworkAclProps is an interface

      .. code-tab:: typescript

         import { CfnNetworkAclProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: vpcId

      ``AWS::EC2::NetworkAcl.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-vpcid


      :type: string


   .. py:attribute:: tags

      ``AWS::EC2::NetworkAcl.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnNetworkInterface
^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkInterface(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkInterface;

      .. code-tab:: javascript

         const { CfnNetworkInterface } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnNetworkInterface } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterfaceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: networkInterfaceName

      :type: string *(readonly)*


   .. py:attribute:: networkInterfacePrimaryPrivateIpAddress

      :type: string *(readonly)*


   .. py:attribute:: networkInterfaceSecondaryPrivateIpAddresses

      :type: string[] *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterfaceProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*

   .. py:class:: InstanceIpv6AddressProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnNetworkInterface.InstanceIpv6AddressProperty;

         .. code-tab:: javascript

            // CfnNetworkInterface.InstanceIpv6AddressProperty is an interface

         .. code-tab:: typescript

            import { CfnNetworkInterface.InstanceIpv6AddressProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: ipv6Address

         ``CfnNetworkInterface.InstanceIpv6AddressProperty.Ipv6Address``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html#cfn-ec2-networkinterface-instanceipv6address-ipv6address


         :type: string


   .. py:class:: PrivateIpAddressSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty;

         .. code-tab:: javascript

            // CfnNetworkInterface.PrivateIpAddressSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnNetworkInterface.PrivateIpAddressSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: primary

         ``CfnNetworkInterface.PrivateIpAddressSpecificationProperty.Primary``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: privateIpAddress

         ``CfnNetworkInterface.PrivateIpAddressSpecificationProperty.PrivateIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress


         :type: string



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnNetworkInterfaceAttachment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkInterfaceAttachment(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkInterfaceAttachment;

      .. code-tab:: javascript

         const { CfnNetworkInterfaceAttachment } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnNetworkInterfaceAttachment } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: networkInterfaceAttachmentName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterfaceAttachmentProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnNetworkInterfaceAttachmentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkInterfaceAttachmentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkInterfaceAttachmentProps;

      .. code-tab:: javascript

         // CfnNetworkInterfaceAttachmentProps is an interface

      .. code-tab:: typescript

         import { CfnNetworkInterfaceAttachmentProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: deviceIndex

      ``AWS::EC2::NetworkInterfaceAttachment.DeviceIndex``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex


      :type: string


   .. py:attribute:: instanceId

      ``AWS::EC2::NetworkInterfaceAttachment.InstanceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid


      :type: string


   .. py:attribute:: networkInterfaceId

      ``AWS::EC2::NetworkInterfaceAttachment.NetworkInterfaceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid


      :type: string


   .. py:attribute:: deleteOnTermination

      ``AWS::EC2::NetworkInterfaceAttachment.DeleteOnTermination``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnNetworkInterfacePermission
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkInterfacePermission(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkInterfacePermission;

      .. code-tab:: javascript

         const { CfnNetworkInterfacePermission } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnNetworkInterfacePermission } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: networkInterfacePermissionId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterfacePermissionProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnNetworkInterfacePermissionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkInterfacePermissionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkInterfacePermissionProps;

      .. code-tab:: javascript

         // CfnNetworkInterfacePermissionProps is an interface

      .. code-tab:: typescript

         import { CfnNetworkInterfacePermissionProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: awsAccountId

      ``AWS::EC2::NetworkInterfacePermission.AwsAccountId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid


      :type: string


   .. py:attribute:: networkInterfaceId

      ``AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid


      :type: string


   .. py:attribute:: permission

      ``AWS::EC2::NetworkInterfacePermission.Permission``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission


      :type: string


CfnNetworkInterfaceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnNetworkInterfaceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnNetworkInterfaceProps;

      .. code-tab:: javascript

         // CfnNetworkInterfaceProps is an interface

      .. code-tab:: typescript

         import { CfnNetworkInterfaceProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: subnetId

      ``AWS::EC2::NetworkInterface.SubnetId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-subnetid


      :type: string


   .. py:attribute:: description

      ``AWS::EC2::NetworkInterface.Description``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-description


      :type: string *(optional)*


   .. py:attribute:: groupSet

      ``AWS::EC2::NetworkInterface.GroupSet``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-groupset


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: interfaceType

      ``AWS::EC2::NetworkInterface.InterfaceType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-interfacetype


      :type: string *(optional)*


   .. py:attribute:: ipv6AddressCount

      ``AWS::EC2::NetworkInterface.Ipv6AddressCount``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresscount


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: ipv6Addresses

      ``AWS::EC2::NetworkInterface.Ipv6Addresses``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresses


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterface.InstanceIpv6AddressProperty`\  *(optional)*


   .. py:attribute:: privateIpAddress

      ``AWS::EC2::NetworkInterface.PrivateIpAddress``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddress


      :type: string *(optional)*


   .. py:attribute:: privateIpAddresses

      ``AWS::EC2::NetworkInterface.PrivateIpAddresses``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddresses


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnNetworkInterface.PrivateIpAddressSpecificationProperty`\ )[] *(optional)*


   .. py:attribute:: secondaryPrivateIpAddressCount

      ``AWS::EC2::NetworkInterface.SecondaryPrivateIpAddressCount``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-secondaryprivateipcount


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: sourceDestCheck

      ``AWS::EC2::NetworkInterface.SourceDestCheck``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-sourcedestcheck


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::NetworkInterface.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnPlacementGroup
^^^^^^^^^^^^^^^^^

.. py:class:: CfnPlacementGroup(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnPlacementGroup;

      .. code-tab:: javascript

         const { CfnPlacementGroup } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnPlacementGroup } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnPlacementGroupProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: placementGroupName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnPlacementGroupProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnPlacementGroupProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnPlacementGroupProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnPlacementGroupProps;

      .. code-tab:: javascript

         // CfnPlacementGroupProps is an interface

      .. code-tab:: typescript

         import { CfnPlacementGroupProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: strategy

      ``AWS::EC2::PlacementGroup.Strategy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy


      :type: string *(optional)*


CfnRoute
^^^^^^^^

.. py:class:: CfnRoute(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnRoute;

      .. code-tab:: javascript

         const { CfnRoute } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnRoute } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnRouteProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnRouteProps`\  *(readonly)*


   .. py:attribute:: routeName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnRouteProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRouteProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnRouteProps;

      .. code-tab:: javascript

         // CfnRouteProps is an interface

      .. code-tab:: typescript

         import { CfnRouteProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: routeTableId

      ``AWS::EC2::Route.RouteTableId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid


      :type: string


   .. py:attribute:: destinationCidrBlock

      ``AWS::EC2::Route.DestinationCidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock


      :type: string *(optional)*


   .. py:attribute:: destinationIpv6CidrBlock

      ``AWS::EC2::Route.DestinationIpv6CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock


      :type: string *(optional)*


   .. py:attribute:: egressOnlyInternetGatewayId

      ``AWS::EC2::Route.EgressOnlyInternetGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid


      :type: string *(optional)*


   .. py:attribute:: gatewayId

      ``AWS::EC2::Route.GatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid


      :type: string *(optional)*


   .. py:attribute:: instanceId

      ``AWS::EC2::Route.InstanceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid


      :type: string *(optional)*


   .. py:attribute:: natGatewayId

      ``AWS::EC2::Route.NatGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid


      :type: string *(optional)*


   .. py:attribute:: networkInterfaceId

      ``AWS::EC2::Route.NetworkInterfaceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid


      :type: string *(optional)*


   .. py:attribute:: vpcPeeringConnectionId

      ``AWS::EC2::Route.VpcPeeringConnectionId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid


      :type: string *(optional)*


CfnRouteTable
^^^^^^^^^^^^^

.. py:class:: CfnRouteTable(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnRouteTable;

      .. code-tab:: javascript

         const { CfnRouteTable } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnRouteTable } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnRouteTableProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnRouteTableProps`\  *(readonly)*


   .. py:attribute:: routeTableId

      :type: string *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnRouteTableProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRouteTableProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnRouteTableProps;

      .. code-tab:: javascript

         // CfnRouteTableProps is an interface

      .. code-tab:: typescript

         import { CfnRouteTableProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: vpcId

      ``AWS::EC2::RouteTable.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-vpcid


      :type: string


   .. py:attribute:: tags

      ``AWS::EC2::RouteTable.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnSecurityGroup
^^^^^^^^^^^^^^^^

.. py:class:: CfnSecurityGroup(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSecurityGroup;

      .. code-tab:: javascript

         const { CfnSecurityGroup } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSecurityGroup } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroupProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroupProps`\  *(readonly)*


   .. py:attribute:: securityGroupId

      :type: string *(readonly)*


   .. py:attribute:: securityGroupName

      :type: string *(readonly)*


   .. py:attribute:: securityGroupVpcId

      :type: string *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*

   .. py:class:: EgressProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSecurityGroup.EgressProperty;

         .. code-tab:: javascript

            // CfnSecurityGroup.EgressProperty is an interface

         .. code-tab:: typescript

            import { CfnSecurityGroup.EgressProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: ipProtocol

         ``CfnSecurityGroup.EgressProperty.IpProtocol``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol


         :type: string


      .. py:attribute:: cidrIp

         ``CfnSecurityGroup.EgressProperty.CidrIp``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip


         :type: string *(optional)*


      .. py:attribute:: cidrIpv6

         ``CfnSecurityGroup.EgressProperty.CidrIpv6``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6


         :type: string *(optional)*


      .. py:attribute:: description

         ``CfnSecurityGroup.EgressProperty.Description``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description


         :type: string *(optional)*


      .. py:attribute:: destinationPrefixListId

         ``CfnSecurityGroup.EgressProperty.DestinationPrefixListId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destinationprefixlistid


         :type: string *(optional)*


      .. py:attribute:: destinationSecurityGroupId

         ``CfnSecurityGroup.EgressProperty.DestinationSecurityGroupId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destsecgroupid


         :type: string *(optional)*


      .. py:attribute:: fromPort

         ``CfnSecurityGroup.EgressProperty.FromPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: toPort

         ``CfnSecurityGroup.EgressProperty.ToPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: IngressProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSecurityGroup.IngressProperty;

         .. code-tab:: javascript

            // CfnSecurityGroup.IngressProperty is an interface

         .. code-tab:: typescript

            import { CfnSecurityGroup.IngressProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: ipProtocol

         ``CfnSecurityGroup.IngressProperty.IpProtocol``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol


         :type: string


      .. py:attribute:: cidrIp

         ``CfnSecurityGroup.IngressProperty.CidrIp``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip


         :type: string *(optional)*


      .. py:attribute:: cidrIpv6

         ``CfnSecurityGroup.IngressProperty.CidrIpv6``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6


         :type: string *(optional)*


      .. py:attribute:: description

         ``CfnSecurityGroup.IngressProperty.Description``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description


         :type: string *(optional)*


      .. py:attribute:: fromPort

         ``CfnSecurityGroup.IngressProperty.FromPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: sourcePrefixListId

         ``CfnSecurityGroup.IngressProperty.SourcePrefixListId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-securitygroup-ingress-sourceprefixlistid


         :type: string *(optional)*


      .. py:attribute:: sourceSecurityGroupId

         ``CfnSecurityGroup.IngressProperty.SourceSecurityGroupId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupid


         :type: string *(optional)*


      .. py:attribute:: sourceSecurityGroupName

         ``CfnSecurityGroup.IngressProperty.SourceSecurityGroupName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupname


         :type: string *(optional)*


      .. py:attribute:: sourceSecurityGroupOwnerId

         ``CfnSecurityGroup.IngressProperty.SourceSecurityGroupOwnerId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupownerid


         :type: string *(optional)*


      .. py:attribute:: toPort

         ``CfnSecurityGroup.IngressProperty.ToPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSecurityGroupEgress
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecurityGroupEgress(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSecurityGroupEgress;

      .. code-tab:: javascript

         const { CfnSecurityGroupEgress } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSecurityGroupEgress } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroupEgressProps`\  *(readonly)*


   .. py:attribute:: securityGroupEgressId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSecurityGroupEgressProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecurityGroupEgressProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSecurityGroupEgressProps;

      .. code-tab:: javascript

         // CfnSecurityGroupEgressProps is an interface

      .. code-tab:: typescript

         import { CfnSecurityGroupEgressProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: groupId

      ``AWS::EC2::SecurityGroupEgress.GroupId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid


      :type: string


   .. py:attribute:: ipProtocol

      ``AWS::EC2::SecurityGroupEgress.IpProtocol``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol


      :type: string


   .. py:attribute:: cidrIp

      ``AWS::EC2::SecurityGroupEgress.CidrIp``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip


      :type: string *(optional)*


   .. py:attribute:: cidrIpv6

      ``AWS::EC2::SecurityGroupEgress.CidrIpv6``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6


      :type: string *(optional)*


   .. py:attribute:: description

      ``AWS::EC2::SecurityGroupEgress.Description``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description


      :type: string *(optional)*


   .. py:attribute:: destinationPrefixListId

      ``AWS::EC2::SecurityGroupEgress.DestinationPrefixListId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid


      :type: string *(optional)*


   .. py:attribute:: destinationSecurityGroupId

      ``AWS::EC2::SecurityGroupEgress.DestinationSecurityGroupId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid


      :type: string *(optional)*


   .. py:attribute:: fromPort

      ``AWS::EC2::SecurityGroupEgress.FromPort``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: toPort

      ``AWS::EC2::SecurityGroupEgress.ToPort``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnSecurityGroupIngress
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecurityGroupIngress(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSecurityGroupIngress;

      .. code-tab:: javascript

         const { CfnSecurityGroupIngress } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSecurityGroupIngress } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroupIngressProps`\  *(readonly)*


   .. py:attribute:: securityGroupIngressId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSecurityGroupIngressProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecurityGroupIngressProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSecurityGroupIngressProps;

      .. code-tab:: javascript

         // CfnSecurityGroupIngressProps is an interface

      .. code-tab:: typescript

         import { CfnSecurityGroupIngressProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: ipProtocol

      ``AWS::EC2::SecurityGroupIngress.IpProtocol``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol


      :type: string


   .. py:attribute:: cidrIp

      ``AWS::EC2::SecurityGroupIngress.CidrIp``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip


      :type: string *(optional)*


   .. py:attribute:: cidrIpv6

      ``AWS::EC2::SecurityGroupIngress.CidrIpv6``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6


      :type: string *(optional)*


   .. py:attribute:: description

      ``AWS::EC2::SecurityGroupIngress.Description``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description


      :type: string *(optional)*


   .. py:attribute:: fromPort

      ``AWS::EC2::SecurityGroupIngress.FromPort``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: groupId

      ``AWS::EC2::SecurityGroupIngress.GroupId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid


      :type: string *(optional)*


   .. py:attribute:: groupName

      ``AWS::EC2::SecurityGroupIngress.GroupName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname


      :type: string *(optional)*


   .. py:attribute:: sourcePrefixListId

      ``AWS::EC2::SecurityGroupIngress.SourcePrefixListId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid


      :type: string *(optional)*


   .. py:attribute:: sourceSecurityGroupId

      ``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid


      :type: string *(optional)*


   .. py:attribute:: sourceSecurityGroupName

      ``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname


      :type: string *(optional)*


   .. py:attribute:: sourceSecurityGroupOwnerId

      ``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupOwnerId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid


      :type: string *(optional)*


   .. py:attribute:: toPort

      ``AWS::EC2::SecurityGroupIngress.ToPort``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnSecurityGroupProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecurityGroupProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSecurityGroupProps;

      .. code-tab:: javascript

         // CfnSecurityGroupProps is an interface

      .. code-tab:: typescript

         import { CfnSecurityGroupProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: groupDescription

      ``AWS::EC2::SecurityGroup.GroupDescription``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription


      :type: string


   .. py:attribute:: groupName

      ``AWS::EC2::SecurityGroup.GroupName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname


      :type: string *(optional)*


   .. py:attribute:: securityGroupEgress

      ``AWS::EC2::SecurityGroup.SecurityGroupEgress``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroup.EgressProperty`\ )[] *(optional)*


   .. py:attribute:: securityGroupIngress

      ``AWS::EC2::SecurityGroup.SecurityGroupIngress``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSecurityGroup.IngressProperty`\ )[] *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::SecurityGroup.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


   .. py:attribute:: vpcId

      ``AWS::EC2::SecurityGroup.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid


      :type: string *(optional)*


CfnSpotFleet
^^^^^^^^^^^^

.. py:class:: CfnSpotFleet(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSpotFleet;

      .. code-tab:: javascript

         const { CfnSpotFleet } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSpotFleet } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleetProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleetProps`\  *(readonly)*


   .. py:attribute:: spotFleetName

      :type: string *(readonly)*

   .. py:class:: BlockDeviceMappingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.BlockDeviceMappingProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.BlockDeviceMappingProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.BlockDeviceMappingProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: deviceName

         ``CfnSpotFleet.BlockDeviceMappingProperty.DeviceName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-devicename


         :type: string


      .. py:attribute:: ebs

         ``CfnSpotFleet.BlockDeviceMappingProperty.Ebs``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-ebs


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.EbsBlockDeviceProperty`\  *(optional)*


      .. py:attribute:: noDevice

         ``CfnSpotFleet.BlockDeviceMappingProperty.NoDevice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-nodevice


         :type: string *(optional)*


      .. py:attribute:: virtualName

         ``CfnSpotFleet.BlockDeviceMappingProperty.VirtualName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-virtualname


         :type: string *(optional)*


   .. py:class:: ClassicLoadBalancerProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.ClassicLoadBalancerProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.ClassicLoadBalancerProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.ClassicLoadBalancerProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: name

         ``CfnSpotFleet.ClassicLoadBalancerProperty.Name``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html#cfn-ec2-spotfleet-classicloadbalancer-name


         :type: string


   .. py:class:: ClassicLoadBalancersConfigProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.ClassicLoadBalancersConfigProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.ClassicLoadBalancersConfigProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: classicLoadBalancers

         ``CfnSpotFleet.ClassicLoadBalancersConfigProperty.ClassicLoadBalancers``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html#cfn-ec2-spotfleet-classicloadbalancersconfig-classicloadbalancers


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancerProperty`\ )[]


   .. py:class:: EbsBlockDeviceProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.EbsBlockDeviceProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.EbsBlockDeviceProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.EbsBlockDeviceProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: deleteOnTermination

         ``CfnSpotFleet.EbsBlockDeviceProperty.DeleteOnTermination``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-deleteontermination


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: encrypted

         ``CfnSpotFleet.EbsBlockDeviceProperty.Encrypted``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-encrypted


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: iops

         ``CfnSpotFleet.EbsBlockDeviceProperty.Iops``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-iops


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: snapshotId

         ``CfnSpotFleet.EbsBlockDeviceProperty.SnapshotId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-snapshotid


         :type: string *(optional)*


      .. py:attribute:: volumeSize

         ``CfnSpotFleet.EbsBlockDeviceProperty.VolumeSize``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumesize


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: volumeType

         ``CfnSpotFleet.EbsBlockDeviceProperty.VolumeType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumetype


         :type: string *(optional)*


   .. py:class:: FleetLaunchTemplateSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.FleetLaunchTemplateSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.FleetLaunchTemplateSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: version

         ``CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.Version``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-version


         :type: string


      .. py:attribute:: launchTemplateId

         ``CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplateid


         :type: string *(optional)*


      .. py:attribute:: launchTemplateName

         ``CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplatename


         :type: string *(optional)*


   .. py:class:: GroupIdentifierProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.GroupIdentifierProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.GroupIdentifierProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.GroupIdentifierProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: groupId

         ``CfnSpotFleet.GroupIdentifierProperty.GroupId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html#cfn-ec2-spotfleet-groupidentifier-groupid


         :type: string


   .. py:class:: IamInstanceProfileSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.IamInstanceProfileSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.IamInstanceProfileSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: arn

         ``CfnSpotFleet.IamInstanceProfileSpecificationProperty.Arn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html#cfn-ec2-spotfleet-iaminstanceprofilespecification-arn


         :type: string *(optional)*


   .. py:class:: InstanceIpv6AddressProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.InstanceIpv6AddressProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.InstanceIpv6AddressProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.InstanceIpv6AddressProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: ipv6Address

         ``CfnSpotFleet.InstanceIpv6AddressProperty.Ipv6Address``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html#cfn-ec2-spotfleet-instanceipv6address-ipv6address


         :type: string


   .. py:class:: InstanceNetworkInterfaceSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: associatePublicIpAddress

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.AssociatePublicIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-associatepublicipaddress


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: deleteOnTermination

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeleteOnTermination``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deleteontermination


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: description

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Description``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-description


         :type: string *(optional)*


      .. py:attribute:: deviceIndex

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeviceIndex``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deviceindex


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: groups

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Groups``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-groups


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: ipv6AddressCount

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6AddressCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresscount


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: ipv6Addresses

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6Addresses``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresses


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.InstanceIpv6AddressProperty`\ )[] *(optional)*


      .. py:attribute:: networkInterfaceId

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.NetworkInterfaceId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-networkinterfaceid


         :type: string *(optional)*


      .. py:attribute:: privateIpAddresses

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.PrivateIpAddresses``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-privateipaddresses


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty`\ )[] *(optional)*


      .. py:attribute:: secondaryPrivateIpAddressCount

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SecondaryPrivateIpAddressCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-secondaryprivateipaddresscount


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: subnetId

         ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SubnetId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-subnetid


         :type: string *(optional)*


   .. py:class:: LaunchTemplateConfigProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.LaunchTemplateConfigProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.LaunchTemplateConfigProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.LaunchTemplateConfigProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: launchTemplateSpecification

         ``CfnSpotFleet.LaunchTemplateConfigProperty.LaunchTemplateSpecification``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-launchtemplatespecification


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.FleetLaunchTemplateSpecificationProperty`\  *(optional)*


      .. py:attribute:: overrides

         ``CfnSpotFleet.LaunchTemplateConfigProperty.Overrides``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-overrides


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateOverridesProperty`\ )[] *(optional)*


   .. py:class:: LaunchTemplateOverridesProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.LaunchTemplateOverridesProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.LaunchTemplateOverridesProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.LaunchTemplateOverridesProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: availabilityZone

         ``CfnSpotFleet.LaunchTemplateOverridesProperty.AvailabilityZone``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-availabilityzone


         :type: string *(optional)*


      .. py:attribute:: instanceType

         ``CfnSpotFleet.LaunchTemplateOverridesProperty.InstanceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancetype


         :type: string *(optional)*


      .. py:attribute:: spotPrice

         ``CfnSpotFleet.LaunchTemplateOverridesProperty.SpotPrice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-spotprice


         :type: string *(optional)*


      .. py:attribute:: subnetId

         ``CfnSpotFleet.LaunchTemplateOverridesProperty.SubnetId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-subnetid


         :type: string *(optional)*


      .. py:attribute:: weightedCapacity

         ``CfnSpotFleet.LaunchTemplateOverridesProperty.WeightedCapacity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-weightedcapacity


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: LoadBalancersConfigProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.LoadBalancersConfigProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.LoadBalancersConfigProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.LoadBalancersConfigProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: classicLoadBalancersConfig

         ``CfnSpotFleet.LoadBalancersConfigProperty.ClassicLoadBalancersConfig``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-classicloadbalancersconfig


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.ClassicLoadBalancersConfigProperty`\  *(optional)*


      .. py:attribute:: targetGroupsConfig

         ``CfnSpotFleet.LoadBalancersConfigProperty.TargetGroupsConfig``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-targetgroupsconfig


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupsConfigProperty`\  *(optional)*


   .. py:class:: PrivateIpAddressSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.PrivateIpAddressSpecificationProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.PrivateIpAddressSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.PrivateIpAddressSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: privateIpAddress

         ``CfnSpotFleet.PrivateIpAddressSpecificationProperty.PrivateIpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-privateipaddress


         :type: string


      .. py:attribute:: primary

         ``CfnSpotFleet.PrivateIpAddressSpecificationProperty.Primary``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-primary


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: SpotFleetLaunchSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.SpotFleetLaunchSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.SpotFleetLaunchSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: imageId

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.ImageId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid


         :type: string


      .. py:attribute:: instanceType

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.InstanceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype


         :type: string


      .. py:attribute:: blockDeviceMappings

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.BlockDeviceMappings``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.BlockDeviceMappingProperty`\ )[] *(optional)*


      .. py:attribute:: ebsOptimized

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.EbsOptimized``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: iamInstanceProfile

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.IamInstanceProfile``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.IamInstanceProfileSpecificationProperty`\  *(optional)*


      .. py:attribute:: kernelId

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KernelId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid


         :type: string *(optional)*


      .. py:attribute:: keyName

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KeyName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname


         :type: string *(optional)*


      .. py:attribute:: monitoring

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Monitoring``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetMonitoringProperty`\  *(optional)*


      .. py:attribute:: networkInterfaces

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.NetworkInterfaces``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty`\ )[] *(optional)*


      .. py:attribute:: placement

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Placement``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.SpotPlacementProperty`\  *(optional)*


      .. py:attribute:: ramdiskId

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.RamdiskId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid


         :type: string *(optional)*


      .. py:attribute:: securityGroups

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SecurityGroups``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.GroupIdentifierProperty`\ )[] *(optional)*


      .. py:attribute:: spotPrice

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SpotPrice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice


         :type: string *(optional)*


      .. py:attribute:: subnetId

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SubnetId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid


         :type: string *(optional)*


      .. py:attribute:: tagSpecifications

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.TagSpecifications``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty`\ )[] *(optional)*


      .. py:attribute:: userData

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.UserData``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata


         :type: string *(optional)*


      .. py:attribute:: weightedCapacity

         ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.WeightedCapacity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: SpotFleetMonitoringProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.SpotFleetMonitoringProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.SpotFleetMonitoringProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.SpotFleetMonitoringProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: enabled

         ``CfnSpotFleet.SpotFleetMonitoringProperty.Enabled``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html#cfn-ec2-spotfleet-spotfleetmonitoring-enabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: SpotFleetRequestConfigDataProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.SpotFleetRequestConfigDataProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.SpotFleetRequestConfigDataProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: iamFleetRole

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.IamFleetRole``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole


         :type: string


      .. py:attribute:: targetCapacity

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.TargetCapacity``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity


         :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: allocationStrategy

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.AllocationStrategy``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy


         :type: string *(optional)*


      .. py:attribute:: excessCapacityTerminationPolicy

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ExcessCapacityTerminationPolicy``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy


         :type: string *(optional)*


      .. py:attribute:: instanceInterruptionBehavior

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.InstanceInterruptionBehavior``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instanceinterruptionbehavior


         :type: string *(optional)*


      .. py:attribute:: launchSpecifications

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchSpecifications``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetLaunchSpecificationProperty`\ )[] *(optional)*


      .. py:attribute:: launchTemplateConfigs

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchTemplateConfigs``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchtemplateconfigs


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.LaunchTemplateConfigProperty`\ )[] *(optional)*


      .. py:attribute:: loadBalancersConfig

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.LoadBalancersConfig``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-loadbalancersconfig


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.LoadBalancersConfigProperty`\  *(optional)*


      .. py:attribute:: replaceUnhealthyInstances

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ReplaceUnhealthyInstances``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: spotPrice

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.SpotPrice``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice


         :type: string *(optional)*


      .. py:attribute:: terminateInstancesWithExpiration

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.TerminateInstancesWithExpiration``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: type

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type


         :type: string *(optional)*


      .. py:attribute:: validFrom

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidFrom``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom


         :type: string *(optional)*


      .. py:attribute:: validUntil

         ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidUntil``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil


         :type: string *(optional)*


   .. py:class:: SpotFleetTagSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.SpotFleetTagSpecificationProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.SpotFleetTagSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.SpotFleetTagSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: resourceType

         ``CfnSpotFleet.SpotFleetTagSpecificationProperty.ResourceType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html#cfn-ec2-spotfleet-spotfleettagspecification-resourcetype


         :type: string *(optional)*


      .. py:attribute:: tags

         ``CfnSpotFleet.SpotFleetTagSpecificationProperty.Tags``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html#cfn-ec2-spotfleet-tags


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


   .. py:class:: SpotPlacementProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.SpotPlacementProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.SpotPlacementProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.SpotPlacementProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: availabilityZone

         ``CfnSpotFleet.SpotPlacementProperty.AvailabilityZone``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-availabilityzone


         :type: string *(optional)*


      .. py:attribute:: groupName

         ``CfnSpotFleet.SpotPlacementProperty.GroupName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-groupname


         :type: string *(optional)*


      .. py:attribute:: tenancy

         ``CfnSpotFleet.SpotPlacementProperty.Tenancy``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-tenancy


         :type: string *(optional)*


   .. py:class:: TargetGroupProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.TargetGroupProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.TargetGroupProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.TargetGroupProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: arn

         ``CfnSpotFleet.TargetGroupProperty.Arn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html#cfn-ec2-spotfleet-targetgroup-arn


         :type: string


   .. py:class:: TargetGroupsConfigProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnSpotFleet.TargetGroupsConfigProperty;

         .. code-tab:: javascript

            // CfnSpotFleet.TargetGroupsConfigProperty is an interface

         .. code-tab:: typescript

            import { CfnSpotFleet.TargetGroupsConfigProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: targetGroups

         ``CfnSpotFleet.TargetGroupsConfigProperty.TargetGroups``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html#cfn-ec2-spotfleet-targetgroupsconfig-targetgroups


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.TargetGroupProperty`\ )[]



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSpotFleetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSpotFleetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSpotFleetProps;

      .. code-tab:: javascript

         // CfnSpotFleetProps is an interface

      .. code-tab:: typescript

         import { CfnSpotFleetProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: spotFleetRequestConfigData

      ``AWS::EC2::SpotFleet.SpotFleetRequestConfigData``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnSpotFleet.SpotFleetRequestConfigDataProperty`\ 


CfnSubnet
^^^^^^^^^

.. py:class:: CfnSubnet(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnet;

      .. code-tab:: javascript

         const { CfnSubnet } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSubnet } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetProps`\  *(readonly)*


   .. py:attribute:: subnetAvailabilityZone

      :type: string *(readonly)*


   .. py:attribute:: subnetId

      :type: string *(readonly)*


   .. py:attribute:: subnetIpv6CidrBlocks

      :type: string[] *(readonly)*


   .. py:attribute:: subnetNetworkAclAssociationId

      :type: string *(readonly)*


   .. py:attribute:: subnetVpcId

      :type: string *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSubnetCidrBlock
^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSubnetCidrBlock(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnetCidrBlock;

      .. code-tab:: javascript

         const { CfnSubnetCidrBlock } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSubnetCidrBlock } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetCidrBlockProps`\  *(readonly)*


   .. py:attribute:: subnetCidrBlockId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSubnetCidrBlockProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSubnetCidrBlockProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnetCidrBlockProps;

      .. code-tab:: javascript

         // CfnSubnetCidrBlockProps is an interface

      .. code-tab:: typescript

         import { CfnSubnetCidrBlockProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: ipv6CidrBlock

      ``AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock


      :type: string


   .. py:attribute:: subnetId

      ``AWS::EC2::SubnetCidrBlock.SubnetId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid


      :type: string


CfnSubnetNetworkAclAssociation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSubnetNetworkAclAssociation(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnetNetworkAclAssociation;

      .. code-tab:: javascript

         const { CfnSubnetNetworkAclAssociation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSubnetNetworkAclAssociation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetNetworkAclAssociationProps`\  *(readonly)*


   .. py:attribute:: subnetNetworkAclAssociationAssociationId

      :type: string *(readonly)*


   .. py:attribute:: subnetNetworkAclAssociationName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSubnetNetworkAclAssociationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSubnetNetworkAclAssociationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnetNetworkAclAssociationProps;

      .. code-tab:: javascript

         // CfnSubnetNetworkAclAssociationProps is an interface

      .. code-tab:: typescript

         import { CfnSubnetNetworkAclAssociationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: networkAclId

      ``AWS::EC2::SubnetNetworkAclAssociation.NetworkAclId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid


      :type: string


   .. py:attribute:: subnetId

      ``AWS::EC2::SubnetNetworkAclAssociation.SubnetId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid


      :type: string


CfnSubnetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSubnetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnetProps;

      .. code-tab:: javascript

         // CfnSubnetProps is an interface

      .. code-tab:: typescript

         import { CfnSubnetProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: cidrBlock

      ``AWS::EC2::Subnet.CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock


      :type: string


   .. py:attribute:: vpcId

      ``AWS::EC2::Subnet.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-awsec2subnet-prop-vpcid


      :type: string


   .. py:attribute:: assignIpv6AddressOnCreation

      ``AWS::EC2::Subnet.AssignIpv6AddressOnCreation``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: availabilityZone

      ``AWS::EC2::Subnet.AvailabilityZone``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone


      :type: string *(optional)*


   .. py:attribute:: ipv6CidrBlock

      ``AWS::EC2::Subnet.Ipv6CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock


      :type: string *(optional)*


   .. py:attribute:: mapPublicIpOnLaunch

      ``AWS::EC2::Subnet.MapPublicIpOnLaunch``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::Subnet.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnSubnetRouteTableAssociation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSubnetRouteTableAssociation(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnetRouteTableAssociation;

      .. code-tab:: javascript

         const { CfnSubnetRouteTableAssociation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnSubnetRouteTableAssociation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociationProps`\  *(readonly)*


   .. py:attribute:: subnetRouteTableAssociationName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnSubnetRouteTableAssociationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSubnetRouteTableAssociationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnSubnetRouteTableAssociationProps;

      .. code-tab:: javascript

         // CfnSubnetRouteTableAssociationProps is an interface

      .. code-tab:: typescript

         import { CfnSubnetRouteTableAssociationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: routeTableId

      ``AWS::EC2::SubnetRouteTableAssociation.RouteTableId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-routetableid


      :type: string


   .. py:attribute:: subnetId

      ``AWS::EC2::SubnetRouteTableAssociation.SubnetId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-subnetid


      :type: string


CfnTransitGateway
^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGateway(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGateway;

      .. code-tab:: javascript

         const { CfnTransitGateway } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnTransitGateway } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: transitGatewayId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnTransitGatewayAttachment
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayAttachment(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayAttachment;

      .. code-tab:: javascript

         const { CfnTransitGatewayAttachment } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnTransitGatewayAttachment } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayAttachmentProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: transitGatewayAttachmentId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnTransitGatewayAttachmentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayAttachmentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayAttachmentProps;

      .. code-tab:: javascript

         // CfnTransitGatewayAttachmentProps is an interface

      .. code-tab:: typescript

         import { CfnTransitGatewayAttachmentProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: subnetIds

      ``AWS::EC2::TransitGatewayAttachment.SubnetIds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


   .. py:attribute:: transitGatewayId

      ``AWS::EC2::TransitGatewayAttachment.TransitGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid


      :type: string


   .. py:attribute:: vpcId

      ``AWS::EC2::TransitGatewayAttachment.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid


      :type: string


   .. py:attribute:: tags

      ``AWS::EC2::TransitGatewayAttachment.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnTransitGatewayProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayProps;

      .. code-tab:: javascript

         // CfnTransitGatewayProps is an interface

      .. code-tab:: typescript

         import { CfnTransitGatewayProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: amazonSideAsn

      ``AWS::EC2::TransitGateway.AmazonSideAsn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: autoAcceptSharedAttachments

      ``AWS::EC2::TransitGateway.AutoAcceptSharedAttachments``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments


      :type: string *(optional)*


   .. py:attribute:: defaultRouteTableAssociation

      ``AWS::EC2::TransitGateway.DefaultRouteTableAssociation``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation


      :type: string *(optional)*


   .. py:attribute:: defaultRouteTablePropagation

      ``AWS::EC2::TransitGateway.DefaultRouteTablePropagation``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation


      :type: string *(optional)*


   .. py:attribute:: description

      ``AWS::EC2::TransitGateway.Description``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description


      :type: string *(optional)*


   .. py:attribute:: dnsSupport

      ``AWS::EC2::TransitGateway.DnsSupport``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport


      :type: string *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::TransitGateway.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


   .. py:attribute:: vpnEcmpSupport

      ``AWS::EC2::TransitGateway.VpnEcmpSupport``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport


      :type: string *(optional)*


CfnTransitGatewayRoute
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRoute(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRoute;

      .. code-tab:: javascript

         const { CfnTransitGatewayRoute } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnTransitGatewayRoute } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteProps`\  *(readonly)*


   .. py:attribute:: transitGatewayRouteId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnTransitGatewayRouteProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRouteProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRouteProps;

      .. code-tab:: javascript

         // CfnTransitGatewayRouteProps is an interface

      .. code-tab:: typescript

         import { CfnTransitGatewayRouteProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: transitGatewayRouteTableId

      ``AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid


      :type: string


   .. py:attribute:: blackhole

      ``AWS::EC2::TransitGatewayRoute.Blackhole``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: destinationCidrBlock

      ``AWS::EC2::TransitGatewayRoute.DestinationCidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock


      :type: string *(optional)*


   .. py:attribute:: transitGatewayAttachmentId

      ``AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid


      :type: string *(optional)*


CfnTransitGatewayRouteTable
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRouteTable(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRouteTable;

      .. code-tab:: javascript

         const { CfnTransitGatewayRouteTable } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnTransitGatewayRouteTable } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: transitGatewayRouteTableId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnTransitGatewayRouteTableAssociation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRouteTableAssociation(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRouteTableAssociation;

      .. code-tab:: javascript

         const { CfnTransitGatewayRouteTableAssociation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnTransitGatewayRouteTableAssociation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteTableAssociationProps`\  *(readonly)*


   .. py:attribute:: transitGatewayRouteTableAssociationId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnTransitGatewayRouteTableAssociationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRouteTableAssociationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRouteTableAssociationProps;

      .. code-tab:: javascript

         // CfnTransitGatewayRouteTableAssociationProps is an interface

      .. code-tab:: typescript

         import { CfnTransitGatewayRouteTableAssociationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: transitGatewayAttachmentId

      ``AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid


      :type: string


   .. py:attribute:: transitGatewayRouteTableId

      ``AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid


      :type: string


CfnTransitGatewayRouteTablePropagation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRouteTablePropagation(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRouteTablePropagation;

      .. code-tab:: javascript

         const { CfnTransitGatewayRouteTablePropagation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnTransitGatewayRouteTablePropagation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnTransitGatewayRouteTablePropagationProps`\  *(readonly)*


   .. py:attribute:: transitGatewayRouteTablePropagationId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnTransitGatewayRouteTablePropagationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRouteTablePropagationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRouteTablePropagationProps;

      .. code-tab:: javascript

         // CfnTransitGatewayRouteTablePropagationProps is an interface

      .. code-tab:: typescript

         import { CfnTransitGatewayRouteTablePropagationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: transitGatewayAttachmentId

      ``AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid


      :type: string


   .. py:attribute:: transitGatewayRouteTableId

      ``AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid


      :type: string


CfnTransitGatewayRouteTableProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTransitGatewayRouteTableProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTransitGatewayRouteTableProps;

      .. code-tab:: javascript

         // CfnTransitGatewayRouteTableProps is an interface

      .. code-tab:: typescript

         import { CfnTransitGatewayRouteTableProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: transitGatewayId

      ``AWS::EC2::TransitGatewayRouteTable.TransitGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid


      :type: string


   .. py:attribute:: tags

      ``AWS::EC2::TransitGatewayRouteTable.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnTrunkInterfaceAssociation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTrunkInterfaceAssociation(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTrunkInterfaceAssociation;

      .. code-tab:: javascript

         const { CfnTrunkInterfaceAssociation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnTrunkInterfaceAssociation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnTrunkInterfaceAssociationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnTrunkInterfaceAssociationProps`\  *(readonly)*


   .. py:attribute:: trunkInterfaceAssociationId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnTrunkInterfaceAssociationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnTrunkInterfaceAssociationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnTrunkInterfaceAssociationProps;

      .. code-tab:: javascript

         // CfnTrunkInterfaceAssociationProps is an interface

      .. code-tab:: typescript

         import { CfnTrunkInterfaceAssociationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: branchInterfaceId

      ``AWS::EC2::TrunkInterfaceAssociation.BranchInterfaceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-branchinterfaceid


      :type: string


   .. py:attribute:: trunkInterfaceId

      ``AWS::EC2::TrunkInterfaceAssociation.TrunkInterfaceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-trunkinterfaceid


      :type: string


   .. py:attribute:: greKey

      ``AWS::EC2::TrunkInterfaceAssociation.GREKey``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-grekey


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: vlanId

      ``AWS::EC2::TrunkInterfaceAssociation.VLANId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-vlanid


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnVPC
^^^^^^

.. py:class:: CfnVPC(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPC;

      .. code-tab:: javascript

         const { CfnVPC } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPC } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: vpcCidrBlock

      :type: string *(readonly)*


   .. py:attribute:: vpcCidrBlockAssociations

      :type: string[] *(readonly)*


   .. py:attribute:: vpcDefaultNetworkAcl

      :type: string *(readonly)*


   .. py:attribute:: vpcDefaultSecurityGroup

      :type: string *(readonly)*


   .. py:attribute:: vpcId

      :type: string *(readonly)*


   .. py:attribute:: vpcIpv6CidrBlocks

      :type: string[] *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCCidrBlock
^^^^^^^^^^^^^^^

.. py:class:: CfnVPCCidrBlock(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCCidrBlock;

      .. code-tab:: javascript

         const { CfnVPCCidrBlock } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPCCidrBlock } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCCidrBlockProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCCidrBlockProps`\  *(readonly)*


   .. py:attribute:: vpcCidrBlockId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCCidrBlockProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCCidrBlockProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCCidrBlockProps;

      .. code-tab:: javascript

         // CfnVPCCidrBlockProps is an interface

      .. code-tab:: typescript

         import { CfnVPCCidrBlockProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: vpcId

      ``AWS::EC2::VPCCidrBlock.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid


      :type: string


   .. py:attribute:: amazonProvidedIpv6CidrBlock

      ``AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: cidrBlock

      ``AWS::EC2::VPCCidrBlock.CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock


      :type: string *(optional)*


CfnVPCDHCPOptionsAssociation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCDHCPOptionsAssociation(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCDHCPOptionsAssociation;

      .. code-tab:: javascript

         const { CfnVPCDHCPOptionsAssociation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPCDHCPOptionsAssociation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCDHCPOptionsAssociationProps`\  *(readonly)*


   .. py:attribute:: vpcdhcpOptionsAssociationName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCDHCPOptionsAssociationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCDHCPOptionsAssociationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCDHCPOptionsAssociationProps;

      .. code-tab:: javascript

         // CfnVPCDHCPOptionsAssociationProps is an interface

      .. code-tab:: typescript

         import { CfnVPCDHCPOptionsAssociationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: dhcpOptionsId

      ``AWS::EC2::VPCDHCPOptionsAssociation.DhcpOptionsId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid


      :type: string


   .. py:attribute:: vpcId

      ``AWS::EC2::VPCDHCPOptionsAssociation.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid


      :type: string


CfnVPCEndpoint
^^^^^^^^^^^^^^

.. py:class:: CfnVPCEndpoint(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCEndpoint;

      .. code-tab:: javascript

         const { CfnVPCEndpoint } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPCEndpoint } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCEndpointProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCEndpointProps`\  *(readonly)*


   .. py:attribute:: vpcEndpointCreationTimestamp

      :type: string *(readonly)*


   .. py:attribute:: vpcEndpointDnsEntries

      :type: string[] *(readonly)*


   .. py:attribute:: vpcEndpointId

      :type: string *(readonly)*


   .. py:attribute:: vpcEndpointNetworkInterfaceIds

      :type: string[] *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCEndpointConnectionNotification
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCEndpointConnectionNotification(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCEndpointConnectionNotification;

      .. code-tab:: javascript

         const { CfnVPCEndpointConnectionNotification } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPCEndpointConnectionNotification } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCEndpointConnectionNotificationProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCEndpointConnectionNotificationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCEndpointConnectionNotificationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCEndpointConnectionNotificationProps;

      .. code-tab:: javascript

         // CfnVPCEndpointConnectionNotificationProps is an interface

      .. code-tab:: typescript

         import { CfnVPCEndpointConnectionNotificationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: connectionEvents

      ``AWS::EC2::VPCEndpointConnectionNotification.ConnectionEvents``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


   .. py:attribute:: connectionNotificationArn

      ``AWS::EC2::VPCEndpointConnectionNotification.ConnectionNotificationArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn


      :type: string


   .. py:attribute:: serviceId

      ``AWS::EC2::VPCEndpointConnectionNotification.ServiceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid


      :type: string *(optional)*


   .. py:attribute:: vpcEndpointId

      ``AWS::EC2::VPCEndpointConnectionNotification.VPCEndpointId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid


      :type: string *(optional)*


CfnVPCEndpointProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCEndpointProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCEndpointProps;

      .. code-tab:: javascript

         // CfnVPCEndpointProps is an interface

      .. code-tab:: typescript

         import { CfnVPCEndpointProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: serviceName

      ``AWS::EC2::VPCEndpoint.ServiceName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename


      :type: string


   .. py:attribute:: vpcId

      ``AWS::EC2::VPCEndpoint.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid


      :type: string


   .. py:attribute:: policyDocument

      ``AWS::EC2::VPCEndpoint.PolicyDocument``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: privateDnsEnabled

      ``AWS::EC2::VPCEndpoint.PrivateDnsEnabled``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: routeTableIds

      ``AWS::EC2::VPCEndpoint.RouteTableIds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: securityGroupIds

      ``AWS::EC2::VPCEndpoint.SecurityGroupIds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: subnetIds

      ``AWS::EC2::VPCEndpoint.SubnetIds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: vpcEndpointType

      ``AWS::EC2::VPCEndpoint.VpcEndpointType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype


      :type: string *(optional)*


CfnVPCEndpointServicePermissions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCEndpointServicePermissions(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCEndpointServicePermissions;

      .. code-tab:: javascript

         const { CfnVPCEndpointServicePermissions } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPCEndpointServicePermissions } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCEndpointServicePermissionsProps`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCEndpointServicePermissionsProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCEndpointServicePermissionsProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCEndpointServicePermissionsProps;

      .. code-tab:: javascript

         // CfnVPCEndpointServicePermissionsProps is an interface

      .. code-tab:: typescript

         import { CfnVPCEndpointServicePermissionsProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: serviceId

      ``AWS::EC2::VPCEndpointServicePermissions.ServiceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid


      :type: string


   .. py:attribute:: allowedPrincipals

      ``AWS::EC2::VPCEndpointServicePermissions.AllowedPrincipals``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


CfnVPCGatewayAttachment
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCGatewayAttachment(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCGatewayAttachment;

      .. code-tab:: javascript

         const { CfnVPCGatewayAttachment } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPCGatewayAttachment } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCGatewayAttachmentProps`\  *(readonly)*


   .. py:attribute:: vpcGatewayAttachmentName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCGatewayAttachmentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCGatewayAttachmentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCGatewayAttachmentProps;

      .. code-tab:: javascript

         // CfnVPCGatewayAttachmentProps is an interface

      .. code-tab:: typescript

         import { CfnVPCGatewayAttachmentProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: vpcId

      ``AWS::EC2::VPCGatewayAttachment.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid


      :type: string


   .. py:attribute:: internetGatewayId

      ``AWS::EC2::VPCGatewayAttachment.InternetGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid


      :type: string *(optional)*


   .. py:attribute:: vpnGatewayId

      ``AWS::EC2::VPCGatewayAttachment.VpnGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid


      :type: string *(optional)*


CfnVPCPeeringConnection
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCPeeringConnection(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCPeeringConnection;

      .. code-tab:: javascript

         const { CfnVPCPeeringConnection } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPCPeeringConnection } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPCPeeringConnectionProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: vpcPeeringConnectionName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPCPeeringConnectionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCPeeringConnectionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCPeeringConnectionProps;

      .. code-tab:: javascript

         // CfnVPCPeeringConnectionProps is an interface

      .. code-tab:: typescript

         import { CfnVPCPeeringConnectionProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: peerVpcId

      ``AWS::EC2::VPCPeeringConnection.PeerVpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid


      :type: string


   .. py:attribute:: vpcId

      ``AWS::EC2::VPCPeeringConnection.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid


      :type: string


   .. py:attribute:: peerOwnerId

      ``AWS::EC2::VPCPeeringConnection.PeerOwnerId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid


      :type: string *(optional)*


   .. py:attribute:: peerRegion

      ``AWS::EC2::VPCPeeringConnection.PeerRegion``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion


      :type: string *(optional)*


   .. py:attribute:: peerRoleArn

      ``AWS::EC2::VPCPeeringConnection.PeerRoleArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn


      :type: string *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::VPCPeeringConnection.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnVPCProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPCProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPCProps;

      .. code-tab:: javascript

         // CfnVPCProps is an interface

      .. code-tab:: typescript

         import { CfnVPCProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: cidrBlock

      ``AWS::EC2::VPC.CidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock


      :type: string


   .. py:attribute:: enableDnsHostnames

      ``AWS::EC2::VPC.EnableDnsHostnames``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: enableDnsSupport

      ``AWS::EC2::VPC.EnableDnsSupport``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: instanceTenancy

      ``AWS::EC2::VPC.InstanceTenancy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy


      :type: string *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::VPC.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnVPNConnection
^^^^^^^^^^^^^^^^

.. py:class:: CfnVPNConnection(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNConnection;

      .. code-tab:: javascript

         const { CfnVPNConnection } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPNConnection } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPNConnectionProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPNConnectionProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: vpnConnectionName

      :type: string *(readonly)*

   .. py:class:: VpnTunnelOptionsSpecificationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.EC2;

         .. code-tab:: java

            import software.amazon.awscdk.services.ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty;

         .. code-tab:: javascript

            // CfnVPNConnection.VpnTunnelOptionsSpecificationProperty is an interface

         .. code-tab:: typescript

            import { CfnVPNConnection.VpnTunnelOptionsSpecificationProperty } from '@aws-cdk/aws-ec2';





      .. py:attribute:: preSharedKey

         ``CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.PreSharedKey``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-presharedkey


         :type: string *(optional)*


      .. py:attribute:: tunnelInsideCidr

         ``CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.TunnelInsideCidr``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-tunnelinsidecidr


         :type: string *(optional)*



   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPNConnectionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPNConnectionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNConnectionProps;

      .. code-tab:: javascript

         // CfnVPNConnectionProps is an interface

      .. code-tab:: typescript

         import { CfnVPNConnectionProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: customerGatewayId

      ``AWS::EC2::VPNConnection.CustomerGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid


      :type: string


   .. py:attribute:: type

      ``AWS::EC2::VPNConnection.Type``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type


      :type: string


   .. py:attribute:: vpnGatewayId

      ``AWS::EC2::VPNConnection.VpnGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid


      :type: string


   .. py:attribute:: staticRoutesOnly

      ``AWS::EC2::VPNConnection.StaticRoutesOnly``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::VPNConnection.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


   .. py:attribute:: vpnTunnelOptionsSpecifications

      ``AWS::EC2::VPNConnection.VpnTunnelOptionsSpecifications``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ec2.CfnVPNConnection.VpnTunnelOptionsSpecificationProperty`\ )[] *(optional)*


CfnVPNConnectionRoute
^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPNConnectionRoute(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNConnectionRoute;

      .. code-tab:: javascript

         const { CfnVPNConnectionRoute } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPNConnectionRoute } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPNConnectionRouteProps`\  *(readonly)*


   .. py:attribute:: vpnConnectionRouteName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPNConnectionRouteProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPNConnectionRouteProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNConnectionRouteProps;

      .. code-tab:: javascript

         // CfnVPNConnectionRouteProps is an interface

      .. code-tab:: typescript

         import { CfnVPNConnectionRouteProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: destinationCidrBlock

      ``AWS::EC2::VPNConnectionRoute.DestinationCidrBlock``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock


      :type: string


   .. py:attribute:: vpnConnectionId

      ``AWS::EC2::VPNConnectionRoute.VpnConnectionId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid


      :type: string


CfnVPNGateway
^^^^^^^^^^^^^

.. py:class:: CfnVPNGateway(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNGateway;

      .. code-tab:: javascript

         const { CfnVPNGateway } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPNGateway } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPNGatewayProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPNGatewayProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: vpnGatewayName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPNGatewayProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPNGatewayProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNGatewayProps;

      .. code-tab:: javascript

         // CfnVPNGatewayProps is an interface

      .. code-tab:: typescript

         import { CfnVPNGatewayProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: type

      ``AWS::EC2::VPNGateway.Type``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type


      :type: string


   .. py:attribute:: amazonSideAsn

      ``AWS::EC2::VPNGateway.AmazonSideAsn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::VPNGateway.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


CfnVPNGatewayRoutePropagation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPNGatewayRoutePropagation(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNGatewayRoutePropagation;

      .. code-tab:: javascript

         const { CfnVPNGatewayRoutePropagation } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVPNGatewayRoutePropagation } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVPNGatewayRoutePropagationProps`\  *(readonly)*


   .. py:attribute:: vpnGatewayRoutePropagationName

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVPNGatewayRoutePropagationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVPNGatewayRoutePropagationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVPNGatewayRoutePropagationProps;

      .. code-tab:: javascript

         // CfnVPNGatewayRoutePropagationProps is an interface

      .. code-tab:: typescript

         import { CfnVPNGatewayRoutePropagationProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: routeTableIds

      ``AWS::EC2::VPNGatewayRoutePropagation.RouteTableIds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-routetableids


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


   .. py:attribute:: vpnGatewayId

      ``AWS::EC2::VPNGatewayRoutePropagation.VpnGatewayId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-vpngatewayid


      :type: string


CfnVolume
^^^^^^^^^

.. py:class:: CfnVolume(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVolume;

      .. code-tab:: javascript

         const { CfnVolume } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVolume } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVolumeProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVolumeProps`\  *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:attribute:: volumeId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVolumeAttachment
^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVolumeAttachment(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVolumeAttachment;

      .. code-tab:: javascript

         const { CfnVolumeAttachment } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CfnVolumeAttachment } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-ec2.CfnVolumeAttachmentProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ec2.CfnVolumeAttachmentProps`\  *(readonly)*


   .. py:attribute:: volumeAttachmentId

      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnVolumeAttachmentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVolumeAttachmentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVolumeAttachmentProps;

      .. code-tab:: javascript

         // CfnVolumeAttachmentProps is an interface

      .. code-tab:: typescript

         import { CfnVolumeAttachmentProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: device

      ``AWS::EC2::VolumeAttachment.Device``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device


      :type: string


   .. py:attribute:: instanceId

      ``AWS::EC2::VolumeAttachment.InstanceId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid


      :type: string


   .. py:attribute:: volumeId

      ``AWS::EC2::VolumeAttachment.VolumeId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid


      :type: string


CfnVolumeProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVolumeProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CfnVolumeProps;

      .. code-tab:: javascript

         // CfnVolumeProps is an interface

      .. code-tab:: typescript

         import { CfnVolumeProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: availabilityZone

      ``AWS::EC2::Volume.AvailabilityZone``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone


      :type: string


   .. py:attribute:: autoEnableIo

      ``AWS::EC2::Volume.AutoEnableIO``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: encrypted

      ``AWS::EC2::Volume.Encrypted``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: iops

      ``AWS::EC2::Volume.Iops``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: kmsKeyId

      ``AWS::EC2::Volume.KmsKeyId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid


      :type: string *(optional)*


   .. py:attribute:: size

      ``AWS::EC2::Volume.Size``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: snapshotId

      ``AWS::EC2::Volume.SnapshotId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid


      :type: string *(optional)*


   .. py:attribute:: tags

      ``AWS::EC2::Volume.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


   .. py:attribute:: volumeType

      ``AWS::EC2::Volume.VolumeType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype


      :type: string *(optional)*


CidrIPv4
^^^^^^^^

.. py:class:: CidrIPv4(cidrIp)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CidrIPv4;

      .. code-tab:: javascript

         const { CidrIPv4 } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CidrIPv4 } from '@aws-cdk/aws-ec2';



   A connection to and from a given IP range



   :implements: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
   :implements: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
   :param cidrIp: 
   :type cidrIp: string

   .. py:method:: toEgressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toEgressRuleJSON`

      Produce the egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toIngressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toIngressRuleJSON`

      Produce the ingress rule JSON for the given connection



      :rtype: any


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.canInlineRule`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: cidrIp

      :type: string *(readonly)*


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: uniqueId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.uniqueId`

      A unique identifier for this connection peer



      :type: string *(readonly)*


CidrIPv6
^^^^^^^^

.. py:class:: CidrIPv6(cidrIpv6)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.CidrIPv6;

      .. code-tab:: javascript

         const { CidrIPv6 } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { CidrIPv6 } from '@aws-cdk/aws-ec2';



   A connection to a from a given IPv6 range



   :implements: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
   :implements: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
   :param cidrIpv6: 
   :type cidrIpv6: string

   .. py:method:: toEgressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toEgressRuleJSON`

      Produce the egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toIngressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toIngressRuleJSON`

      Produce the ingress rule JSON for the given connection



      :rtype: any


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.canInlineRule`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: cidrIpv6

      :type: string *(readonly)*


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: uniqueId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.uniqueId`

      A unique identifier for this connection peer



      :type: string *(readonly)*


ConnectionRule (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ConnectionRule

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.ConnectionRule;

      .. code-tab:: javascript

         // ConnectionRule is an interface

      .. code-tab:: typescript

         import { ConnectionRule } from '@aws-cdk/aws-ec2';





   .. py:attribute:: fromPort

      Start of port range for the TCP and UDP protocols, or an ICMP type number.

      

      If you specify icmp for the IpProtocol property, you can specify

      -1 as a wildcard (i.e., any ICMP type number).



      :type: number


   .. py:attribute:: description

      Description of this connection. It is applied to both the ingress rule

      and the egress rule.



      :type: string *(optional)*
      :default: No description


   .. py:attribute:: protocol

      The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers).

      Use -1 to specify all protocols. If you specify -1, or a protocol number

      other than tcp, udp, icmp, or 58 (ICMPv6), traffic on all ports is

      allowed, regardless of any ports you specify. For tcp, udp, and icmp, you

      must specify a port range. For protocol 58 (ICMPv6), you can optionally

      specify a port range; if you don't, traffic for all types and codes is

      allowed.



      :type: string *(optional)*
      :default: tcp


   .. py:attribute:: toPort

      End of port range for the TCP and UDP protocols, or an ICMP code.

      

      If you specify icmp for the IpProtocol property, you can specify -1 as a

      wildcard (i.e., any ICMP code).



      :type: number *(optional)*
      :default: If toPort is not specified, it will be the same as fromPort.


Connections
^^^^^^^^^^^

.. py:class:: Connections([props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.Connections;

      .. code-tab:: javascript

         const { Connections } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { Connections } from '@aws-cdk/aws-ec2';



   Manage the allowed network connections for constructs with Security Groups.

   

   Security Groups can be thought of as a firewall for network-connected

   devices. This class makes it easy to allow network connections to and

   from security groups, and between security groups individually. When

   establishing connectivity between security groups, it will automatically

   add rules in both security groups

   

   This object can manage one or more security groups.



   :implements: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.ConnectionsProps`\  *(optional)*

   .. py:method:: addSecurityGroup(*securityGroups)

      Add a security group to the list of security groups managed by this object



      :param \*securityGroups: 
      :type \*securityGroups: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroup`\ 


   .. py:method:: allowDefaultPortFrom(other, [description])

      Allow connections from the peer on our default port

      

      Even if the peer has a default port, we will always use our default port.



      :param other: 
      :type other: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowDefaultPortFromAnyIpv4([description])

      Allow default connections from all IPv4 ranges



      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowDefaultPortInternally([description])

      Allow hosts inside the security group to connect to each other



      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowDefaultPortTo(other, [description])

      Allow connections from the peer on our default port

      

      Even if the peer has a default port, we will always use our default port.



      :param other: 
      :type other: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowFrom(other, portRange, [description])

      Allow connections from the peer on the given port



      :param other: 
      :type other: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
      :param portRange: 
      :type portRange: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowFromAnyIPv4(portRange, [description])

      Allow from any IPv4 ranges



      :param portRange: 
      :type portRange: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowInternally(portRange, [description])

      Allow hosts inside the security group to connect to each other on the given port



      :param portRange: 
      :type portRange: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowTo(other, portRange, [description])

      Allow connections to the peer on the given port



      :param other: 
      :type other: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
      :param portRange: 
      :type portRange: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowToAnyIPv4(portRange, [description])

      Allow to all IPv4 ranges



      :param portRange: 
      :type portRange: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:method:: allowToDefaultPort(other, [description])

      Allow connections to the security group on their default port



      :param other: 
      :type other: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
      :param description: 
      :type description: string *(optional)*


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: securityGroups

      :type: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroup`\ [] *(readonly)*


   .. py:attribute:: defaultPortRange

      The default port configured for this connection peer, if available



      :type: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\  *(optional)* *(readonly)*


ConnectionsProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ConnectionsProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.ConnectionsProps;

      .. code-tab:: javascript

         // ConnectionsProps is an interface

      .. code-tab:: typescript

         import { ConnectionsProps } from '@aws-cdk/aws-ec2';



   Properties to intialize a new Connections object





   .. py:attribute:: defaultPortRange

      Default port range for initiating connections to and from this object



      :type: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\  *(optional)*
      :default: No default port range


   .. py:attribute:: securityGroupRule

      Class that represents the rule by which others can connect to this connectable

      

      This object is required, but will be derived from securityGroup if that is passed.



      :type: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\  *(optional)*
      :default: Derived from securityGroup if set.


   .. py:attribute:: securityGroups

      What securityGroup(s) this object is managing connections for



      :type: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroup`\ [] *(optional)*
      :default: No security groups


DefaultInstanceTenancy (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: DefaultInstanceTenancy

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.DefaultInstanceTenancy;

      .. code-tab:: javascript

         const { DefaultInstanceTenancy } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { DefaultInstanceTenancy } from '@aws-cdk/aws-ec2';



   The default tenancy of instances launched into the VPC.



   .. py:data:: Default

   Instances can be launched with any tenancy.



   .. py:data:: Dedicated

   Any instance launched into the VPC automatically has dedicated tenancy, unless you launch it with the default tenancy.




GenericLinuxImage
^^^^^^^^^^^^^^^^^

.. py:class:: GenericLinuxImage(amiMap)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.GenericLinuxImage;

      .. code-tab:: javascript

         const { GenericLinuxImage } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { GenericLinuxImage } from '@aws-cdk/aws-ec2';



   Construct a Linux machine image from an AMI map

   

   Linux images IDs are not published to SSM parameter store yet, so you'll have to

   manually specify an AMI map.



   :implements: :py:class:`~@aws-cdk/aws-ec2.IMachineImageSource`\ 
   :param amiMap: 
   :type amiMap: string => string

   .. py:method:: getImage(scope) -> @aws-cdk/aws-ec2.MachineImage

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IMachineImageSource.getImage`

      Return the image to use in the given context



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.MachineImage`\ 


   .. py:attribute:: amiMap

      :type: string => string *(readonly)*


IConnectable (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IConnectable

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IConnectable;

      .. code-tab:: javascript

         // IConnectable is an interface

      .. code-tab:: typescript

         import { IConnectable } from '@aws-cdk/aws-ec2';



   The goal of this module is to make possible to write statements like this:

   

     ```ts

    *  database.connections.allowFrom(fleet);

    *  fleet.connections.allowTo(database);

    *  rdgw.connections.allowFromCidrIp('0.3.1.5/86');

    *  rgdw.connections.allowTrafficTo(fleet, new AllPorts());

    *  ```

   

   The insight here is that some connecting peers have information on what ports should

   be involved in the connection, and some don't.

   An object that has a Connections object





   .. py:attribute:: connections

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


IMachineImageSource (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IMachineImageSource

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IMachineImageSource;

      .. code-tab:: javascript

         // IMachineImageSource is an interface

      .. code-tab:: typescript

         import { IMachineImageSource } from '@aws-cdk/aws-ec2';



   Interface for classes that can select an appropriate machine image to use





   .. py:method:: getImage(scope) -> @aws-cdk/aws-ec2.MachineImage

      Return the image to use in the given context



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.MachineImage`\ 
      :abstract: Yes


IPortRange (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IPortRange

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IPortRange;

      .. code-tab:: javascript

         // IPortRange is an interface

      .. code-tab:: typescript

         import { IPortRange } from '@aws-cdk/aws-ec2';



   Interface for classes that provide the connection-specification parts of a security group rule





   .. py:attribute:: canInlineRule

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:method:: toRuleJSON() -> any

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any
      :abstract: Yes


ISecurityGroup (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ISecurityGroup

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.ISecurityGroup;

      .. code-tab:: javascript

         // ISecurityGroup is an interface

      .. code-tab:: typescript

         import { ISecurityGroup } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 
   :extends: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
   :extends: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 


   .. py:attribute:: securityGroupId

      ID for the current security group



      :type: string *(readonly)*


   .. py:method:: addEgressRule(peer, connection, [description, [remoteRule]])

      Add an egress rule for the current security group

      

      `remoteRule` controls where the Rule object is created if the peer is also a

      securityGroup and they are in different stack. If false (default) the

      rule object is created under the current SecurityGroup object. If true and the

      peer is also a SecurityGroup, the rule object is created under the remote

      SecurityGroup object.



      :param peer: 
      :type peer: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
      :param connection: 
      :type connection: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*
      :param remoteRule: 
      :type remoteRule: boolean *(optional)*
      :abstract: Yes


   .. py:method:: addIngressRule(peer, connection, [description, [remoteRule]])

      Add an ingress rule for the current security group

      

      `remoteRule` controls where the Rule object is created if the peer is also a

      securityGroup and they are in different stack. If false (default) the

      rule object is created under the current SecurityGroup object. If true and the

      peer is also a SecurityGroup, the rule object is created under the remote

      SecurityGroup object.



      :param peer: 
      :type peer: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
      :param connection: 
      :type connection: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*
      :param remoteRule: 
      :type remoteRule: boolean *(optional)*
      :abstract: Yes


   .. py:method:: export() -> @aws-cdk/aws-ec2.SecurityGroupImportProps

      Export the security group



      :rtype: :py:class:`~@aws-cdk/aws-ec2.SecurityGroupImportProps`\ 
      :abstract: Yes


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.IConnectable <@aws-cdk/aws-ec2.IConnectable.connections>`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:method:: toEgressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule <@aws-cdk/aws-ec2.ISecurityGroupRule.toEgressRuleJSON>`

      Produce the egress rule JSON for the given connection



      :rtype: any
      :abstract: Yes


   .. py:method:: toIngressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule <@aws-cdk/aws-ec2.ISecurityGroupRule.toIngressRuleJSON>`

      Produce the ingress rule JSON for the given connection



      :rtype: any
      :abstract: Yes


   .. py:attribute:: canInlineRule

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.ISecurityGroupRule <@aws-cdk/aws-ec2.ISecurityGroupRule.canInlineRule>`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.ISecurityGroupRule <@aws-cdk/aws-ec2.ISecurityGroupRule.uniqueId>`

      A unique identifier for this connection peer



      :type: string *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


ISecurityGroupRule (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ISecurityGroupRule

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.ISecurityGroupRule;

      .. code-tab:: javascript

         // ISecurityGroupRule is an interface

      .. code-tab:: typescript

         import { ISecurityGroupRule } from '@aws-cdk/aws-ec2';



   Interface for classes that provide the peer-specification parts of a security group rule





   .. py:attribute:: canInlineRule

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: uniqueId

      A unique identifier for this connection peer



      :type: string *(readonly)*


   .. py:method:: toEgressRuleJSON() -> any

      Produce the egress rule JSON for the given connection



      :rtype: any
      :abstract: Yes


   .. py:method:: toIngressRuleJSON() -> any

      Produce the ingress rule JSON for the given connection



      :rtype: any
      :abstract: Yes


IVpcNetwork (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IVpcNetwork

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IVpcNetwork;

      .. code-tab:: javascript

         // IVpcNetwork is an interface

      .. code-tab:: typescript

         import { IVpcNetwork } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: availabilityZones

      AZs for this VPC



      :type: string[] *(readonly)*


   .. py:attribute:: isolatedSubnets

      List of isolated subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)*


   .. py:attribute:: privateSubnets

      List of private subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)*


   .. py:attribute:: publicSubnets

      List of public subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)*


   .. py:attribute:: vpcId

      Identifier for this VPC



      :type: string *(readonly)*


   .. py:attribute:: vpcRegion

      Region where this VPC is located



      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-ec2.VpcNetworkImportProps

      Exports this VPC so it can be consumed by another stack.



      :rtype: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkImportProps`\ 
      :abstract: Yes


   .. py:method:: isPublicSubnet(subnet) -> boolean

      Return whether the given subnet is one of this VPC's public subnets.

      

      The subnet must literally be one of the subnet object obtained from

      this VPC. A subnet that merely represents the same subnet will

      never return true.



      :param subnet: 
      :type subnet: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ 
      :rtype: boolean
      :abstract: Yes


   .. py:method:: subnets([placement]) -> @aws-cdk/aws-ec2.IVpcSubnet[]

      Return the subnets appropriate for the placement strategy



      :param placement: 
      :type placement: :py:class:`~@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ []
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


IVpcSubnet (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IVpcSubnet

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IVpcSubnet;

      .. code-tab:: javascript

         // IVpcSubnet is an interface

      .. code-tab:: typescript

         import { IVpcSubnet } from '@aws-cdk/aws-ec2';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: availabilityZone

      The Availability Zone the subnet is located in



      :type: string *(readonly)*


   .. py:attribute:: internetConnectivityEstablished

      Dependable that can be depended upon to force internet connectivity established on the VPC



      :type: :py:class:`@aws-cdk/cdk.IDependable`\  *(readonly)*


   .. py:attribute:: subnetId

      The subnetId for this particular subnet



      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-ec2.VpcSubnetImportProps

      Exports this subnet to another stack.



      :rtype: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetImportProps`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


IcmpAllTypeCodes
^^^^^^^^^^^^^^^^

.. py:class:: IcmpAllTypeCodes(type)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IcmpAllTypeCodes;

      .. code-tab:: javascript

         const { IcmpAllTypeCodes } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { IcmpAllTypeCodes } from '@aws-cdk/aws-ec2';



   All ICMP Codes for a given ICMP Type



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param type: 
   :type type: number

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: type

      :type: number *(readonly)*


IcmpAllTypesAndCodes
^^^^^^^^^^^^^^^^^^^^

.. py:class:: IcmpAllTypesAndCodes()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IcmpAllTypesAndCodes;

      .. code-tab:: javascript

         const { IcmpAllTypesAndCodes } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { IcmpAllTypesAndCodes } from '@aws-cdk/aws-ec2';



   All ICMP Types & Codes



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


IcmpPing
^^^^^^^^

.. py:class:: IcmpPing()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IcmpPing;

      .. code-tab:: javascript

         const { IcmpPing } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { IcmpPing } from '@aws-cdk/aws-ec2';



   ICMP Ping traffic



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


IcmpTypeAndCode
^^^^^^^^^^^^^^^

.. py:class:: IcmpTypeAndCode(type, code)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.IcmpTypeAndCode;

      .. code-tab:: javascript

         const { IcmpTypeAndCode } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { IcmpTypeAndCode } from '@aws-cdk/aws-ec2';



   A set of matching ICMP Type & Code



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param type: 
   :type type: number
   :param code: 
   :type code: number

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: code

      :type: number *(readonly)*


   .. py:attribute:: type

      :type: number *(readonly)*


InstanceClass (enum)
^^^^^^^^^^^^^^^^^^^^

.. py:class:: InstanceClass

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.InstanceClass;

      .. code-tab:: javascript

         const { InstanceClass } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { InstanceClass } from '@aws-cdk/aws-ec2';



   What class and generation of instance to use

   

   We have both symbolic and concrete enums for every type.

   

   The first are for people that want to specify by purpose,

   the second one are for people who already know exactly what

   'R4' means.



   .. py:data:: Standard3

   Standard instances, 3rd generation



   .. py:data:: Standard4

   Standard instances, 4th generation



   .. py:data:: Standard5

   Standard instances, 5th generation



   .. py:data:: Memory3

   Memory optimized instances, 3rd generation



   .. py:data:: Memory4

   Memory optimized instances, 3rd generation



   .. py:data:: Compute3

   Compute optimized instances, 3rd generation



   .. py:data:: Compute4

   Compute optimized instances, 4th generation



   .. py:data:: Compute5

   Compute optimized instances, 5th generation



   .. py:data:: Storage2

   Storage-optimized instances, 2nd generation



   .. py:data:: StorageCompute1

   Storage/compute balanced instances, 1st generation



   .. py:data:: Io3

   I/O-optimized instances, 3rd generation



   .. py:data:: Burstable2

   Burstable instances, 2nd generation



   .. py:data:: Burstable3

   Burstable instances, 3rd generation



   .. py:data:: MemoryIntensive1

   Memory-intensive instances, 1st generation



   .. py:data:: MemoryIntensive1Extended

   Memory-intensive instances, extended, 1st generation



   .. py:data:: Fpga1

   Instances with customizable hardware acceleration, 1st generation



   .. py:data:: Graphics3

   Graphics-optimized instances, 3rd generation



   .. py:data:: Parallel2

   Parallel-processing optimized instances, 2nd generation



   .. py:data:: Parallel3

   Parallel-processing optimized instances, 3nd generation




InstanceSize (enum)
^^^^^^^^^^^^^^^^^^^

.. py:class:: InstanceSize

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.InstanceSize;

      .. code-tab:: javascript

         const { InstanceSize } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { InstanceSize } from '@aws-cdk/aws-ec2';



   What size of instance to use



   .. py:data:: None

   .. py:data:: Micro

   .. py:data:: Small

   .. py:data:: Medium

   .. py:data:: Large

   .. py:data:: XLarge

   .. py:data:: XLarge2

   .. py:data:: XLarge4

   .. py:data:: XLarge8

   .. py:data:: XLarge9

   .. py:data:: XLarge10

   .. py:data:: XLarge12

   .. py:data:: XLarge16

   .. py:data:: XLarge18

   .. py:data:: XLarge24

   .. py:data:: XLarge32


InstanceType
^^^^^^^^^^^^

.. py:class:: InstanceType(instanceTypeIdentifier)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.InstanceType;

      .. code-tab:: javascript

         const { InstanceType } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { InstanceType } from '@aws-cdk/aws-ec2';



   Instance type for EC2 instances

   

   This class takes a literal string, good if you already

   know the identifier of the type you want.



   :param instanceTypeIdentifier: 
   :type instanceTypeIdentifier: string

   .. py:method:: toString() -> string

      Return the instance type as a dotted string



      :rtype: string


   .. py:attribute:: instanceTypeIdentifier

      :type: string *(readonly)*


InstanceTypePair
^^^^^^^^^^^^^^^^

.. py:class:: InstanceTypePair(instanceClass, instanceSize)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.InstanceTypePair;

      .. code-tab:: javascript

         const { InstanceTypePair } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { InstanceTypePair } from '@aws-cdk/aws-ec2';



   Instance type for EC2 instances

   

   This class takes a combination of a class and size.

   

   Be aware that not all combinations of class and size are available, and not all

   classes are available in all regions.



   :extends: :py:class:`~@aws-cdk/aws-ec2.InstanceType`\ 
   :param instanceClass: 
   :type instanceClass: :py:class:`~@aws-cdk/aws-ec2.InstanceClass`\ 
   :param instanceSize: 
   :type instanceSize: :py:class:`~@aws-cdk/aws-ec2.InstanceSize`\ 

   .. py:attribute:: instanceClass

      :type: :py:class:`~@aws-cdk/aws-ec2.InstanceClass`\  *(readonly)*


   .. py:attribute:: instanceSize

      :type: :py:class:`~@aws-cdk/aws-ec2.InstanceSize`\  *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.InstanceType <@aws-cdk/aws-ec2.InstanceType.toString>`

      Return the instance type as a dotted string



      :rtype: string


   .. py:attribute:: instanceTypeIdentifier

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.InstanceType <@aws-cdk/aws-ec2.InstanceType.instanceTypeIdentifier>`

      :type: string *(readonly)*


LinuxOS
^^^^^^^

.. py:class:: LinuxOS()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.LinuxOS;

      .. code-tab:: javascript

         const { LinuxOS } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { LinuxOS } from '@aws-cdk/aws-ec2';



   OS features specialized for Linux



   :extends: :py:class:`~@aws-cdk/aws-ec2.OperatingSystem`\ 

   .. py:method:: createUserData(scripts) -> string

      *Implements* :py:meth:`@aws-cdk/aws-ec2.OperatingSystem.createUserData`

      :param scripts: 
      :type scripts: string[]
      :rtype: string


   .. py:attribute:: type

      *Implements* :py:meth:`@aws-cdk/aws-ec2.OperatingSystem.type`

      :type: :py:class:`~@aws-cdk/aws-ec2.OperatingSystemType`\  *(readonly)*


MachineImage
^^^^^^^^^^^^

.. py:class:: MachineImage(imageId, os)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.MachineImage;

      .. code-tab:: javascript

         const { MachineImage } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { MachineImage } from '@aws-cdk/aws-ec2';



   Representation of a machine to be launched

   

   Combines an AMI ID with an OS.



   :param imageId: 
   :type imageId: string
   :param os: 
   :type os: :py:class:`~@aws-cdk/aws-ec2.OperatingSystem`\ 

   .. py:attribute:: imageId

      :type: string *(readonly)*


   .. py:attribute:: os

      :type: :py:class:`~@aws-cdk/aws-ec2.OperatingSystem`\  *(readonly)*


OperatingSystem
^^^^^^^^^^^^^^^

.. py:class:: OperatingSystem()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.OperatingSystem;

      .. code-tab:: javascript

         const { OperatingSystem } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { OperatingSystem } from '@aws-cdk/aws-ec2';



   Abstraction of OS features we need to be aware of



   :abstract: Yes

   .. py:method:: createUserData(scripts) -> string

      :param scripts: 
      :type scripts: string[]
      :rtype: string
      :abstract: Yes


   .. py:attribute:: type

      :type: :py:class:`~@aws-cdk/aws-ec2.OperatingSystemType`\  *(readonly)* *(abstract)*


OperatingSystemType (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: OperatingSystemType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.OperatingSystemType;

      .. code-tab:: javascript

         const { OperatingSystemType } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { OperatingSystemType } from '@aws-cdk/aws-ec2';



   The OS type of a particular image



   .. py:data:: Linux

   .. py:data:: Windows


PrefixList
^^^^^^^^^^

.. py:class:: PrefixList(prefixListId)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.PrefixList;

      .. code-tab:: javascript

         const { PrefixList } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { PrefixList } from '@aws-cdk/aws-ec2';



   A prefix list

   

   Prefix lists are used to allow traffic to VPC-local service endpoints.

   

   For more information, see this page:

   

   https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-endpoints.html



   :implements: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
   :implements: :py:class:`~@aws-cdk/aws-ec2.IConnectable`\ 
   :param prefixListId: 
   :type prefixListId: string

   .. py:method:: toEgressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toEgressRuleJSON`

      Produce the egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toIngressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toIngressRuleJSON`

      Produce the ingress rule JSON for the given connection



      :rtype: any


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.canInlineRule`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: prefixListId

      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.uniqueId`

      A unique identifier for this connection peer



      :type: string *(readonly)*


Protocol (enum)
^^^^^^^^^^^^^^^

.. py:class:: Protocol

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.Protocol;

      .. code-tab:: javascript

         const { Protocol } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { Protocol } from '@aws-cdk/aws-ec2';



   Protocol for use in Connection Rules



   .. py:data:: All

   .. py:data:: Tcp

   .. py:data:: Udp

   .. py:data:: Icmp

   .. py:data:: Icmpv6


SecurityGroup
^^^^^^^^^^^^^

.. py:class:: SecurityGroup(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.SecurityGroup;

      .. code-tab:: javascript

         const { SecurityGroup } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { SecurityGroup } from '@aws-cdk/aws-ec2';



   Creates an Amazon EC2 security group within a VPC.

   

   This class has an additional optimization over imported security groups that it can also create

   inline ingress and egress rule (which saves on the total number of resources inside

   the template).



   :extends: :py:class:`~@aws-cdk/aws-ec2.SecurityGroupBase`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.SecurityGroupProps`\ 

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-ec2.ISecurityGroup

      Import an existing SecurityGroup



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ec2.SecurityGroupImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroup`\ 


   .. py:method:: addEgressRule(peer, connection, [description, [remoteRule]])

      *Overrides* :py:meth:`@aws-cdk/aws-ec2.SecurityGroupBase.addEgressRule`

      Add an egress rule for the current security group

      

      `remoteRule` controls where the Rule object is created if the peer is also a

      securityGroup and they are in different stack. If false (default) the

      rule object is created under the current SecurityGroup object. If true and the

      peer is also a SecurityGroup, the rule object is created under the remote

      SecurityGroup object.



      :param peer: 
      :type peer: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
      :param connection: 
      :type connection: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*
      :param remoteRule: 
      :type remoteRule: boolean *(optional)*


   .. py:method:: addIngressRule(peer, connection, [description, [remoteRule]])

      *Overrides* :py:meth:`@aws-cdk/aws-ec2.SecurityGroupBase.addIngressRule`

      Add an ingress rule for the current security group

      

      `remoteRule` controls where the Rule object is created if the peer is also a

      securityGroup and they are in different stack. If false (default) the

      rule object is created under the current SecurityGroup object. If true and the

      peer is also a SecurityGroup, the rule object is created under the remote

      SecurityGroup object.



      :param peer: 
      :type peer: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
      :param connection: 
      :type connection: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*
      :param remoteRule: 
      :type remoteRule: boolean *(optional)*


   .. py:method:: export() -> @aws-cdk/aws-ec2.SecurityGroupImportProps

      *Implements* :py:meth:`@aws-cdk/aws-ec2.SecurityGroupBase.export`

      Export this SecurityGroup for use in a different Stack



      :rtype: :py:class:`~@aws-cdk/aws-ec2.SecurityGroupImportProps`\ 


   .. py:attribute:: groupName

      An attribute that represents the security group name.



      :type: string *(readonly)*


   .. py:attribute:: securityGroupId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.SecurityGroupBase.securityGroupId`

      The ID of the security group



      :type: string *(readonly)*


   .. py:attribute:: vpcId

      An attribute that represents the physical VPC ID this security group is part of.



      :type: string *(readonly)*


   .. py:method:: toEgressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.SecurityGroupBase <@aws-cdk/aws-ec2.SecurityGroupBase.toEgressRuleJSON>`

      Produce the egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toIngressRuleJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.SecurityGroupBase <@aws-cdk/aws-ec2.SecurityGroupBase.toIngressRuleJSON>`

      Produce the ingress rule JSON for the given connection



      :rtype: any


   .. py:attribute:: canInlineRule

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.SecurityGroupBase <@aws-cdk/aws-ec2.SecurityGroupBase.canInlineRule>`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.SecurityGroupBase <@aws-cdk/aws-ec2.SecurityGroupBase.connections>`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.SecurityGroupBase <@aws-cdk/aws-ec2.SecurityGroupBase.uniqueId>`

      A unique identifier for this connection peer



      :type: string *(readonly)*


   .. py:attribute:: defaultPortRange

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.SecurityGroupBase <@aws-cdk/aws-ec2.SecurityGroupBase.defaultPortRange>`

      FIXME: Where to place this??



      :type: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\  *(optional)* *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


SecurityGroupBase
^^^^^^^^^^^^^^^^^

.. py:class:: SecurityGroupBase(scope, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.SecurityGroupBase;

      .. code-tab:: javascript

         const { SecurityGroupBase } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { SecurityGroupBase } from '@aws-cdk/aws-ec2';



   A SecurityGroup that is not created in this template



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroup`\ 
   :abstract: Yes
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string

   .. py:staticmethod:: isSecurityGroup(construct) -> boolean

      Return whether the indicated object is a security group



      :param construct: 
      :type construct: any
      :rtype: boolean


   .. py:method:: addEgressRule(peer, connection, [description, [remoteRule]])

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroup.addEgressRule`

      Add an egress rule for the current security group

      

      `remoteRule` controls where the Rule object is created if the peer is also a

      securityGroup and they are in different stack. If false (default) the

      rule object is created under the current SecurityGroup object. If true and the

      peer is also a SecurityGroup, the rule object is created under the remote

      SecurityGroup object.



      :param peer: 
      :type peer: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
      :param connection: 
      :type connection: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*
      :param remoteRule: 
      :type remoteRule: boolean *(optional)*


   .. py:method:: addIngressRule(peer, connection, [description, [remoteRule]])

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroup.addIngressRule`

      Add an ingress rule for the current security group

      

      `remoteRule` controls where the Rule object is created if the peer is also a

      securityGroup and they are in different stack. If false (default) the

      rule object is created under the current SecurityGroup object. If true and the

      peer is also a SecurityGroup, the rule object is created under the remote

      SecurityGroup object.



      :param peer: 
      :type peer: :py:class:`~@aws-cdk/aws-ec2.ISecurityGroupRule`\ 
      :param connection: 
      :type connection: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
      :param description: 
      :type description: string *(optional)*
      :param remoteRule: 
      :type remoteRule: boolean *(optional)*


   .. py:method:: export() -> @aws-cdk/aws-ec2.SecurityGroupImportProps

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroup.export`

      Export this SecurityGroup for use in a different Stack



      :rtype: :py:class:`~@aws-cdk/aws-ec2.SecurityGroupImportProps`\ 
      :abstract: Yes


   .. py:method:: toEgressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toEgressRuleJSON`

      Produce the egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toIngressRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.toIngressRuleJSON`

      Produce the ingress rule JSON for the given connection



      :rtype: any


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.canInlineRule`

      Whether the rule can be inlined into a SecurityGroup or not



      :type: boolean *(readonly)*


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`~@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: securityGroupId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroup.securityGroupId`

      ID for the current security group



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: uniqueId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.ISecurityGroupRule.uniqueId`

      A unique identifier for this connection peer



      :type: string *(readonly)*


   .. py:attribute:: defaultPortRange

      FIXME: Where to place this??



      :type: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\  *(optional)* *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


SecurityGroupImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SecurityGroupImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.SecurityGroupImportProps;

      .. code-tab:: javascript

         // SecurityGroupImportProps is an interface

      .. code-tab:: typescript

         import { SecurityGroupImportProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: securityGroupId

      ID of security group



      :type: string


SecurityGroupProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SecurityGroupProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.SecurityGroupProps;

      .. code-tab:: javascript

         // SecurityGroupProps is an interface

      .. code-tab:: typescript

         import { SecurityGroupProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: vpc

      The VPC in which to create the security group.



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcNetwork`\ 


   .. py:attribute:: allowAllOutbound

      Whether to allow all outbound traffic by default.

      

      If this is set to true, there will only be a single egress rule which allows all

      outbound traffic. If this is set to false, no outbound traffic will be allowed by

      default and all egress traffic must be explicitly authorized.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: description

      A description of the security group.



      :type: string *(optional)*
      :default: The default name will be the construct's CDK path.


   .. py:attribute:: groupName

      The name of the security group. For valid values, see the GroupName

      parameter of the CreateSecurityGroup action in the Amazon EC2 API

      Reference.

      

      It is not recommended to use an explicit group name.



      :type: string *(optional)*
      :default: If you don't specify a GroupName, AWS CloudFormation generates a
unique physical ID and uses that ID for the group name.


SubnetConfiguration (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SubnetConfiguration

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.SubnetConfiguration;

      .. code-tab:: javascript

         // SubnetConfiguration is an interface

      .. code-tab:: typescript

         import { SubnetConfiguration } from '@aws-cdk/aws-ec2';



   Specify configuration parameters for a VPC to be built





   .. py:attribute:: name

      The common Logical Name for the `VpcSubnet`

      

      Thi name will be suffixed with an integer correlating to a specific

      availability zone.



      :type: string


   .. py:attribute:: subnetType

      The type of Subnet to configure.

      

      The Subnet type will control the ability to route and connect to the

      Internet.



      :type: :py:class:`~@aws-cdk/aws-ec2.SubnetType`\ 


   .. py:attribute:: cidrMask

      The CIDR Mask or the number of leading 1 bits in the routing mask

      

      Valid values are 16 - 28



      :type: number *(optional)*


SubnetType (enum)
^^^^^^^^^^^^^^^^^

.. py:class:: SubnetType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.SubnetType;

      .. code-tab:: javascript

         const { SubnetType } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { SubnetType } from '@aws-cdk/aws-ec2';



   The type of Subnet



   .. py:data:: Isolated

   Isolated Subnets do not route Outbound traffic

   

   This can be good for subnets with RDS or

   Elasticache endpoints



   .. py:data:: Private

   Subnet that routes to the internet, but not vice versa.

   

   Instances in a private subnet can connect to the Internet, but will not

   allow connections to be initiated from the Internet.

   

   Outbound traffic will be routed via a NAT Gateway. Preference being in

   the same AZ, but if not available will use another AZ (control by

   specifing `maxGateways` on VpcNetwork). This might be used for

   experimental cost conscious accounts or accounts where HA outbound

   traffic is not needed.



   .. py:data:: Public

   Subnet connected to the Internet

   

   Instances in a Public subnet can connect to the Internet and can be

   connected to from the Internet as long as they are launched with public

   IPs (controlled on the AutoScalingGroup or other constructs that launch

   instances).

   

   Public subnets route outbound traffic via an Internet Gateway.




TcpAllPorts
^^^^^^^^^^^

.. py:class:: TcpAllPorts()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.TcpAllPorts;

      .. code-tab:: javascript

         const { TcpAllPorts } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { TcpAllPorts } from '@aws-cdk/aws-ec2';



   All TCP Ports



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


TcpPort
^^^^^^^

.. py:class:: TcpPort(port)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.TcpPort;

      .. code-tab:: javascript

         const { TcpPort } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { TcpPort } from '@aws-cdk/aws-ec2';



   A single TCP port



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param port: 
   :type port: number

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: port

      :type: number *(readonly)*


TcpPortFromAttribute
^^^^^^^^^^^^^^^^^^^^

.. py:class:: TcpPortFromAttribute(port)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.TcpPortFromAttribute;

      .. code-tab:: javascript

         const { TcpPortFromAttribute } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { TcpPortFromAttribute } from '@aws-cdk/aws-ec2';



   A single TCP port that is provided by a resource attribute



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param port: 
   :type port: string

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: port

      :type: string *(readonly)*


TcpPortRange
^^^^^^^^^^^^

.. py:class:: TcpPortRange(startPort, endPort)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.TcpPortRange;

      .. code-tab:: javascript

         const { TcpPortRange } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { TcpPortRange } from '@aws-cdk/aws-ec2';



   A TCP port range



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param startPort: 
   :type startPort: number
   :param endPort: 
   :type endPort: number

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: endPort

      :type: number *(readonly)*


   .. py:attribute:: startPort

      :type: number *(readonly)*


UdpAllPorts
^^^^^^^^^^^

.. py:class:: UdpAllPorts()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.UdpAllPorts;

      .. code-tab:: javascript

         const { UdpAllPorts } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { UdpAllPorts } from '@aws-cdk/aws-ec2';



   All UDP Ports



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


UdpPort
^^^^^^^

.. py:class:: UdpPort(port)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.UdpPort;

      .. code-tab:: javascript

         const { UdpPort } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { UdpPort } from '@aws-cdk/aws-ec2';



   A single UDP port



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param port: 
   :type port: number

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: port

      :type: number *(readonly)*


UdpPortFromAttribute
^^^^^^^^^^^^^^^^^^^^

.. py:class:: UdpPortFromAttribute(port)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.UdpPortFromAttribute;

      .. code-tab:: javascript

         const { UdpPortFromAttribute } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { UdpPortFromAttribute } from '@aws-cdk/aws-ec2';



   A single UDP port that is provided by a resource attribute



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param port: 
   :type port: string

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: port

      :type: string *(readonly)*


UdpPortRange
^^^^^^^^^^^^

.. py:class:: UdpPortRange(startPort, endPort)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.UdpPortRange;

      .. code-tab:: javascript

         const { UdpPortRange } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { UdpPortRange } from '@aws-cdk/aws-ec2';



   A UDP port range



   :implements: :py:class:`~@aws-cdk/aws-ec2.IPortRange`\ 
   :param startPort: 
   :type startPort: number
   :param endPort: 
   :type endPort: number

   .. py:method:: toRuleJSON() -> any

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.toRuleJSON`

      Produce the ingress/egress rule JSON for the given connection



      :rtype: any


   .. py:method:: toString() -> string

      Returns a string representation of an object.



      :rtype: string


   .. py:attribute:: canInlineRule

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IPortRange.canInlineRule`

      Whether the rule containing this port range can be inlined into a securitygroup or not.



      :type: boolean *(readonly)*


   .. py:attribute:: endPort

      :type: number *(readonly)*


   .. py:attribute:: startPort

      :type: number *(readonly)*


VpcNetwork
^^^^^^^^^^

.. py:class:: VpcNetwork(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcNetwork;

      .. code-tab:: javascript

         const { VpcNetwork } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { VpcNetwork } from '@aws-cdk/aws-ec2';



   VpcNetwork deploys an AWS VPC, with public and private subnets per Availability Zone.

   For example:

   

   import { VpcNetwork } from '@aws-cdk/aws-ec2'

   

   const vpc = new VpcNetwork(this, {

      cidr: "10.0.0.0/16"

   })

   

   // Iterate the public subnets

   for (let subnet of vpc.publicSubnets) {

   

   }

   

   // Iterate the private subnets

   for (let subnet of vpc.privateSubnets) {

   

   }



   :extends: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkBase`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkProps`\  *(optional)*

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-ec2.IVpcNetwork

      Import an exported VPC



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.IVpcNetwork`\ 


   .. py:staticmethod:: importFromContext(scope, id, props) -> @aws-cdk/aws-ec2.IVpcNetwork

      Import an existing VPC from context



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkProviderProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.IVpcNetwork`\ 


   .. py:method:: export() -> @aws-cdk/aws-ec2.VpcNetworkImportProps

      *Implements* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase.export`

      Export this VPC from the stack



      :rtype: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkImportProps`\ 


   .. py:attribute:: DEFAULT_CIDR_RANGE

      The default CIDR range used when creating VPCs.

      This can be overridden using VpcNetworkProps when creating a VPCNetwork resource.

      e.g. new VpcResource(this, { cidr: '192.168.0.0./16' })



      :type: string *(readonly)* *(static)*


   .. py:attribute:: DEFAULT_SUBNETS

      The default subnet configuration

      

      1 Public and 1 Private subnet per AZ evenly split



      :type: :py:class:`~@aws-cdk/aws-ec2.SubnetConfiguration`\ [] *(readonly)* *(static)*


   .. py:attribute:: availabilityZones

      *Implements* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase.availabilityZones`

      AZs for this VPC



      :type: string[] *(readonly)*


   .. py:attribute:: cidr

      :type: string *(readonly)*


   .. py:attribute:: isolatedSubnets

      *Implements* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase.isolatedSubnets`

      List of isolated subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)*


   .. py:attribute:: privateSubnets

      *Implements* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase.privateSubnets`

      List of private subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)*


   .. py:attribute:: publicSubnets

      *Implements* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase.publicSubnets`

      List of public subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)*


   .. py:attribute:: vpcId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase.vpcId`

      Identifier for this VPC



      :type: string *(readonly)*


   .. py:method:: isPublicSubnet(subnet) -> boolean

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase <@aws-cdk/aws-ec2.VpcNetworkBase.isPublicSubnet>`

      Return whether the given subnet is one of this VPC's public subnets.

      

      The subnet must literally be one of the subnet object obtained from

      this VPC. A subnet that merely represents the same subnet will

      never return true.



      :param subnet: 
      :type subnet: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ 
      :rtype: boolean


   .. py:method:: subnets([placement]) -> @aws-cdk/aws-ec2.IVpcSubnet[]

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcNetworkBase <@aws-cdk/aws-ec2.VpcNetworkBase.subnets>`

      Return the subnets appropriate for the placement strategy



      :param placement: 
      :type placement: :py:class:`~@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ []


   .. py:attribute:: internetDependencies

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcNetworkBase <@aws-cdk/aws-ec2.VpcNetworkBase.internetDependencies>`

      Dependencies for internet connectivity



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: natDependencies

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcNetworkBase <@aws-cdk/aws-ec2.VpcNetworkBase.natDependencies>`

      Dependencies for NAT connectivity



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: vpcRegion

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcNetworkBase <@aws-cdk/aws-ec2.VpcNetworkBase.vpcRegion>`

      The region where this VPC is defined



      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


VpcNetworkBase
^^^^^^^^^^^^^^

.. py:class:: VpcNetworkBase(scope, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcNetworkBase;

      .. code-tab:: javascript

         const { VpcNetworkBase } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { VpcNetworkBase } from '@aws-cdk/aws-ec2';



   A new or imported VPC



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-ec2.IVpcNetwork`\ 
   :abstract: Yes
   :param scope: The scope in which to define this construct
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: The scoped construct ID. Must be unique amongst siblings. If the ID includes a path separator (`/`), then it will be replaced by double dash `--`.
   :type id: string

   .. py:method:: export() -> @aws-cdk/aws-ec2.VpcNetworkImportProps

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.export`

      Export this VPC from the stack



      :rtype: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkImportProps`\ 
      :abstract: Yes


   .. py:method:: isPublicSubnet(subnet) -> boolean

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.isPublicSubnet`

      Return whether the given subnet is one of this VPC's public subnets.

      

      The subnet must literally be one of the subnet object obtained from

      this VPC. A subnet that merely represents the same subnet will

      never return true.



      :param subnet: 
      :type subnet: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ 
      :rtype: boolean


   .. py:method:: subnets([placement]) -> @aws-cdk/aws-ec2.IVpcSubnet[]

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.subnets`

      Return the subnets appropriate for the placement strategy



      :param placement: 
      :type placement: :py:class:`~@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ []


   .. py:attribute:: availabilityZones

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.availabilityZones`

      AZs for this VPC



      :type: string[] *(readonly)* *(abstract)*


   .. py:attribute:: internetDependencies

      Dependencies for internet connectivity



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: isolatedSubnets

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.isolatedSubnets`

      List of isolated subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)* *(abstract)*


   .. py:attribute:: natDependencies

      Dependencies for NAT connectivity



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: privateSubnets

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.privateSubnets`

      List of private subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)* *(abstract)*


   .. py:attribute:: publicSubnets

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.publicSubnets`

      List of public subnets in this VPC



      :type: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ [] *(readonly)* *(abstract)*


   .. py:attribute:: vpcId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.vpcId`

      Identifier for this VPC



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: vpcRegion

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcNetwork.vpcRegion`

      The region where this VPC is defined



      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


VpcNetworkImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VpcNetworkImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcNetworkImportProps;

      .. code-tab:: javascript

         // VpcNetworkImportProps is an interface

      .. code-tab:: typescript

         import { VpcNetworkImportProps } from '@aws-cdk/aws-ec2';



   Properties that reference an external VpcNetwork





   .. py:attribute:: availabilityZones

      List of availability zones for the subnets in this VPC.



      :type: string[]


   .. py:attribute:: vpcId

      VPC's identifier



      :type: string


   .. py:attribute:: isolatedSubnetIds

      List of isolated subnet IDs

      

      Must be undefined or match the availability zones in length and order.



      :type: string[] *(optional)*


   .. py:attribute:: isolatedSubnetNames

      List of names for the isolated subnets

      

      Must be undefined or have a name for every isolated subnet group.



      :type: string[] *(optional)*


   .. py:attribute:: privateSubnetIds

      List of private subnet IDs

      

      Must be undefined or match the availability zones in length and order.



      :type: string[] *(optional)*


   .. py:attribute:: privateSubnetNames

      List of names for the private subnets

      

      Must be undefined or have a name for every private subnet group.



      :type: string[] *(optional)*


   .. py:attribute:: publicSubnetIds

      List of public subnet IDs

      

      Must be undefined or match the availability zones in length and order.



      :type: string[] *(optional)*


   .. py:attribute:: publicSubnetNames

      List of names for the public subnets

      

      Must be undefined or have a name for every public subnet group.



      :type: string[] *(optional)*


VpcNetworkProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VpcNetworkProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcNetworkProps;

      .. code-tab:: javascript

         // VpcNetworkProps is an interface

      .. code-tab:: typescript

         import { VpcNetworkProps } from '@aws-cdk/aws-ec2';



   VpcNetworkProps allows you to specify configuration options for a VPC





   .. py:attribute:: cidr

      The CIDR range to use for the VPC (e.g. '10.0.0.0/16'). Should be a minimum of /28 and maximum size of /16.

      The range will be split evenly into two subnets per Availability Zone (one public, one private).



      :type: string *(optional)*


   .. py:attribute:: defaultInstanceTenancy

      The default tenancy of instances launched into the VPC.

      By default, instances will be launched with default (shared) tenancy.

      By setting this to dedicated tenancy, instances will be launched on hardware dedicated

      to a single AWS customer, unless specifically specified at instance launch time.

      Please note, not all instance types are usable with Dedicated tenancy.



      :type: :py:class:`~@aws-cdk/aws-ec2.DefaultInstanceTenancy`\  *(optional)*


   .. py:attribute:: enableDnsHostnames

      Indicates whether the instances launched in the VPC get public DNS hostnames.

      If this attribute is true, instances in the VPC get public DNS hostnames,

      but only if the enableDnsSupport attribute is also set to true.



      :type: boolean *(optional)*


   .. py:attribute:: enableDnsSupport

      Indicates whether the DNS resolution is supported for the VPC. If this attribute

      is false, the Amazon-provided DNS server in the VPC that resolves public DNS hostnames

      to IP addresses is not enabled. If this attribute is true, queries to the Amazon

      provided DNS server at the 169.254.169.253 IP address, or the reserved IP address

      at the base of the VPC IPv4 network range plus two will succeed.



      :type: boolean *(optional)*


   .. py:attribute:: maxAZs

      Define the maximum number of AZs to use in this region

      

      If the region has more AZs than you want to use (for example, because of EIP limits),

      pick a lower number here. The AZs will be sorted and picked from the start of the list.

      

      If you pick a higher number than the number of AZs in the region, all AZs in

      the region will be selected. To use "all AZs" available to your account, use a

      high number (such as 99).



      :type: number *(optional)*
      :default: 3


   .. py:attribute:: natGatewayPlacement

      Configures the subnets which will have NAT Gateways

      

      You can pick a specific group of subnets by specifying the group name;

      the picked subnets must be public subnets.



      :type: :py:class:`~@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :default: All public subnets


   .. py:attribute:: natGateways

      The number of NAT Gateways to create.

      

      For example, if set this to 1 and your subnet configuration is for 3 Public subnets then only

      one of the Public subnets will have a gateway and all Private subnets will route to this NAT Gateway.



      :type: number *(optional)*
      :default: maxAZs


   .. py:attribute:: subnetConfiguration

      Configure the subnets to build for each AZ

      

      The subnets are constructed in the context of the VPC so you only need

      specify the configuration. The VPC details (VPC ID, specific CIDR,

      specific AZ will be calculated during creation)

      

      For example if you want 1 public subnet, 1 private subnet, and 1 isolated

      subnet in each AZ provide the following:

      subnetConfiguration: [

          {

            cidrMask: 24,

            name: 'ingress',

            subnetType: SubnetType.Public,

          },

          {

            cidrMask: 24,

            name: 'application',

            subnetType: SubnetType.Private,

          },

          {

            cidrMask: 28,

            name: 'rds',

            subnetType: SubnetType.Isolated,

          }

      ]

      

      `cidrMask` is optional and if not provided the IP space in the VPC will be

      evenly divided between the requested subnets.



      :type: :py:class:`~@aws-cdk/aws-ec2.SubnetConfiguration`\ [] *(optional)*
      :default: the VPC CIDR will be evenly divided between 1 public and 1
private subnet per AZ


VpcNetworkProvider
^^^^^^^^^^^^^^^^^^

.. py:class:: VpcNetworkProvider(context, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcNetworkProvider;

      .. code-tab:: javascript

         const { VpcNetworkProvider } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { VpcNetworkProvider } from '@aws-cdk/aws-ec2';



   Context provider to discover and import existing VPCs



   :param context: 
   :type context: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkProviderProps`\ 

   .. py:attribute:: vpcProps

      Return the VPC import props matching the filter



      :type: :py:class:`~@aws-cdk/aws-ec2.VpcNetworkImportProps`\  *(readonly)*


VpcNetworkProviderProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VpcNetworkProviderProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcNetworkProviderProps;

      .. code-tab:: javascript

         // VpcNetworkProviderProps is an interface

      .. code-tab:: typescript

         import { VpcNetworkProviderProps } from '@aws-cdk/aws-ec2';



   Properties for looking up an existing VPC.

   

   The combination of properties must specify filter down to exactly one

   non-default VPC, otherwise an error is raised.





   .. py:attribute:: isDefault

      Whether to match the default VPC



      :type: boolean *(optional)*
      :default: Don't care whether we return the default VPC


   .. py:attribute:: tags

      Tags on the VPC

      

      The VPC must have all of these tags



      :type: string => string *(optional)*
      :default: Don't filter on tags


   .. py:attribute:: vpcId

      The ID of the VPC

      

      If given, will import exactly this VPC.



      :type: string *(optional)*
      :default: Don't filter on vpcId


   .. py:attribute:: vpcName

      The name of the VPC

      

      If given, will import the VPC with this name.



      :type: string *(optional)*
      :default: Don't filter on vpcName


VpcPlacementStrategy (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VpcPlacementStrategy

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcPlacementStrategy;

      .. code-tab:: javascript

         // VpcPlacementStrategy is an interface

      .. code-tab:: typescript

         import { VpcPlacementStrategy } from '@aws-cdk/aws-ec2';



   Customize how instances are placed inside a VPC

   

   Constructs that allow customization of VPC placement use parameters of this

   type to provide placement settings.

   

   By default, the instances are placed in the private subnets.





   .. py:attribute:: subnetName

      Place the instances in the subnets with the given name

      

      (This is the name supplied in subnetConfiguration).

      

      At most one of `subnetsToUse` and `subnetName` can be supplied.



      :type: string *(optional)*
      :default: name


   .. py:attribute:: subnetsToUse

      Place the instances in the subnets of the given type

      

      At most one of `subnetsToUse` and `subnetName` can be supplied.



      :type: :py:class:`~@aws-cdk/aws-ec2.SubnetType`\  *(optional)*
      :default: SubnetType.Private


VpcPrivateSubnet
^^^^^^^^^^^^^^^^

.. py:class:: VpcPrivateSubnet(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcPrivateSubnet;

      .. code-tab:: javascript

         const { VpcPrivateSubnet } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { VpcPrivateSubnet } from '@aws-cdk/aws-ec2';



   Represents a private VPC subnet resource



   :extends: :py:class:`~@aws-cdk/aws-ec2.VpcSubnet`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetProps`\ 

   .. py:method:: addDefaultNatRouteEntry(natGatewayId)

      Adds an entry to this subnets route table that points to the passed NATGatwayId



      :param natGatewayId: 
      :type natGatewayId: string


   .. py:method:: addDefaultRouteToIGW(gateway, gatewayAttachment)

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.addDefaultRouteToIGW>`

      Create a default route that points to a passed IGW, with a dependency

      on the IGW's attachment to the VPC.



      *Protected method*

      :param gateway: 
      :type gateway: :py:class:`~@aws-cdk/aws-ec2.CfnInternetGateway`\ 
      :param gatewayAttachment: 
      :type gatewayAttachment: :py:class:`~@aws-cdk/aws-ec2.CfnVPCGatewayAttachment`\ 


   .. py:method:: addDefaultRouteToNAT(natGatewayId)

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.addDefaultRouteToNAT>`

      *Protected method*

      :param natGatewayId: 
      :type natGatewayId: string


   .. py:method:: export() -> @aws-cdk/aws-ec2.VpcSubnetImportProps

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.export>`

      Exports this subnet to another stack.



      :rtype: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetImportProps`\ 


   .. py:attribute:: availabilityZone

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.availabilityZone>`

      The Availability Zone the subnet is located in



      :type: string *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.dependencyElements>`

      Parts of this VPC subnet



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: internetConnectivityEstablished

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.internetConnectivityEstablished>`

      Dependable that can be depended upon to force internet connectivity established on the VPC



      :type: :py:class:`@aws-cdk/cdk.IDependable`\  *(readonly)*


   .. py:attribute:: subnetId

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.subnetId>`

      The subnetId for this particular subnet



      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


VpcPublicSubnet
^^^^^^^^^^^^^^^

.. py:class:: VpcPublicSubnet(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcPublicSubnet;

      .. code-tab:: javascript

         const { VpcPublicSubnet } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { VpcPublicSubnet } from '@aws-cdk/aws-ec2';



   Represents a public VPC subnet resource



   :extends: :py:class:`~@aws-cdk/aws-ec2.VpcSubnet`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetProps`\ 

   .. py:method:: addDefaultIGWRouteEntry(gateway, gatewayAttachment)

      Create a default route that points to a passed IGW, with a dependency

      on the IGW's attachment to the VPC.



      :param gateway: 
      :type gateway: :py:class:`~@aws-cdk/aws-ec2.CfnInternetGateway`\ 
      :param gatewayAttachment: 
      :type gatewayAttachment: :py:class:`~@aws-cdk/aws-ec2.CfnVPCGatewayAttachment`\ 


   .. py:method:: addNatGateway() -> @aws-cdk/aws-ec2.CfnNatGateway

      Creates a new managed NAT gateway attached to this public subnet.

      Also adds the EIP for the managed NAT.



      :return: A ref to the the NAT Gateway ID
      :rtype: :py:class:`~@aws-cdk/aws-ec2.CfnNatGateway`\ 


   .. py:method:: addDefaultRouteToIGW(gateway, gatewayAttachment)

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.addDefaultRouteToIGW>`

      Create a default route that points to a passed IGW, with a dependency

      on the IGW's attachment to the VPC.



      *Protected method*

      :param gateway: 
      :type gateway: :py:class:`~@aws-cdk/aws-ec2.CfnInternetGateway`\ 
      :param gatewayAttachment: 
      :type gatewayAttachment: :py:class:`~@aws-cdk/aws-ec2.CfnVPCGatewayAttachment`\ 


   .. py:method:: addDefaultRouteToNAT(natGatewayId)

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.addDefaultRouteToNAT>`

      *Protected method*

      :param natGatewayId: 
      :type natGatewayId: string


   .. py:method:: export() -> @aws-cdk/aws-ec2.VpcSubnetImportProps

      *Inherited from* :py:meth:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.export>`

      Exports this subnet to another stack.



      :rtype: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetImportProps`\ 


   .. py:attribute:: availabilityZone

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.availabilityZone>`

      The Availability Zone the subnet is located in



      :type: string *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.dependencyElements>`

      Parts of this VPC subnet



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: internetConnectivityEstablished

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.internetConnectivityEstablished>`

      Dependable that can be depended upon to force internet connectivity established on the VPC



      :type: :py:class:`@aws-cdk/cdk.IDependable`\  *(readonly)*


   .. py:attribute:: subnetId

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.VpcSubnet <@aws-cdk/aws-ec2.VpcSubnet.subnetId>`

      The subnetId for this particular subnet



      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


VpcSubnet
^^^^^^^^^

.. py:class:: VpcSubnet(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcSubnet;

      .. code-tab:: javascript

         const { VpcSubnet } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { VpcSubnet } from '@aws-cdk/aws-ec2';



   Represents a new VPC subnet resource



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetProps`\ 

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-ec2.IVpcSubnet

      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.IVpcSubnet`\ 


   .. py:method:: addDefaultRouteToIGW(gateway, gatewayAttachment)

      Create a default route that points to a passed IGW, with a dependency

      on the IGW's attachment to the VPC.



      *Protected method*

      :param gateway: 
      :type gateway: :py:class:`~@aws-cdk/aws-ec2.CfnInternetGateway`\ 
      :param gatewayAttachment: 
      :type gatewayAttachment: :py:class:`~@aws-cdk/aws-ec2.CfnVPCGatewayAttachment`\ 


   .. py:method:: addDefaultRouteToNAT(natGatewayId)

      *Protected method*

      :param natGatewayId: 
      :type natGatewayId: string


   .. py:method:: export() -> @aws-cdk/aws-ec2.VpcSubnetImportProps

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcSubnet.export`

      Exports this subnet to another stack.



      :rtype: :py:class:`~@aws-cdk/aws-ec2.VpcSubnetImportProps`\ 


   .. py:attribute:: availabilityZone

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcSubnet.availabilityZone`

      The Availability Zone the subnet is located in



      :type: string *(readonly)*


   .. py:attribute:: dependencyElements

      Parts of this VPC subnet



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: internetConnectivityEstablished

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcSubnet.internetConnectivityEstablished`

      Dependable that can be depended upon to force internet connectivity established on the VPC



      :type: :py:class:`@aws-cdk/cdk.IDependable`\  *(readonly)*


   .. py:attribute:: subnetId

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IVpcSubnet.subnetId`

      The subnetId for this particular subnet



      :type: string *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


VpcSubnetImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VpcSubnetImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcSubnetImportProps;

      .. code-tab:: javascript

         // VpcSubnetImportProps is an interface

      .. code-tab:: typescript

         import { VpcSubnetImportProps } from '@aws-cdk/aws-ec2';





   .. py:attribute:: availabilityZone

      The Availability Zone the subnet is located in



      :type: string


   .. py:attribute:: subnetId

      The subnetId for this particular subnet



      :type: string


VpcSubnetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VpcSubnetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.VpcSubnetProps;

      .. code-tab:: javascript

         // VpcSubnetProps is an interface

      .. code-tab:: typescript

         import { VpcSubnetProps } from '@aws-cdk/aws-ec2';



   Specify configuration parameters for a VPC subnet





   .. py:attribute:: availabilityZone

      The availability zone for the subnet



      :type: string


   .. py:attribute:: cidrBlock

      The CIDR notation for this subnet



      :type: string


   .. py:attribute:: vpcId

      The VPC which this subnet is part of



      :type: string


   .. py:attribute:: mapPublicIpOnLaunch

      Controls if a public IP is associated to an instance at launch

      

      Defaults to true in Subnet.Public, false in Subnet.Private or Subnet.Isolated.



      :type: boolean *(optional)*


WindowsImage
^^^^^^^^^^^^

.. py:class:: WindowsImage(version)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.WindowsImage;

      .. code-tab:: javascript

         const { WindowsImage } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { WindowsImage } from '@aws-cdk/aws-ec2';



   Select the latest version of the indicated Windows version

   

   The AMI ID is selected using the values published to the SSM parameter store.

   

   https://aws.amazon.com/blogs/mt/query-for-the-latest-windows-ami-using-systems-manager-parameter-store/



   :implements: :py:class:`~@aws-cdk/aws-ec2.IMachineImageSource`\ 
   :param version: 
   :type version: :py:class:`~@aws-cdk/aws-ec2.WindowsVersion`\ 

   .. py:method:: getImage(scope) -> @aws-cdk/aws-ec2.MachineImage

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IMachineImageSource.getImage`

      Return the image to use in the given context



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ec2.MachineImage`\ 


   .. py:attribute:: version

      :type: :py:class:`~@aws-cdk/aws-ec2.WindowsVersion`\  *(readonly)*


WindowsOS
^^^^^^^^^

.. py:class:: WindowsOS()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.WindowsOS;

      .. code-tab:: javascript

         const { WindowsOS } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { WindowsOS } from '@aws-cdk/aws-ec2';



   OS features specialized for Windows



   :extends: :py:class:`~@aws-cdk/aws-ec2.OperatingSystem`\ 

   .. py:method:: createUserData(scripts) -> string

      *Implements* :py:meth:`@aws-cdk/aws-ec2.OperatingSystem.createUserData`

      :param scripts: 
      :type scripts: string[]
      :rtype: string


   .. py:attribute:: type

      *Implements* :py:meth:`@aws-cdk/aws-ec2.OperatingSystem.type`

      :type: :py:class:`~@aws-cdk/aws-ec2.OperatingSystemType`\  *(readonly)*


WindowsVersion (enum)
^^^^^^^^^^^^^^^^^^^^^

.. py:class:: WindowsVersion

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.EC2;

      .. code-tab:: java

         import software.amazon.awscdk.services.ec2.WindowsVersion;

      .. code-tab:: javascript

         const { WindowsVersion } = require('@aws-cdk/aws-ec2');

      .. code-tab:: typescript

         import { WindowsVersion } from '@aws-cdk/aws-ec2';



   The Windows version to use for the WindowsImage



   .. py:data:: WindowsServer2016TurksihFullBase

   .. py:data:: WindowsServer2016SwedishFullBase

   .. py:data:: WindowsServer2016SpanishFullBase

   .. py:data:: WindowsServer2016RussianFullBase

   .. py:data:: WindowsServer2016PortuguesePortugalFullBase

   .. py:data:: WindowsServer2016PortugueseBrazilFullBase

   .. py:data:: WindowsServer2016PolishFullBase

   .. py:data:: WindowsServer2016KoreanFullSQL2016Base

   .. py:data:: WindowsServer2016KoreanFullBase

   .. py:data:: WindowsServer2016JapaneseFullSQL2016Web

   .. py:data:: WindowsServer2016JapaneseFullSQL2016Standard

   .. py:data:: WindowsServer2016JapaneseFullSQL2016Express

   .. py:data:: WindowsServer2016JapaneseFullSQL2016Enterprise

   .. py:data:: WindowsServer2016JapaneseFullBase

   .. py:data:: WindowsServer2016ItalianFullBase

   .. py:data:: WindowsServer2016HungarianFullBase

   .. py:data:: WindowsServer2016GermanFullBase

   .. py:data:: WindowsServer2016FrenchFullBase

   .. py:data:: WindowsServer2016EnglishNanoBase

   .. py:data:: WindowsServer2016EnglishFullSQL2017Web

   .. py:data:: WindowsServer2016EnglishFullSQL2017Standard

   .. py:data:: WindowsServer2016EnglishFullSQL2017Express

   .. py:data:: WindowsServer2016EnglishFullSQL2017Enterprise


