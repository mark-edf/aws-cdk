.. @jsii-pacmak:meta@ {"fingerprint":"7wBkA/FnoNxvkyOhsdFs35ClYi21y04pllSRv/R0t8A="}

@aws-cdk/aws-sns
================

.. mdinclude:: ./__aws-cdk_aws-sns.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.SNS/0.20.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.SNS" Version="0.20.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.SNS --version 0.20.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.SNS" version="0.20.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/sns/0.20.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:sns:jar:0.20.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="sns" rev="0.20.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>sns</artifactId>
           <version>0.20.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:sns:0.20.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='sns', version='0.20.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-sns/v/0.20.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-sns@0.20.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-sns": "^0.20.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-sns@0.20.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-sns/v/0.20.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-sns@0.20.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-sns": "^0.20.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-sns@0.20.0



.. py:module:: @aws-cdk/aws-sns

EmailSubscriptionOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: EmailSubscriptionOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.EmailSubscriptionOptions;

      .. code-tab:: javascript

         // EmailSubscriptionOptions is an interface

      .. code-tab:: typescript

         import { EmailSubscriptionOptions } from '@aws-cdk/aws-sns';



   Options for email subscriptions.





   .. py:attribute:: json

      Indicates if the full notification JSON should be sent to the email

      address or just the message text.



      :type: boolean *(optional)*
      :default: Message text (false)


Subscription
^^^^^^^^^^^^

.. py:class:: Subscription(parent, name, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.Subscription;

      .. code-tab:: javascript

         const { Subscription } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { Subscription } from '@aws-cdk/aws-sns';



   A new subscription.

   

   Prefer to use the `TopicRef.subscribeXxx()` methods to creating instances of

   this class.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-sns.SubscriptionProps`\ 

   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


SubscriptionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SubscriptionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.SubscriptionProps;

      .. code-tab:: javascript

         // SubscriptionProps is an interface

      .. code-tab:: typescript

         import { SubscriptionProps } from '@aws-cdk/aws-sns';



   Properties for creating a new subscription





   .. py:attribute:: endpoint

      The subscription endpoint.

      

      The meaning of this value depends on the value for 'protocol'.



      :type: any


   .. py:attribute:: protocol

      What type of subscription to add.



      :type: :py:class:`~@aws-cdk/aws-sns.SubscriptionProtocol`\ 


   .. py:attribute:: topic

      The topic to subscribe to.



      :type: :py:class:`~@aws-cdk/aws-sns.TopicRef`\ 


SubscriptionProtocol (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SubscriptionProtocol

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.SubscriptionProtocol;

      .. code-tab:: javascript

         const { SubscriptionProtocol } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { SubscriptionProtocol } from '@aws-cdk/aws-sns';



   The type of subscription, controlling the type of the endpoint parameter.



   .. py:data:: Http

   JSON-encoded message is POSTED to an HTTP url.



   .. py:data:: Https

   JSON-encoded message is POSTed to an HTTPS url.



   .. py:data:: Email

   Notifications are sent via email.



   .. py:data:: EmailJson

   Notifications are JSON-encoded and sent via mail.



   .. py:data:: Sms

   Notification is delivered by SMS



   .. py:data:: Sqs

   Notifications are enqueued into an SQS queue.



   .. py:data:: Application

   JSON-encoded notifications are sent to a mobile app endpoint.



   .. py:data:: Lambda

   Notifications trigger a Lambda function.




Topic
^^^^^

.. py:class:: Topic(parent, name, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.Topic;

      .. code-tab:: javascript

         const { Topic } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { Topic } from '@aws-cdk/aws-sns';



   A new SNS topic



   :extends: :py:class:`~@aws-cdk/aws-sns.TopicRef`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-sns.TopicProps`\  *(optional)*

   .. py:attribute:: autoCreatePolicy

      *Implements* :py:meth:`@aws-cdk/aws-sns.TopicRef.autoCreatePolicy`

      Controls automatic creation of policy objects.

      

      Set by subclasses.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: topicArn

      *Implements* :py:meth:`@aws-cdk/aws-sns.TopicRef.topicArn`

      :type: string *(readonly)*


   .. py:attribute:: topicName

      *Implements* :py:meth:`@aws-cdk/aws-sns.TopicRef.topicName`

      :type: string *(readonly)*


   .. py:method:: addToResourcePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.addToResourcePolicy>`

      Adds a statement to the IAM resource policy associated with this topic.

      

      If this topic was created in this stack (`new Topic`), a topic policy

      will be automatically created upon the first call to `addToPolicy`. If

      the topic is improted (`Topic.import`), then this is a no-op.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: asBucketNotificationDestination(bucketArn, bucketId) -> @aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.asBucketNotificationDestination>`

      Implements the IBucketNotificationDestination interface, allowing topics to be used

      as bucket notification destinations.



      :param bucketArn: The ARN of the bucket sending the notifications
      :type bucketArn: string
      :param bucketId: A unique ID of the bucket
      :type bucketId: string
      :rtype: :py:class:`@aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps`\ 


   .. py:method:: asEventRuleTarget(_ruleArn, _ruleId) -> @aws-cdk/aws-events.EventRuleTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.asEventRuleTarget>`

      Returns a RuleTarget that can be used to trigger this SNS topic as a

      result from a CloudWatch event.



      :param _ruleArn: 
      :type _ruleArn: string
      :param _ruleId: 
      :type _ruleId: string
      :rtype: :py:class:`@aws-cdk/aws-events.EventRuleTargetProps`\ 


   .. py:method:: asLifecycleHookTarget(lifecycleHook) -> @aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.asLifecycleHookTarget>`

      Allow using SNS topics as lifecycle hook targets



      :param lifecycleHook: 
      :type lifecycleHook: :py:class:`@aws-cdk/aws-autoscaling-api.ILifecycleHook`\ 
      :rtype: :py:class:`@aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps`\ 


   .. py:method:: export() -> @aws-cdk/aws-sns.TopicRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.export>`

      Export this Topic



      :rtype: :py:class:`~@aws-cdk/aws-sns.TopicRefProps`\ 


   .. py:method:: grantPublish([identity])

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.grantPublish>`

      Grant topic publishing permissions to the given identity



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.metric>`

      Construct a Metric object for the current topic for the given metric



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNumberOfMessagesDelivered([props]) -> @aws-cdk/aws-cloudwatch.Metric

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.metricNumberOfMessagesDelivered>`

      Metric for the number of messages that were successfully delivered through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNumberOfMessagesFailed([props]) -> @aws-cdk/aws-cloudwatch.Metric

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.metricNumberOfMessagesFailed>`

      Metric for the number of messages that failed to publish through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNumberOfMessagesPublished([props]) -> @aws-cdk/aws-cloudwatch.Metric

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.metricNumberOfMessagesPublished>`

      Metric for the number of messages published through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricPublishSize([props]) -> @aws-cdk/aws-cloudwatch.Metric

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.metricPublishSize>`

      Metric for the size of messages published through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: subscribe(name, endpoint, protocol)

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.subscribe>`

      Subscribe some endpoint to this topic



      :param name: 
      :type name: string
      :param endpoint: 
      :type endpoint: string
      :param protocol: 
      :type protocol: :py:class:`~@aws-cdk/aws-sns.SubscriptionProtocol`\ 


   .. py:method:: subscribeEmail(name, emailAddress, [options]) -> @aws-cdk/aws-sns.Subscription

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.subscribeEmail>`

      Defines a subscription from this SNS topic to an email address.



      :param name: A name for the subscription
      :type name: string
      :param emailAddress: The email address to use.
      :type emailAddress: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-sns.EmailSubscriptionOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:method:: subscribeLambda(lambdaFunction) -> @aws-cdk/aws-sns.Subscription

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.subscribeLambda>`

      Defines a subscription from this SNS Topic to a Lambda function.

      

      The Lambda's resource policy will be updated to allow this topic to

      invoke the function.



      :param lambdaFunction: The Lambda function to invoke
      :type lambdaFunction: :py:class:`@aws-cdk/aws-lambda.FunctionRef`\ 
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:method:: subscribeQueue(queue) -> @aws-cdk/aws-sns.Subscription

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.subscribeQueue>`

      Defines a subscription from this SNS topic to an SQS queue.

      

      The queue resource policy will be updated to allow this SNS topic to send

      messages to the queue.

      

      TODO: change to QueueRef.



      :param queue: The target queue
      :type queue: :py:class:`@aws-cdk/aws-sqs.QueueRef`\ 
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:method:: subscribeUrl(name, url) -> @aws-cdk/aws-sns.Subscription

      *Inherited from* :py:meth:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.subscribeUrl>`

      Defines a subscription from this SNS topic to an http:// or https:// URL.



      :param name: A name for the subscription
      :type name: string
      :param url: The URL to invoke
      :type url: string
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:attribute:: alarmActionArn

      *Inherited from* :py:attr:`@aws-cdk/aws-sns.TopicRef <@aws-cdk/aws-sns.TopicRef.alarmActionArn>`

      Return the ARN that should be used for a CloudWatch Alarm action



      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


TopicPolicy
^^^^^^^^^^^

.. py:class:: TopicPolicy(parent, name, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.TopicPolicy;

      .. code-tab:: javascript

         const { TopicPolicy } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { TopicPolicy } from '@aws-cdk/aws-sns';



   Applies a policy to SNS topics.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-sns.TopicPolicyProps`\ 

   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      Allows topic policy to be added as a dependency.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: document

      The IAM policy document for this policy.



      :type: :py:class:`@aws-cdk/aws-iam.PolicyDocument`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


TopicPolicyProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TopicPolicyProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.TopicPolicyProps;

      .. code-tab:: javascript

         // TopicPolicyProps is an interface

      .. code-tab:: typescript

         import { TopicPolicyProps } from '@aws-cdk/aws-sns';





   .. py:attribute:: topics

      The set of topics this policy applies to.



      :type: :py:class:`~@aws-cdk/aws-sns.TopicRef`\ []


TopicProps (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TopicProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.TopicProps;

      .. code-tab:: javascript

         // TopicProps is an interface

      .. code-tab:: typescript

         import { TopicProps } from '@aws-cdk/aws-sns';



   Properties for a new SNS topic





   .. py:attribute:: displayName

      A developer-defined string that can be used to identify this SNS topic.



      :type: string *(optional)*
      :default: None


   .. py:attribute:: topicName

      A name for the topic.

      

      If you don't specify a name, AWS CloudFormation generates a unique

      physical ID and uses that ID for the topic name. For more information,

      see Name Type.



      :type: string *(optional)*
      :default: Generated name


TopicRef
^^^^^^^^

.. py:class:: TopicRef(parent, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.TopicRef;

      .. code-tab:: javascript

         const { TopicRef } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { TopicRef } from '@aws-cdk/aws-sns';



   Either a new or imported Topic



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\ 
   :implements: :py:class:`@aws-cdk/aws-cloudwatch.IAlarmAction`\ 
   :implements: :py:class:`@aws-cdk/aws-s3-notifications.IBucketNotificationDestination`\ 
   :implements: :py:class:`@aws-cdk/aws-autoscaling-api.ILifecycleHookTarget`\ 
   :abstract: Yes
   :param parent: The parent construct
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string

   .. py:staticmethod:: import(parent, name, props) -> @aws-cdk/aws-sns.TopicRef

      Import a Topic defined elsewhere



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param name: 
      :type name: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-sns.TopicRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-sns.TopicRef`\ 


   .. py:method:: addToResourcePolicy(statement)

      Adds a statement to the IAM resource policy associated with this topic.

      

      If this topic was created in this stack (`new Topic`), a topic policy

      will be automatically created upon the first call to `addToPolicy`. If

      the topic is improted (`Topic.import`), then this is a no-op.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: asBucketNotificationDestination(bucketArn, bucketId) -> @aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps

      *Implements* :py:meth:`@aws-cdk/aws-s3-notifications.IBucketNotificationDestination.asBucketNotificationDestination`

      Implements the IBucketNotificationDestination interface, allowing topics to be used

      as bucket notification destinations.



      :param bucketArn: The ARN of the bucket sending the notifications
      :type bucketArn: string
      :param bucketId: A unique ID of the bucket
      :type bucketId: string
      :rtype: :py:class:`@aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps`\ 


   .. py:method:: asEventRuleTarget(_ruleArn, _ruleId) -> @aws-cdk/aws-events.EventRuleTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-events.IEventRuleTarget.asEventRuleTarget`

      Returns a RuleTarget that can be used to trigger this SNS topic as a

      result from a CloudWatch event.



      :param _ruleArn: 
      :type _ruleArn: string
      :param _ruleId: 
      :type _ruleId: string
      :rtype: :py:class:`@aws-cdk/aws-events.EventRuleTargetProps`\ 


   .. py:method:: asLifecycleHookTarget(lifecycleHook) -> @aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-autoscaling-api.ILifecycleHookTarget.asLifecycleHookTarget`

      Allow using SNS topics as lifecycle hook targets



      :param lifecycleHook: 
      :type lifecycleHook: :py:class:`@aws-cdk/aws-autoscaling-api.ILifecycleHook`\ 
      :rtype: :py:class:`@aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps`\ 


   .. py:method:: export() -> @aws-cdk/aws-sns.TopicRefProps

      Export this Topic



      :rtype: :py:class:`~@aws-cdk/aws-sns.TopicRefProps`\ 


   .. py:method:: grantPublish([identity])

      Grant topic publishing permissions to the given identity



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      Construct a Metric object for the current topic for the given metric



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNumberOfMessagesDelivered([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for the number of messages that were successfully delivered through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNumberOfMessagesFailed([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for the number of messages that failed to publish through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNumberOfMessagesPublished([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for the number of messages published through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricPublishSize([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for the size of messages published through this topic



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: subscribe(name, endpoint, protocol)

      Subscribe some endpoint to this topic



      :param name: 
      :type name: string
      :param endpoint: 
      :type endpoint: string
      :param protocol: 
      :type protocol: :py:class:`~@aws-cdk/aws-sns.SubscriptionProtocol`\ 


   .. py:method:: subscribeEmail(name, emailAddress, [options]) -> @aws-cdk/aws-sns.Subscription

      Defines a subscription from this SNS topic to an email address.



      :param name: A name for the subscription
      :type name: string
      :param emailAddress: The email address to use.
      :type emailAddress: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-sns.EmailSubscriptionOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:method:: subscribeLambda(lambdaFunction) -> @aws-cdk/aws-sns.Subscription

      Defines a subscription from this SNS Topic to a Lambda function.

      

      The Lambda's resource policy will be updated to allow this topic to

      invoke the function.



      :param lambdaFunction: The Lambda function to invoke
      :type lambdaFunction: :py:class:`@aws-cdk/aws-lambda.FunctionRef`\ 
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:method:: subscribeQueue(queue) -> @aws-cdk/aws-sns.Subscription

      Defines a subscription from this SNS topic to an SQS queue.

      

      The queue resource policy will be updated to allow this SNS topic to send

      messages to the queue.

      

      TODO: change to QueueRef.



      :param queue: The target queue
      :type queue: :py:class:`@aws-cdk/aws-sqs.QueueRef`\ 
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:method:: subscribeUrl(name, url) -> @aws-cdk/aws-sns.Subscription

      Defines a subscription from this SNS topic to an http:// or https:// URL.



      :param name: A name for the subscription
      :type name: string
      :param url: The URL to invoke
      :type url: string
      :rtype: :py:class:`~@aws-cdk/aws-sns.Subscription`\ 


   .. py:attribute:: alarmActionArn

      *Implements* :py:meth:`@aws-cdk/aws-cloudwatch.IAlarmAction.alarmActionArn`

      Return the ARN that should be used for a CloudWatch Alarm action



      :type: string *(readonly)*


   .. py:attribute:: autoCreatePolicy

      Controls automatic creation of policy objects.

      

      Set by subclasses.



      *Protected property*

      :type: boolean *(readonly)* *(abstract)*


   .. py:attribute:: topicArn

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: topicName

      :type: string *(readonly)* *(abstract)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


TopicRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TopicRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.TopicRefProps;

      .. code-tab:: javascript

         // TopicRefProps is an interface

      .. code-tab:: typescript

         import { TopicRefProps } from '@aws-cdk/aws-sns';



   Reference to an external topic.





   .. py:attribute:: topicArn

      :type: string


   .. py:attribute:: topicName

      :type: string



cloudformation
^^^^^^^^^^^^^^
.. py:module:: @aws-cdk/aws-sns.cloudformation

SubscriptionResource
~~~~~~~~~~~~~~~~~~~~

.. py:class:: SubscriptionResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.cloudformation.SubscriptionResource;

      .. code-tab:: javascript

         const { cloudformation.SubscriptionResource } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { cloudformation.SubscriptionResource } from '@aws-cdk/aws-sns';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``SubscriptionResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``SubscriptionResource``
   :type properties: :py:class:`~@aws-cdk/aws-sns.cloudformation.SubscriptionResourceProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-sns.cloudformation.SubscriptionResourceProps`\  *(readonly)*


   .. py:attribute:: subscriptionArn

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


SubscriptionResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: SubscriptionResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.cloudformation.SubscriptionResourceProps;

      .. code-tab:: javascript

         // cloudformation.SubscriptionResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.SubscriptionResourceProps } from '@aws-cdk/aws-sns';





   .. py:attribute:: deliveryPolicy

      ``AWS::SNS::Subscription.DeliveryPolicy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-deliverypolicy


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: endpoint

      ``AWS::SNS::Subscription.Endpoint``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-endpoint


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: filterPolicy

      ``AWS::SNS::Subscription.FilterPolicy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-filterpolicy


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: protocol

      ``AWS::SNS::Subscription.Protocol``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-protocol


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: rawMessageDelivery

      ``AWS::SNS::Subscription.RawMessageDelivery``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-rawmessagedelivery


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: region

      ``AWS::SNS::Subscription.Region``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-region


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: topicArn

      ``AWS::SNS::Subscription.TopicArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#topicarn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


TopicPolicyResource
~~~~~~~~~~~~~~~~~~~

.. py:class:: TopicPolicyResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.cloudformation.TopicPolicyResource;

      .. code-tab:: javascript

         const { cloudformation.TopicPolicyResource } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { cloudformation.TopicPolicyResource } from '@aws-cdk/aws-sns';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``TopicPolicyResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``TopicPolicyResource``
   :type properties: :py:class:`~@aws-cdk/aws-sns.cloudformation.TopicPolicyResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-sns.cloudformation.TopicPolicyResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


TopicPolicyResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: TopicPolicyResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.cloudformation.TopicPolicyResourceProps;

      .. code-tab:: javascript

         // cloudformation.TopicPolicyResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.TopicPolicyResourceProps } from '@aws-cdk/aws-sns';





   .. py:attribute:: policyDocument

      ``AWS::SNS::TopicPolicy.PolicyDocument``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html#cfn-sns-topicpolicy-policydocument


      :type: json or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: topics

      ``AWS::SNS::TopicPolicy.Topics``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html#cfn-sns-topicpolicy-topics


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


TopicResource
~~~~~~~~~~~~~

.. py:class:: TopicResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.cloudformation.TopicResource;

      .. code-tab:: javascript

         const { cloudformation.TopicResource } = require('@aws-cdk/aws-sns');

      .. code-tab:: typescript

         import { cloudformation.TopicResource } from '@aws-cdk/aws-sns';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``TopicResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``TopicResource``
   :type properties: :py:class:`~@aws-cdk/aws-sns.cloudformation.TopicResourceProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-sns.cloudformation.TopicResourceProps`\  *(readonly)*


   .. py:attribute:: topicArn

      :type: string *(readonly)*


   .. py:attribute:: topicName

      :type: string *(readonly)*

   .. py:class:: SubscriptionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.SNS;

         .. code-tab:: java

            import software.amazon.awscdk.services.sns.cloudformation.TopicResource.SubscriptionProperty;

         .. code-tab:: javascript

            // cloudformation.TopicResource.SubscriptionProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TopicResource.SubscriptionProperty } from '@aws-cdk/aws-sns';





      .. py:attribute:: endpoint

         ``TopicResource.SubscriptionProperty.Endpoint``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html#cfn-sns-topic-subscription-endpoint


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: protocol

         ``TopicResource.SubscriptionProperty.Protocol``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html#cfn-sns-topic-subscription-protocol


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


TopicResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: TopicResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SNS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sns.cloudformation.TopicResourceProps;

      .. code-tab:: javascript

         // cloudformation.TopicResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.TopicResourceProps } from '@aws-cdk/aws-sns';





   .. py:attribute:: displayName

      ``AWS::SNS::Topic.DisplayName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-displayname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: kmsMasterKeyId

      ``AWS::SNS::Topic.KmsMasterKeyId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-kmsmasterkeyid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: subscription

      ``AWS::SNS::Topic.Subscription``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-subscription


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-sns.cloudformation.TopicResource.SubscriptionProperty`\ )[] *(optional)*


   .. py:attribute:: topicName

      ``AWS::SNS::Topic.TopicName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-topicname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



.. py:currentmodule:: @aws-cdk/aws-sns

