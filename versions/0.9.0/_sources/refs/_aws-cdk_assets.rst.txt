.. @jsii-pacmak:meta@ {"fingerprint":"GuvT4F78RhDrliuiD02fbikD+had47wF8nRQmR4zJ2U="}

@aws-cdk/assets
===============

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.Assets/0.9.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.Assets" Version="0.9.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.Assets --version 0.9.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.Assets" version="0.9.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/cdk-assets/0.9.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:cdk-assets:jar:0.9.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="cdk-assets" rev="0.9.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>cdk-assets</artifactId>
           <version>0.9.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:cdk-assets:0.9.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='cdk-assets', version='0.9.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/assets/v/0.9.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/assets@0.9.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/assets": "^0.9.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/assets@0.9.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/assets/v/0.9.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/assets@0.9.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/assets": "^0.9.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/assets@0.9.0



.. mdinclude:: ./__aws-cdk_assets.README.md

Reference
---------

.. py:module:: @aws-cdk/assets

Asset
^^^^^

.. py:class:: Asset(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.Assets;

      .. code-tab:: java

         import software.amazon.awscdk.assets.Asset;

      .. code-tab:: javascript

         const { Asset } = require('@aws-cdk/assets');

      .. code-tab:: typescript

         import { Asset } from '@aws-cdk/assets';



   An asset represents a local file or directory, which is automatically uploaded to S3 and then can be referenced within a CDK application.


   :extends: :py:class:`@aws-cdk/cdk.Construct`
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/assets.GenericAssetProps`

   .. py:method:: grantRead([principal])

      Grants read permissions to the principal on the asset's S3 object.


      :param principal: 
      :type principal: :py:class:`@aws-cdk/aws-iam.IPrincipal` or undefined


   .. py:attribute:: assetPath

      Resolved full-path location of this asset.


      :type: string *(readonly)*


   .. py:attribute:: s3BucketName

      Attribute that represents the name of the bucket this asset exists in.


      :type: :py:class:`@aws-cdk/aws-s3.BucketName` *(readonly)*


   .. py:attribute:: s3ObjectKey

      Attribute which represents the S3 object key of this asset.


      :type: :py:class:`@aws-cdk/aws-s3.ObjectKey` *(readonly)*


   .. py:attribute:: s3Url

      Attribute which represents the S3 URL of this asset.


      :type: :py:class:`@aws-cdk/aws-s3.S3Url` *(readonly)*


AssetPackaging (enum)
^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AssetPackaging

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.Assets;

      .. code-tab:: java

         import software.amazon.awscdk.assets.AssetPackaging;

      .. code-tab:: javascript

         const { AssetPackaging } = require('@aws-cdk/assets');

      .. code-tab:: typescript

         import { AssetPackaging } from '@aws-cdk/assets';



   Defines the way an asset is packaged before it is uploaded to S3.


   .. py:data:: ZipDirectory

   Path refers to a directory on disk, the contents of the directory is archived into a .zip.


   .. py:data:: File

   Path refers to a single file on disk. The file is uploaded as-is.



FileAsset
^^^^^^^^^

.. py:class:: FileAsset(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.Assets;

      .. code-tab:: java

         import software.amazon.awscdk.assets.FileAsset;

      .. code-tab:: javascript

         const { FileAsset } = require('@aws-cdk/assets');

      .. code-tab:: typescript

         import { FileAsset } from '@aws-cdk/assets';



   An asset that represents a file on disk.


   :extends: :py:class:`~@aws-cdk/assets.Asset`
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/assets.FileAssetProps`

FileAssetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: FileAssetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.Assets;

      .. code-tab:: java

         import software.amazon.awscdk.assets.FileAssetProps;

      .. code-tab:: javascript

         // FileAssetProps is an interface

      .. code-tab:: typescript

         import { FileAssetProps } from '@aws-cdk/assets';





   .. py:attribute:: path

      File path.


      :type: string


   .. py:attribute:: readers

      A list of principals that should be able to read this file asset from S3. You can use `asset.grantRead(principal)` to grant read permissions later.


      :type: :py:class:`@aws-cdk/aws-iam.IPrincipal`[] or undefined


GenericAssetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: GenericAssetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.Assets;

      .. code-tab:: java

         import software.amazon.awscdk.assets.GenericAssetProps;

      .. code-tab:: javascript

         // GenericAssetProps is an interface

      .. code-tab:: typescript

         import { GenericAssetProps } from '@aws-cdk/assets';





   .. py:attribute:: packaging

      The packaging type for this asset.


      :type: :py:class:`~@aws-cdk/assets.AssetPackaging`


   .. py:attribute:: path

      The disk location of the asset.


      :type: string


   .. py:attribute:: readers

      A list of principals that should be able to read this asset from S3. You can use `asset.grantRead(principal)` to grant read permissions later.


      :type: :py:class:`@aws-cdk/aws-iam.IPrincipal`[] or undefined


ZipDirectoryAsset
^^^^^^^^^^^^^^^^^

.. py:class:: ZipDirectoryAsset(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.Assets;

      .. code-tab:: java

         import software.amazon.awscdk.assets.ZipDirectoryAsset;

      .. code-tab:: javascript

         const { ZipDirectoryAsset } = require('@aws-cdk/assets');

      .. code-tab:: typescript

         import { ZipDirectoryAsset } from '@aws-cdk/assets';



   An asset that represents a ZIP archive of a directory on disk.


   :extends: :py:class:`~@aws-cdk/assets.Asset`
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/assets.ZipDirectoryAssetProps`

ZipDirectoryAssetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ZipDirectoryAssetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.Assets;

      .. code-tab:: java

         import software.amazon.awscdk.assets.ZipDirectoryAssetProps;

      .. code-tab:: javascript

         // ZipDirectoryAssetProps is an interface

      .. code-tab:: typescript

         import { ZipDirectoryAssetProps } from '@aws-cdk/assets';





   .. py:attribute:: path

      Path of the directory.


      :type: string


   .. py:attribute:: readers

      A list of principals that should be able to read this ZIP file from S3. You can use `asset.grantRead(principal)` to grant read permissions later.


      :type: :py:class:`@aws-cdk/aws-iam.IPrincipal`[] or undefined


