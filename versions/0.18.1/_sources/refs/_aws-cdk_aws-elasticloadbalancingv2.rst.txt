.. @jsii-pacmak:meta@ {"fingerprint":"0rGZRF8boQWVHMFF1UsoHMjf2CAVRSPOZLRcAlrw7t8="}

@aws-cdk/aws-elasticloadbalancingv2
===================================

.. mdinclude:: ./__aws-cdk_aws-elasticloadbalancingv2.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.ElasticLoadBalancingV2/0.18.1>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.ElasticLoadBalancingV2" Version="0.18.1" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.ElasticLoadBalancingV2 --version 0.18.1

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.ElasticLoadBalancingV2" version="0.18.1" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/elasticloadbalancingv2/0.18.1/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:elasticloadbalancingv2:jar:0.18.1'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="elasticloadbalancingv2" rev="0.18.1"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>elasticloadbalancingv2</artifactId>
           <version>0.18.1</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:elasticloadbalancingv2:0.18.1'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='elasticloadbalancingv2', version='0.18.1')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-elasticloadbalancingv2/v/0.18.1>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-elasticloadbalancingv2@0.18.1

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-elasticloadbalancingv2": "^0.18.1"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-elasticloadbalancingv2@0.18.1


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-elasticloadbalancingv2/v/0.18.1>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-elasticloadbalancingv2@0.18.1

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-elasticloadbalancingv2": "^0.18.1"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-elasticloadbalancingv2@0.18.1



.. py:module:: @aws-cdk/aws-elasticloadbalancingv2

AddApplicationTargetGroupsProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AddApplicationTargetGroupsProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.AddApplicationTargetGroupsProps;

      .. code-tab:: javascript

         // AddApplicationTargetGroupsProps is an interface

      .. code-tab:: typescript

         import { AddApplicationTargetGroupsProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for adding a new target group to a listener



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps`\ 


   .. py:attribute:: targetGroups

      Target groups to forward requests to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup`\ []


   .. py:attribute:: hostHeader

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps <@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps.hostHeader>`

      Rule applies if the requested host matches the indicated host

      

      May contain up to three '*' wildcards.

      

      Requires that priority is set.



      :type: string *(optional)*
      :default: No host condition


   .. py:attribute:: pathPattern

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps <@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps.pathPattern>`

      Rule applies if the requested path matches the given path pattern

      

      May contain up to three '*' wildcards.

      

      Requires that priority is set.



      :type: string *(optional)*
      :default: No path condition


   .. py:attribute:: priority

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps <@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps.priority>`

      Priority of this target group

      

      The rule with the lowest priority will be used for every request.

      If priority is not given, these target groups will be added as

      defaults, and must not have conditions.

      

      Priorities must be unique.



      :type: number *(optional)*
      :default: Target groups are used as defaults


AddApplicationTargetsProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AddApplicationTargetsProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.AddApplicationTargetsProps;

      .. code-tab:: javascript

         // AddApplicationTargetsProps is an interface

      .. code-tab:: typescript

         import { AddApplicationTargetsProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for adding new targets to a listener



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps`\ 


   .. py:attribute:: deregistrationDelaySec

      The amount of time for Elastic Load Balancing to wait before deregistering a target.

      

      The range is 0–3600 seconds.



      :type: number *(optional)*
      :default: 300


   .. py:attribute:: healthCheck

      Health check configuration



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\  *(optional)*
      :default: No health check


   .. py:attribute:: port

      The port on which the listener listens for requests.



      :type: number *(optional)*
      :default: Determined from protocol if known


   .. py:attribute:: protocol

      The protocol to use



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol`\  *(optional)*
      :default: Determined from port if known


   .. py:attribute:: slowStartSec

      The time period during which the load balancer sends a newly registered

      target a linearly increasing share of the traffic to the target group.

      

      The range is 30–900 seconds (15 minutes).



      :type: number *(optional)*
      :default: 0


   .. py:attribute:: stickinessCookieDurationSec

      The stickiness cookie expiration period.

      

      Setting this value enables load balancer stickiness.

      

      After this period, the cookie is considered stale. The minimum value is

      1 second and the maximum value is 7 days (604800 seconds).



      :type: number *(optional)*
      :default: 86400 (1 day)


   .. py:attribute:: targetGroupName

      The name of the target group.

      

      This name must be unique per region per account, can have a maximum of

      32 characters, must contain only alphanumeric characters or hyphens, and

      must not begin or end with a hyphen.



      :type: string *(optional)*
      :default: Automatically generated


   .. py:attribute:: targets

      The targets to add to this target group.

      

      Can be `Instance`, `IPAddress`, or any self-registering load balancing

      target. If you use either `Instance` or `IPAddress` as targets, all

      target must be of the same type.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget`\ [] *(optional)*


   .. py:attribute:: hostHeader

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps <@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps.hostHeader>`

      Rule applies if the requested host matches the indicated host

      

      May contain up to three '*' wildcards.

      

      Requires that priority is set.



      :type: string *(optional)*
      :default: No host condition


   .. py:attribute:: pathPattern

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps <@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps.pathPattern>`

      Rule applies if the requested path matches the given path pattern

      

      May contain up to three '*' wildcards.

      

      Requires that priority is set.



      :type: string *(optional)*
      :default: No path condition


   .. py:attribute:: priority

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps <@aws-cdk/aws-elasticloadbalancingv2.AddRuleProps.priority>`

      Priority of this target group

      

      The rule with the lowest priority will be used for every request.

      If priority is not given, these target groups will be added as

      defaults, and must not have conditions.

      

      Priorities must be unique.



      :type: number *(optional)*
      :default: Target groups are used as defaults


AddNetworkTargetsProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AddNetworkTargetsProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.AddNetworkTargetsProps;

      .. code-tab:: javascript

         // AddNetworkTargetsProps is an interface

      .. code-tab:: typescript

         import { AddNetworkTargetsProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for adding new network targets to a listener





   .. py:attribute:: port

      The port on which the listener listens for requests.



      :type: number
      :default: Determined from protocol if known


   .. py:attribute:: deregistrationDelaySec

      The amount of time for Elastic Load Balancing to wait before deregistering a target.

      

      The range is 0–3600 seconds.



      :type: number *(optional)*
      :default: 300


   .. py:attribute:: healthCheck

      Health check configuration



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\  *(optional)*
      :default: No health check


   .. py:attribute:: proxyProtocolV2

      Indicates whether Proxy Protocol version 2 is enabled.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: targetGroupName

      The name of the target group.

      

      This name must be unique per region per account, can have a maximum of

      32 characters, must contain only alphanumeric characters or hyphens, and

      must not begin or end with a hyphen.



      :type: string *(optional)*
      :default: Automatically generated


   .. py:attribute:: targets

      The targets to add to this target group.

      

      Can be `Instance`, `IPAddress`, or any self-registering load balancing

      target. If you use either `Instance` or `IPAddress` as targets, all

      target must be of the same type.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget`\ [] *(optional)*


AddRuleProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AddRuleProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.AddRuleProps;

      .. code-tab:: javascript

         // AddRuleProps is an interface

      .. code-tab:: typescript

         import { AddRuleProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for adding a conditional load balancing rule





   .. py:attribute:: hostHeader

      Rule applies if the requested host matches the indicated host

      

      May contain up to three '*' wildcards.

      

      Requires that priority is set.



      :type: string *(optional)*
      :default: No host condition


   .. py:attribute:: pathPattern

      Rule applies if the requested path matches the given path pattern

      

      May contain up to three '*' wildcards.

      

      Requires that priority is set.



      :type: string *(optional)*
      :default: No path condition


   .. py:attribute:: priority

      Priority of this target group

      

      The rule with the lowest priority will be used for every request.

      If priority is not given, these target groups will be added as

      defaults, and must not have conditions.

      

      Priorities must be unique.



      :type: number *(optional)*
      :default: Target groups are used as defaults


ApplicationListener
^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationListener(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationListener;

      .. code-tab:: javascript

         const { ApplicationListener } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { ApplicationListener } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define an ApplicationListener



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseListener`\ 
   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerProps`\ 

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-elasticloadbalancingv2.IApplicationListener

      Import an existing listener



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener`\ 


   .. py:method:: addCertificateArns(_id, arns)

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener.addCertificateArns`

      Add one or more certificates to this listener.



      :param _id: 
      :type _id: string
      :param arns: 
      :type arns: string[]


   .. py:method:: addTargetGroups(id, props)

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener.addTargetGroups`

      Load balance incoming requests to the given target groups.

      

      It's possible to add conditions to the TargetGroups added in this way.

      At least one TargetGroup must be added without conditions.



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps`\ 


   .. py:method:: addTargets(id, props) -> @aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener.addTargets`

      Load balance incoming requests to the given load balancing targets.

      

      This method implicitly creates an ApplicationTargetGroup for the targets

      involved.

      

      It's possible to add conditions to the targets added in this way. At least

      one set of targets must be added without conditions.



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps`\ 
      :return: The newly created target group
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 


   .. py:method:: export() -> @aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRefProps

      Export this listener



      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRefProps`\ 


   .. py:method:: registerConnectable(connectable, portRange)

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener.registerConnectable`

      Register that a connectable that has been added to this load balancer.

      

      Don't call this directly. It is called by ApplicationTargetGroup.



      :param connectable: 
      :type connectable: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 
      :param portRange: 
      :type portRange: :py:class:`@aws-cdk/aws-ec2.IPortRange`\ 


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseListener.validate`

      Validate this listener.



      :rtype: string[]


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      Manage connections to this ApplicationListener



      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: loadBalancer

      Load balancer this listener is associated with



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer`\  *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseListener <@aws-cdk/aws-elasticloadbalancingv2.BaseListener.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: listenerArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseListener <@aws-cdk/aws-elasticloadbalancingv2.BaseListener.listenerArn>`

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ApplicationListenerCertificate
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationListenerCertificate(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationListenerCertificate;

      .. code-tab:: javascript

         const { ApplicationListenerCertificate } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { ApplicationListenerCertificate } from '@aws-cdk/aws-elasticloadbalancingv2';



   Add certificates to a listener



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerCertificateProps`\ 

   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      The elements of this resou rce to add ordering dependencies on



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ApplicationListenerCertificateProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationListenerCertificateProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationListenerCertificateProps;

      .. code-tab:: javascript

         // ApplicationListenerCertificateProps is an interface

      .. code-tab:: typescript

         import { ApplicationListenerCertificateProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for adding a set of certificates to a listener





   .. py:attribute:: certificateArns

      ARNs of certificates to attach

      

      Duplicates are not allowed.



      :type: string[]


   .. py:attribute:: listener

      The listener to attach the rule to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener`\ 


ApplicationListenerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationListenerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationListenerProps;

      .. code-tab:: javascript

         // ApplicationListenerProps is an interface

      .. code-tab:: typescript

         import { ApplicationListenerProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for defining a standalone ApplicationListener



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps`\ 


   .. py:attribute:: loadBalancer

      The load balancer to attach this listener to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer`\ 


   .. py:attribute:: certificateArns

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps.certificateArns>`

      The certificates to use on this listener



      :type: string[] *(optional)*


   .. py:attribute:: defaultTargetGroups

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps.defaultTargetGroups>`

      Default target groups to load balance to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup`\ [] *(optional)*
      :default: None


   .. py:attribute:: open

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps.open>`

      Allow anyone to connect to this listener

      

      If this is specified, the listener will be opened up to anyone who can reach it.

      For internal load balancers this is anyone in the same VPC. For public load

      balancers, this is anyone on the internet.

      

      If you want to be more selective about who can access this load

      balancer, set this to `false` and use the listener's `connections`

      object to selectively grant access to the listener.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: port

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps.port>`

      The port on which the listener listens for requests.



      :type: number *(optional)*
      :default: Determined from protocol if known


   .. py:attribute:: protocol

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps.protocol>`

      The protocol to use



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol`\  *(optional)*
      :default: Determined from port if known


   .. py:attribute:: sslPolicy

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps.sslPolicy>`

      The security policy that defines which ciphers and protocols are supported.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.SslPolicy`\  *(optional)*
      :default: the current predefined security policy.


ApplicationListenerRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationListenerRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationListenerRefProps;

      .. code-tab:: javascript

         // ApplicationListenerRefProps is an interface

      .. code-tab:: typescript

         import { ApplicationListenerRefProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties to reference an existing listener





   .. py:attribute:: listenerArn

      ARN of the listener



      :type: string


   .. py:attribute:: securityGroupId

      Security group ID of the load balancer this listener is associated with



      :type: string


   .. py:attribute:: defaultPort

      The default port on which this listener is listening



      :type: string *(optional)*


ApplicationListenerRule
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationListenerRule(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationListenerRule;

      .. code-tab:: javascript

         const { ApplicationListenerRule } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { ApplicationListenerRule } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define a new listener rule



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationListenerRuleProps`\ 

   .. py:method:: addTargetGroup(targetGroup)

      Add a TargetGroup to load balance to



      :param targetGroup: 
      :type targetGroup: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup`\ 


   .. py:method:: setCondition(field, [values])

      Add a non-standard condition to this rule



      :param field: 
      :type field: string
      :param values: 
      :type values: string[] *(optional)*


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      Validate the rule



      :rtype: string[]


   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      The elements of this rule to add ordering dependencies on



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: listenerRuleArn

      The ARN of this rule



      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ApplicationListenerRuleProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationListenerRuleProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationListenerRuleProps;

      .. code-tab:: javascript

         // ApplicationListenerRuleProps is an interface

      .. code-tab:: typescript

         import { ApplicationListenerRuleProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for defining a listener rule



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps`\ 


   .. py:attribute:: listener

      The listener to attach the rule to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener`\ 


   .. py:attribute:: priority

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps.priority>`

      Priority of the rule

      

      The rule with the lowest priority will be used for every request.

      

      Priorities must be unique.



      :type: number


   .. py:attribute:: hostHeader

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps.hostHeader>`

      Rule applies if the requested host matches the indicated host

      

      May contain up to three '*' wildcards.



      :type: string *(optional)*
      :default: No host condition


   .. py:attribute:: pathPattern

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps.pathPattern>`

      Rule applies if the requested path matches the given path pattern

      

      May contain up to three '*' wildcards.



      :type: string *(optional)*
      :default: No path condition


   .. py:attribute:: targetGroups

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps <@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerRuleProps.targetGroups>`

      Target groups to forward requests to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup`\ [] *(optional)*


ApplicationLoadBalancer
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationLoadBalancer(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationLoadBalancer;

      .. code-tab:: javascript

         const { ApplicationLoadBalancer } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { ApplicationLoadBalancer } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define an Application Load Balancer



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer`\ 
   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps`\ 

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer

      Import an existing Application Load Balancer



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer`\ 


   .. py:method:: addListener(id, props) -> @aws-cdk/aws-elasticloadbalancingv2.ApplicationListener

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancer.addListener`

      Add a new listener to this load balancer



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener`\ 


   .. py:method:: export() -> @aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRefProps

      Export this load balancer



      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerRefProps`\ 


   .. py:method:: logAccessLogs(bucket, [prefix])

      Enable access logging for this load balancer



      :param bucket: 
      :type bucket: :py:class:`@aws-cdk/aws-s3.BucketRef`\ 
      :param prefix: 
      :type prefix: string *(optional)*


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      Return the given named metric for this Application Load Balancer



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricActiveConnectionCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of concurrent TCP connections active from clients to the

      load balancer and from the load balancer to targets.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricClientTlsNegotiationErrorCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of TLS connections initiated by the client that did not

      establish a session with the load balancer. Possible causes include a

      mismatch of ciphers or protocols.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricConsumedLCUs([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of load balancer capacity units (LCU) used by your load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricElbAuthError([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of user authentications that could not be completed

      

      Because an authenticate action was misconfigured, the load balancer

      couldn't establish a connection with the IdP, or the load balancer

      couldn't complete the authentication flow due to an internal error.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricElbAuthFailure([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of user authentications that could not be completed because the

      IdP denied access to the user or an authorization code was used more than

      once.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricElbAuthLatency([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The time elapsed, in milliseconds, to query the IdP for the ID token and user info.

      

      If one or more of these operations fail, this is the time to failure.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricElbAuthSuccess([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of authenticate actions that were successful.

      

      This metric is incremented at the end of the authentication workflow,

      after the load balancer has retrieved the user claims from the IdP.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHttpCodeElb(code, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of HTTP 3xx/4xx/5xx codes that originate from the load balancer.

      

      This does not include any response codes generated by the targets.



      :param code: 
      :type code: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HttpCodeElb`\ 
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHttpCodeTarget(code, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of HTTP 2xx/3xx/4xx/5xx response codes generated by all targets

      in the load balancer.

      

      This does not include any response codes generated by the load balancer.



      :param code: 
      :type code: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HttpCodeTarget`\ 
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHttpFixedResponseCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of fixed-response actions that were successful.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHttpRedirectCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of redirect actions that were successful.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHttpRedirectUrlLimitExceededCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of redirect actions that couldn't be completed because the URL

      in the response location header is larger than 8K.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricIPv6ProcessedBytes([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of bytes processed by the load balancer over IPv6.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricIPv6RequestCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of IPv6 requests received by the load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNewConnectionCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of new TCP connections established from clients to the

      load balancer and from the load balancer to targets.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricProcessedBytes([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of bytes processed by the load balancer over IPv4 and IPv6.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricRejectedConnectionCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of connections that were rejected because the load balancer had

      reached its maximum number of connections.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricRequestCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of requests processed over IPv4 and IPv6.

      

      This count includes only the requests with a response generated by a target of the load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricRuleEvaluations([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of rules processed by the load balancer given a request rate averaged over an hour.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTargetConnectionErrorCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of connections that were not successfully established between the load balancer and target.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTargetResponseTime([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The time elapsed, in seconds, after the request leaves the load balancer until a response from the target is received.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTargetTLSNegotiationErrorCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of TLS connections initiated by the load balancer that did not establish a session with the target.

      

      Possible causes include a mismatch of ciphers or protocols.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:method:: asAliasRecordTarget() -> @aws-cdk/aws-route53.AliasRecordTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.asAliasRecordTarget>`

      Return hosted zone ID and DNS name, usable for Route53 alias targets



      :rtype: :py:class:`@aws-cdk/aws-route53.AliasRecordTargetProps`\ 


   .. py:method:: removeAttribute(key)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.removeAttribute>`

      Remove an attribute from the load balancer



      :param key: 
      :type key: string


   .. py:method:: setAttribute(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.setAttribute>`

      Set a non-standard attribute on the load balancer



      :param key: 
      :type key: string
      :param value: 
      :type value: string *(optional)*


   .. py:attribute:: canonicalHostedZoneId

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.canonicalHostedZoneId>`

      The canonical hosted zone ID of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: dnsName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.dnsName>`

      The DNS name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: fullName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.fullName>`

      The full name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.loadBalancerArn>`

      The ARN of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.loadBalancerName>`

      The name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: vpc

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.vpc>`

      The VPC this load balancer has been created in, if available

      

      If the Load Balancer was imported, the VPC is not available.



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\  *(optional)* *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ApplicationLoadBalancerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationLoadBalancerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationLoadBalancerProps;

      .. code-tab:: javascript

         // ApplicationLoadBalancerProps is an interface

      .. code-tab:: typescript

         import { ApplicationLoadBalancerProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for defining an Application Load Balancer



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps`\ 


   .. py:attribute:: http2Enabled

      Indicates whether HTTP/2 is enabled.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: idleTimeoutSecs

      The load balancer idle timeout, in seconds



      :type: number *(optional)*
      :default: 60


   .. py:attribute:: ipAddressType

      The type of IP addresses to use

      

      Only applies to application load balancers.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IpAddressType`\  *(optional)*
      :default: IpAddressType.Ipv4


   .. py:attribute:: securityGroup

      Security group to associate with this load balancer



      :type: :py:class:`@aws-cdk/aws-ec2.SecurityGroupRef`\  *(optional)*
      :default: A security group is created


   .. py:attribute:: vpc

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.vpc>`

      The VPC network to place the load balancer in



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 


   .. py:attribute:: deletionProtection

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.deletionProtection>`

      Indicates whether deletion protection is enabled.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: internetFacing

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.internetFacing>`

      Whether the load balancer has an internet-routable address



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: loadBalancerName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.loadBalancerName>`

      Name of the load balancer



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: vpcPlacement

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.vpcPlacement>`

      Where in the VPC to place the load balancer



      :type: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :default: Public subnets if internetFacing, otherwise private subnets


ApplicationLoadBalancerRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationLoadBalancerRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationLoadBalancerRefProps;

      .. code-tab:: javascript

         // ApplicationLoadBalancerRefProps is an interface

      .. code-tab:: typescript

         import { ApplicationLoadBalancerRefProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties to reference an existing load balancer





   .. py:attribute:: loadBalancerArn

      ARN of the load balancer



      :type: string


   .. py:attribute:: securityGroupId

      ID of the load balancer's security group



      :type: string


ApplicationProtocol (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationProtocol

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationProtocol;

      .. code-tab:: javascript

         const { ApplicationProtocol } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { ApplicationProtocol } from '@aws-cdk/aws-elasticloadbalancingv2';



   Load balancing protocol for application load balancers



   .. py:data:: Http

   HTTP



   .. py:data:: Https

   HTTPS




ApplicationTargetGroup
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationTargetGroup(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationTargetGroup;

      .. code-tab:: javascript

         const { ApplicationTargetGroup } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { ApplicationTargetGroup } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define an Application Target Group



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroupProps`\ 

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup

      Import an existing target group



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup`\ 


   .. py:method:: addTarget(*targets)

      Add a load balancing target to this target group



      :param \*targets: 
      :type \*targets: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget`\ 


   .. py:method:: enableCookieStickiness(durationSec)

      Enable sticky routing via a cookie to members of this target group



      :param durationSec: 
      :type durationSec: number


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      Return the given named metric for this Application Load Balancer Target Group

      

      Returns the metric for this target group from the point of view of the first

      load balancer load balancing to it. If you have multiple load balancers load

      sending traffic to the same target group, you will have to override the dimensions

      on this metric.



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHealthyHostCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of healthy hosts in the target group



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHttpCodeTarget(code, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of HTTP 2xx/3xx/4xx/5xx response codes generated by all targets in this target group.

      

      This does not include any response codes generated by the load balancer.



      :param code: 
      :type code: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HttpCodeTarget`\ 
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricIPv6RequestCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of IPv6 requests received by the target group



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricRequestCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of requests processed over IPv4 and IPv6.

      

      This count includes only the requests with a response generated by a target of the load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricRequestCountPerTarget([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The average number of requests received by each target in a target group.

      

      The only valid statistic is Sum. Note that this represents the average not the sum.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTargetConnectionErrorCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of connections that were not successfully established between the load balancer and target.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTargetResponseTime([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The time elapsed, in seconds, after the request leaves the load balancer until a response from the target is received.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTargetTLSNegotiationErrorCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of TLS connections initiated by the load balancer that did not establish a session with the target.

      

      Possible causes include a mismatch of ciphers or protocols.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricUnhealthyHostCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of unhealthy hosts in the target group



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: registerConnectable(connectable, [portRange])

      Register a connectable as a member of this target group.

      

      Don't call this directly. It will be called by load balancing targets.



      :param connectable: 
      :type connectable: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 
      :param portRange: 
      :type portRange: :py:class:`@aws-cdk/aws-ec2.IPortRange`\  *(optional)*


   .. py:method:: registerListener(listener, [dependable])

      Register a listener that is load balancing to this target group.

      

      Don't call this directly. It will be called by listeners.



      :param listener: 
      :type listener: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener`\ 
      :param dependable: 
      :type dependable: :py:class:`@aws-cdk/cdk.IDependable`\  *(optional)*


   .. py:attribute:: firstLoadBalancerFullName

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.firstLoadBalancerFullName`

      Full name of first load balancer



      :type: string *(readonly)*


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.addDependency>`

      Add a dependency between this target group and the indicated resources



      :param \*other: 
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addLoadBalancerTarget(props)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.addLoadBalancerTarget>`

      Register the given load balancing target as part of this group



      *Protected method*

      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: asCodeDeployLoadBalancer() -> @aws-cdk/aws-codedeploy-api.ILoadBalancerProps

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.asCodeDeployLoadBalancer>`

      Specify the CodeDeploy-required properties of this load balancer.



      :rtype: :py:class:`@aws-cdk/aws-codedeploy-api.ILoadBalancerProps`\ 


   .. py:method:: configureHealthCheck(healthCheck)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.configureHealthCheck>`

      Set/replace the target group's health check



      :param healthCheck: 
      :type healthCheck: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\ 


   .. py:method:: export() -> @aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.export>`

      Export this target group



      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps`\ 


   .. py:method:: loadBalancerDependency() -> @aws-cdk/cdk.IDependable

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.loadBalancerDependency>`

      Return an object to depend on this TargetGroup being attached to a load balancer



      :rtype: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: setAttribute(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.setAttribute>`

      Set a non-standard attribute on the target group



      :param key: 
      :type key: string
      :param value: 
      :type value: string *(optional)*


   .. py:attribute:: defaultPort

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.defaultPort>`

      Default port configured for members of this target group



      *Protected property*

      :type: string *(readonly)*


   .. py:attribute:: loadBalancerArns

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.loadBalancerArns>`

      Health check for the members of this target group

      A token representing a list of ARNs of the load balancers that route traffic to this target group



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerAssociationDependencies

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.loadBalancerAssociationDependencies>`

      List of dependables that need to be depended on to ensure the TargetGroup is associated to a load balancer



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: targetGroupArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupArn>`

      The ARN of the target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupFullName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupFullName>`

      The full name of the target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupLoadBalancerArns

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupLoadBalancerArns>`

      ARNs of load balancers load balancing to this TargetGroup



      :type: string[] *(readonly)*


   .. py:attribute:: targetGroupName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupName>`

      The name of the target group



      :type: string *(readonly)*


   .. py:attribute:: healthCheck

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.healthCheck>`

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\ 


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ApplicationTargetGroupProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApplicationTargetGroupProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ApplicationTargetGroupProps;

      .. code-tab:: javascript

         // ApplicationTargetGroupProps is an interface

      .. code-tab:: typescript

         import { ApplicationTargetGroupProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for defining an Application Target Group



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps`\ 


   .. py:attribute:: port

      The port on which the listener listens for requests.



      :type: number *(optional)*
      :default: Determined from protocol if known


   .. py:attribute:: protocol

      The protocol to use



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol`\  *(optional)*
      :default: Determined from port if known


   .. py:attribute:: slowStartSec

      The time period during which the load balancer sends a newly registered

      target a linearly increasing share of the traffic to the target group.

      

      The range is 30–900 seconds (15 minutes).



      :type: number *(optional)*
      :default: 0


   .. py:attribute:: stickinessCookieDurationSec

      The stickiness cookie expiration period.

      

      Setting this value enables load balancer stickiness.

      

      After this period, the cookie is considered stale. The minimum value is

      1 second and the maximum value is 7 days (604800 seconds).



      :type: number *(optional)*
      :default: 86400 (1 day)


   .. py:attribute:: targets

      The targets to add to this target group.

      

      Can be `Instance`, `IPAddress`, or any self-registering load balancing

      target. If you use either `Instance` or `IPAddress` as targets, all

      target must be of the same type.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget`\ [] *(optional)*


   .. py:attribute:: vpc

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.vpc>`

      The virtual private cloud (VPC).



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 


   .. py:attribute:: deregistrationDelaySec

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.deregistrationDelaySec>`

      The amount of time for Elastic Load Balancing to wait before deregistering a target.

      

      The range is 0–3600 seconds.



      :type: number *(optional)*
      :default: 300


   .. py:attribute:: healthCheck

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.healthCheck>`

      Health check configuration



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\  *(optional)*
      :default: No health check


   .. py:attribute:: targetGroupName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.targetGroupName>`

      The name of the target group.

      

      This name must be unique per region per account, can have a maximum of

      32 characters, must contain only alphanumeric characters or hyphens, and

      must not begin or end with a hyphen.



      :type: string *(optional)*
      :default: Automatically generated


   .. py:attribute:: targetType

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.targetType>`

      The type of targets registered to this TargetGroup, either IP or Instance.

      

      All targets registered into the group must be of this type. If you

      register targets to the TargetGroup in the CDK app, the TargetType is

      determined automatically.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetType`\  *(optional)*
      :default: Determined automatically


BaseApplicationListenerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BaseApplicationListenerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseApplicationListenerProps;

      .. code-tab:: javascript

         // BaseApplicationListenerProps is an interface

      .. code-tab:: typescript

         import { BaseApplicationListenerProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Basic properties for an ApplicationListener





   .. py:attribute:: certificateArns

      The certificates to use on this listener



      :type: string[] *(optional)*


   .. py:attribute:: defaultTargetGroups

      Default target groups to load balance to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup`\ [] *(optional)*
      :default: None


   .. py:attribute:: open

      Allow anyone to connect to this listener

      

      If this is specified, the listener will be opened up to anyone who can reach it.

      For internal load balancers this is anyone in the same VPC. For public load

      balancers, this is anyone on the internet.

      

      If you want to be more selective about who can access this load

      balancer, set this to `false` and use the listener's `connections`

      object to selectively grant access to the listener.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: port

      The port on which the listener listens for requests.



      :type: number *(optional)*
      :default: Determined from protocol if known


   .. py:attribute:: protocol

      The protocol to use



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationProtocol`\  *(optional)*
      :default: Determined from port if known


   .. py:attribute:: sslPolicy

      The security policy that defines which ciphers and protocols are supported.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.SslPolicy`\  *(optional)*
      :default: the current predefined security policy.


BaseApplicationListenerRuleProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BaseApplicationListenerRuleProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseApplicationListenerRuleProps;

      .. code-tab:: javascript

         // BaseApplicationListenerRuleProps is an interface

      .. code-tab:: typescript

         import { BaseApplicationListenerRuleProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Basic properties for defining a rule on a listener





   .. py:attribute:: priority

      Priority of the rule

      

      The rule with the lowest priority will be used for every request.

      

      Priorities must be unique.



      :type: number


   .. py:attribute:: hostHeader

      Rule applies if the requested host matches the indicated host

      

      May contain up to three '*' wildcards.



      :type: string *(optional)*
      :default: No host condition


   .. py:attribute:: pathPattern

      Rule applies if the requested path matches the given path pattern

      

      May contain up to three '*' wildcards.



      :type: string *(optional)*
      :default: No path condition


   .. py:attribute:: targetGroups

      Target groups to forward requests to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup`\ [] *(optional)*


BaseListener
^^^^^^^^^^^^

.. py:class:: BaseListener(parent, id, additionalProps)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseListener;

      .. code-tab:: javascript

         const { BaseListener } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { BaseListener } from '@aws-cdk/aws-elasticloadbalancingv2';



   Base class for listeners



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :abstract: Yes
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param additionalProps: 
   :type additionalProps: any

   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      Validate this listener



      :rtype: string[]


   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: listenerArn

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


BaseLoadBalancer
^^^^^^^^^^^^^^^^

.. py:class:: BaseLoadBalancer(parent, id, baseProps, additionalProps)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseLoadBalancer;

      .. code-tab:: javascript

         const { BaseLoadBalancer } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { BaseLoadBalancer } from '@aws-cdk/aws-elasticloadbalancingv2';



   Base class for both Application and Network Load Balancers



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/aws-route53.IAliasRecordTarget`\ 
   :abstract: Yes
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param baseProps: 
   :type baseProps: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps`\ 
   :param additionalProps: 
   :type additionalProps: any

   .. py:method:: asAliasRecordTarget() -> @aws-cdk/aws-route53.AliasRecordTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-route53.IAliasRecordTarget.asAliasRecordTarget`

      Return hosted zone ID and DNS name, usable for Route53 alias targets



      :rtype: :py:class:`@aws-cdk/aws-route53.AliasRecordTargetProps`\ 


   .. py:method:: removeAttribute(key)

      Remove an attribute from the load balancer



      :param key: 
      :type key: string


   .. py:method:: setAttribute(key, [value])

      Set a non-standard attribute on the load balancer



      :param key: 
      :type key: string
      :param value: 
      :type value: string *(optional)*


   .. py:attribute:: canonicalHostedZoneId

      The canonical hosted zone ID of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: dnsName

      The DNS name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: fullName

      The full name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerArn

      The ARN of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerName

      The name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: vpc

      The VPC this load balancer has been created in, if available

      

      If the Load Balancer was imported, the VPC is not available.



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\  *(optional)* *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


BaseLoadBalancerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BaseLoadBalancerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseLoadBalancerProps;

      .. code-tab:: javascript

         // BaseLoadBalancerProps is an interface

      .. code-tab:: typescript

         import { BaseLoadBalancerProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Shared properties of both Application and Network Load Balancers





   .. py:attribute:: vpc

      The VPC network to place the load balancer in



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 


   .. py:attribute:: deletionProtection

      Indicates whether deletion protection is enabled.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: internetFacing

      Whether the load balancer has an internet-routable address



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: loadBalancerName

      Name of the load balancer



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: vpcPlacement

      Where in the VPC to place the load balancer



      :type: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :default: Public subnets if internetFacing, otherwise private subnets


BaseNetworkListenerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BaseNetworkListenerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseNetworkListenerProps;

      .. code-tab:: javascript

         // BaseNetworkListenerProps is an interface

      .. code-tab:: typescript

         import { BaseNetworkListenerProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Basic properties for a Network Listener





   .. py:attribute:: port

      The port on which the listener listens for requests.



      :type: number


   .. py:attribute:: defaultTargetGroups

      Default target groups to load balance to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup`\ [] *(optional)*
      :default: None


BaseTargetGroup
^^^^^^^^^^^^^^^

.. py:class:: BaseTargetGroup(parent, id, baseProps, additionalProps)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseTargetGroup;

      .. code-tab:: javascript

         const { BaseTargetGroup } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { BaseTargetGroup } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define the target of a load balancer



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup`\ 
   :implements: :py:class:`@aws-cdk/aws-codedeploy-api.ILoadBalancer`\ 
   :abstract: Yes
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param baseProps: 
   :type baseProps: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps`\ 
   :param additionalProps: 
   :type additionalProps: any

   .. py:method:: addDependency(*other)

      Add a dependency between this target group and the indicated resources



      :param \*other: 
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addLoadBalancerTarget(props)

      Register the given load balancing target as part of this group



      *Protected method*

      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: asCodeDeployLoadBalancer() -> @aws-cdk/aws-codedeploy-api.ILoadBalancerProps

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy-api.ILoadBalancer.asCodeDeployLoadBalancer`

      Specify the CodeDeploy-required properties of this load balancer.



      :rtype: :py:class:`@aws-cdk/aws-codedeploy-api.ILoadBalancerProps`\ 


   .. py:method:: configureHealthCheck(healthCheck)

      Set/replace the target group's health check



      :param healthCheck: 
      :type healthCheck: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\ 


   .. py:method:: export() -> @aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps

      Export this target group



      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps`\ 


   .. py:method:: loadBalancerDependency() -> @aws-cdk/cdk.IDependable

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.loadBalancerDependency`

      Return an object to depend on this TargetGroup being attached to a load balancer



      :rtype: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: setAttribute(key, [value])

      Set a non-standard attribute on the target group



      :param key: 
      :type key: string
      :param value: 
      :type value: string *(optional)*


   .. py:attribute:: defaultPort

      Default port configured for members of this target group



      *Protected property*

      :type: string *(readonly)*


   .. py:attribute:: firstLoadBalancerFullName

      Full name of first load balancer

      

      This identifier is emitted as a dimensions of the metrics of this target

      group.



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: loadBalancerArns

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.loadBalancerArns`

      Health check for the members of this target group

      A token representing a list of ARNs of the load balancers that route traffic to this target group



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerAssociationDependencies

      List of dependables that need to be depended on to ensure the TargetGroup is associated to a load balancer



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: targetGroupArn

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.targetGroupArn`

      The ARN of the target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupFullName

      The full name of the target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupLoadBalancerArns

      ARNs of load balancers load balancing to this TargetGroup



      :type: string[] *(readonly)*


   .. py:attribute:: targetGroupName

      The name of the target group



      :type: string *(readonly)*


   .. py:attribute:: healthCheck

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\ 


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


BaseTargetGroupProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BaseTargetGroupProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.BaseTargetGroupProps;

      .. code-tab:: javascript

         // BaseTargetGroupProps is an interface

      .. code-tab:: typescript

         import { BaseTargetGroupProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Basic properties of both Application and Network Target Groups





   .. py:attribute:: vpc

      The virtual private cloud (VPC).



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 


   .. py:attribute:: deregistrationDelaySec

      The amount of time for Elastic Load Balancing to wait before deregistering a target.

      

      The range is 0–3600 seconds.



      :type: number *(optional)*
      :default: 300


   .. py:attribute:: healthCheck

      Health check configuration



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\  *(optional)*
      :default: No health check


   .. py:attribute:: targetGroupName

      The name of the target group.

      

      This name must be unique per region per account, can have a maximum of

      32 characters, must contain only alphanumeric characters or hyphens, and

      must not begin or end with a hyphen.



      :type: string *(optional)*
      :default: Automatically generated


   .. py:attribute:: targetType

      The type of targets registered to this TargetGroup, either IP or Instance.

      

      All targets registered into the group must be of this type. If you

      register targets to the TargetGroup in the CDK app, the TargetType is

      determined automatically.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetType`\  *(optional)*
      :default: Determined automatically


HealthCheck (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: HealthCheck

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.HealthCheck;

      .. code-tab:: javascript

         // HealthCheck is an interface

      .. code-tab:: typescript

         import { HealthCheck } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for configuring a health check





   .. py:attribute:: healthyHttpCodes

      HTTP code to use when checking for a successful response from a target.

      

      For Application Load Balancers, you can specify values between 200 and

      499, and the default value is 200. You can specify multiple values (for

      example, "200,202") or a range of values (for example, "200-299").



      :type: string *(optional)*


   .. py:attribute:: healthyThresholdCount

      The number of consecutive health checks successes required before considering an unhealthy target healthy.

      

      For Application Load Balancers, the default is 5. For Network Load Balancers, the default is 3.



      :type: number *(optional)*
      :default: 5 for ALBs, 3 for NLBs


   .. py:attribute:: intervalSecs

      The approximate number of seconds between health checks for an individual target.



      :type: number *(optional)*
      :default: 30


   .. py:attribute:: path

      The ping path destination where Elastic Load Balancing sends health check requests.



      :type: string *(optional)*
      :default: /


   .. py:attribute:: port

      The port that the load balancer uses when performing health checks on the targets.



      :type: string *(optional)*
      :default: 'traffic-port'


   .. py:attribute:: protocol

      The protocol the load balancer uses when performing health checks on targets.

      

      The TCP protocol is supported only if the protocol of the target group

      is TCP.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.Protocol`\  *(optional)*
      :default: HTTP for ALBs, TCP for NLBs


   .. py:attribute:: timeoutSeconds

      The amount of time, in seconds, during which no response from a target means a failed health check.

      

      For Application Load Balancers, the range is 2–60 seconds and the

      default is 5 seconds. For Network Load Balancers, this is 10 seconds for

      TCP and HTTPS health checks and 6 seconds for HTTP health checks.



      :type: number *(optional)*
      :default: 5 for ALBs, 10 or 6 for NLBs


   .. py:attribute:: unhealthyThresholdCount

      The number of consecutive health check failures required before considering a target unhealthy.

      

      For Application Load Balancers, the default is 2. For Network Load

      Balancers, this value must be the same as the healthy threshold count.



      :type: number *(optional)*
      :default: 2


HttpCodeElb (enum)
^^^^^^^^^^^^^^^^^^

.. py:class:: HttpCodeElb

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.HttpCodeElb;

      .. code-tab:: javascript

         const { HttpCodeElb } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { HttpCodeElb } from '@aws-cdk/aws-elasticloadbalancingv2';



   Count of HTTP status originating from the load balancer

   

   This count does not include any response codes generated by the targets.



   .. py:data:: Elb3xxCount

   The number of HTTP 3XX redirection codes that originate from the load balancer.



   .. py:data:: Elb4xxCount

   The number of HTTP 4XX client error codes that originate from the load balancer.

   

   Client errors are generated when requests are malformed or incomplete.

   These requests have not been received by the target. This count does not

   include any response codes generated by the targets.



   .. py:data:: Elb5xxCount

   The number of HTTP 5XX server error codes that originate from the load balancer.




HttpCodeTarget (enum)
^^^^^^^^^^^^^^^^^^^^^

.. py:class:: HttpCodeTarget

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.HttpCodeTarget;

      .. code-tab:: javascript

         const { HttpCodeTarget } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { HttpCodeTarget } from '@aws-cdk/aws-elasticloadbalancingv2';



   Count of HTTP status originating from the targets



   .. py:data:: Target2xxCount

   The number of 2xx response codes from targets



   .. py:data:: Target3xxCount

   The number of 3xx response codes from targets



   .. py:data:: Target4xxCount

   The number of 4xx response codes from targets



   .. py:data:: Target5xxCount

   The number of 5xx response codes from targets




IApplicationListener (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IApplicationListener

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.IApplicationListener;

      .. code-tab:: javascript

         // IApplicationListener is an interface

      .. code-tab:: typescript

         import { IApplicationListener } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties to reference an existing listener



   :extends: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 
   :extends: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:attribute:: listenerArn

      ARN of the listener



      :type: string *(readonly)*


   .. py:method:: addCertificateArns(id, arns)

      Add one or more certificates to this listener.



      :param id: 
      :type id: string
      :param arns: 
      :type arns: string[]
      :abstract: Yes


   .. py:method:: addTargetGroups(id, props)

      Load balance incoming requests to the given target groups.

      

      It's possible to add conditions to the TargetGroups added in this way.

      At least one TargetGroup must be added without conditions.



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetGroupsProps`\ 
      :abstract: Yes


   .. py:method:: addTargets(id, props) -> @aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup

      Load balance incoming requests to the given load balancing targets.

      

      This method implicitly creates an ApplicationTargetGroup for the targets

      involved.

      

      It's possible to add conditions to the targets added in this way. At least

      one set of targets must be added without conditions.



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps`\ 
      :return: The newly created target group
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 
      :abstract: Yes


   .. py:method:: registerConnectable(connectable, portRange)

      Register that a connectable that has been added to this load balancer.

      

      Don't call this directly. It is called by ApplicationTargetGroup.



      :param connectable: 
      :type connectable: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 
      :param portRange: 
      :type portRange: :py:class:`@aws-cdk/aws-ec2.IPortRange`\ 
      :abstract: Yes


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.IConnectable <@aws-cdk/aws-ec2.IConnectable.connections>`

      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


IApplicationLoadBalancer (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IApplicationLoadBalancer

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.IApplicationLoadBalancer;

      .. code-tab:: javascript

         // IApplicationLoadBalancer is an interface

      .. code-tab:: typescript

         import { IApplicationLoadBalancer } from '@aws-cdk/aws-elasticloadbalancingv2';



   An application load balancer



   :extends: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 


   .. py:attribute:: loadBalancerArn

      The ARN of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: vpc

      The VPC this load balancer has been created in (if available)



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\  *(optional)* *(readonly)*


   .. py:method:: addListener(id, props) -> @aws-cdk/aws-elasticloadbalancingv2.ApplicationListener

      Add a new listener to this load balancer



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener`\ 
      :abstract: Yes


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ec2.IConnectable <@aws-cdk/aws-ec2.IConnectable.connections>`

      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


IApplicationLoadBalancerTarget (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IApplicationLoadBalancerTarget

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.IApplicationLoadBalancerTarget;

      .. code-tab:: javascript

         // IApplicationLoadBalancerTarget is an interface

      .. code-tab:: typescript

         import { IApplicationLoadBalancerTarget } from '@aws-cdk/aws-elasticloadbalancingv2';



   Interface for constructs that can be targets of an application load balancer





   .. py:method:: attachToApplicationTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      Attach load-balanced target to a TargetGroup

      

      May return JSON to directly add to the [Targets] list, or return undefined

      if the target will register itself with the load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 
      :abstract: Yes


IApplicationTargetGroup (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IApplicationTargetGroup

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.IApplicationTargetGroup;

      .. code-tab:: javascript

         // IApplicationTargetGroup is an interface

      .. code-tab:: typescript

         import { IApplicationTargetGroup } from '@aws-cdk/aws-elasticloadbalancingv2';



   A Target Group for Application Load Balancers



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup`\ 


   .. py:method:: registerListener(listener, [dependable])

      Register a listener that is load balancing to this target group.

      

      Don't call this directly. It will be called by listeners.



      :param listener: 
      :type listener: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener`\ 
      :param dependable: 
      :type dependable: :py:class:`@aws-cdk/cdk.IDependable`\  *(optional)*
      :abstract: Yes


   .. py:method:: loadBalancerDependency() -> @aws-cdk/cdk.IDependable

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup <@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.loadBalancerDependency>`

      Return an object to depend on the listeners added to this target group



      :rtype: :py:class:`@aws-cdk/cdk.IDependable`\ 
      :abstract: Yes


   .. py:attribute:: loadBalancerArns

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup <@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.loadBalancerArns>`

      A token representing a list of ARNs of the load balancers that route traffic to this target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup <@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.targetGroupArn>`

      ARN of the target group



      :type: string *(readonly)*


INetworkListener (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: INetworkListener

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.INetworkListener;

      .. code-tab:: javascript

         // INetworkListener is an interface

      .. code-tab:: typescript

         import { INetworkListener } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties to reference an existing listener



   :extends: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:attribute:: listenerArn

      ARN of the listener



      :type: string *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


INetworkLoadBalancer (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: INetworkLoadBalancer

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.INetworkLoadBalancer;

      .. code-tab:: javascript

         // INetworkLoadBalancer is an interface

      .. code-tab:: typescript

         import { INetworkLoadBalancer } from '@aws-cdk/aws-elasticloadbalancingv2';



   A network load balancer





   .. py:attribute:: loadBalancerArn

      The ARN of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: vpc

      The VPC this load balancer has been created in (if available)



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\  *(optional)* *(readonly)*


   .. py:method:: addListener(id, props) -> @aws-cdk/aws-elasticloadbalancingv2.NetworkListener

      Add a listener to this load balancer



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps`\ 
      :return: The newly created listener
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkListener`\ 
      :abstract: Yes


INetworkLoadBalancerTarget (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: INetworkLoadBalancerTarget

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.INetworkLoadBalancerTarget;

      .. code-tab:: javascript

         // INetworkLoadBalancerTarget is an interface

      .. code-tab:: typescript

         import { INetworkLoadBalancerTarget } from '@aws-cdk/aws-elasticloadbalancingv2';



   Interface for constructs that can be targets of an network load balancer





   .. py:method:: attachToNetworkTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      Attach load-balanced target to a TargetGroup

      

      May return JSON to directly add to the [Targets] list, or return undefined

      if the target will register itself with the load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 
      :abstract: Yes


INetworkTargetGroup (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: INetworkTargetGroup

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.INetworkTargetGroup;

      .. code-tab:: javascript

         // INetworkTargetGroup is an interface

      .. code-tab:: typescript

         import { INetworkTargetGroup } from '@aws-cdk/aws-elasticloadbalancingv2';



   A network target group



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup`\ 


   .. py:method:: registerListener(listener)

      Register a listener that is load balancing to this target group.

      

      Don't call this directly. It will be called by listeners.



      :param listener: 
      :type listener: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkListener`\ 
      :abstract: Yes


   .. py:method:: loadBalancerDependency() -> @aws-cdk/cdk.IDependable

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup <@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.loadBalancerDependency>`

      Return an object to depend on the listeners added to this target group



      :rtype: :py:class:`@aws-cdk/cdk.IDependable`\ 
      :abstract: Yes


   .. py:attribute:: loadBalancerArns

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup <@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.loadBalancerArns>`

      A token representing a list of ARNs of the load balancers that route traffic to this target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup <@aws-cdk/aws-elasticloadbalancingv2.ITargetGroup.targetGroupArn>`

      ARN of the target group



      :type: string *(readonly)*


ITargetGroup (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ITargetGroup

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.ITargetGroup;

      .. code-tab:: javascript

         // ITargetGroup is an interface

      .. code-tab:: typescript

         import { ITargetGroup } from '@aws-cdk/aws-elasticloadbalancingv2';



   A target group





   .. py:attribute:: loadBalancerArns

      A token representing a list of ARNs of the load balancers that route traffic to this target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupArn

      ARN of the target group



      :type: string *(readonly)*


   .. py:method:: loadBalancerDependency() -> @aws-cdk/cdk.IDependable

      Return an object to depend on the listeners added to this target group



      :rtype: :py:class:`@aws-cdk/cdk.IDependable`\ 
      :abstract: Yes


InstanceTarget
^^^^^^^^^^^^^^

.. py:class:: InstanceTarget(instanceId, [port])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.InstanceTarget;

      .. code-tab:: javascript

         const { InstanceTarget } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { InstanceTarget } from '@aws-cdk/aws-elasticloadbalancingv2';



   An EC2 instance that is the target for load balancing

   

   If you register a target of this type, you are responsible for making

   sure the load balancer's security group can connect to the instance.



   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget`\ 
   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget`\ 
   :param instanceId: Instance ID of the instance to register to
   :type instanceId: string
   :param port: Override the default port for the target group
   :type port: number *(optional)*

   .. py:method:: attachToApplicationTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget.attachToApplicationTargetGroup`

      Register this instance target with a load balancer

      

      Don't call this, it is called automatically when you add the target to a

      load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: attachToNetworkTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget.attachToNetworkTargetGroup`

      Register this instance target with a load balancer

      

      Don't call this, it is called automatically when you add the target to a

      load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:attribute:: instanceId

      Instance ID of the instance to register to



      :type: string *(readonly)*


   .. py:attribute:: port

      Override the default port for the target group



      :type: number *(optional)* *(readonly)*


IpAddressType (enum)
^^^^^^^^^^^^^^^^^^^^

.. py:class:: IpAddressType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.IpAddressType;

      .. code-tab:: javascript

         const { IpAddressType } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { IpAddressType } from '@aws-cdk/aws-elasticloadbalancingv2';



   What kind of addresses to allocate to the load balancer



   .. py:data:: Ipv4

   Allocate IPv4 addresses



   .. py:data:: DualStack

   Allocate both IPv4 and IPv6 addresses




IpTarget
^^^^^^^^

.. py:class:: IpTarget(ipAddress, [port, [availabilityZone]])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.IpTarget;

      .. code-tab:: javascript

         const { IpTarget } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { IpTarget } from '@aws-cdk/aws-elasticloadbalancingv2';



   An IP address that is a target for load balancing.

   

   Specify IP addresses from the subnets of the virtual private cloud (VPC) for

   the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and

   192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify

   publicly routable IP addresses.

   

   If you register a target of this type, you are responsible for making

   sure the load balancer's security group can send packets to the IP address.



   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget`\ 
   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget`\ 
   :param ipAddress: The IP Address to load balance to
   :type ipAddress: string
   :param port: Override the group's default port
   :type port: number *(optional)*
   :param availabilityZone: Availability zone to send traffic from
   :type availabilityZone: string *(optional)*

   .. py:method:: attachToApplicationTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget.attachToApplicationTargetGroup`

      Register this instance target with a load balancer

      

      Don't call this, it is called automatically when you add the target to a

      load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: attachToNetworkTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget.attachToNetworkTargetGroup`

      Register this instance target with a load balancer

      

      Don't call this, it is called automatically when you add the target to a

      load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:attribute:: ipAddress

      The IP Address to load balance to



      :type: string *(readonly)*


   .. py:attribute:: availabilityZone

      Availability zone to send traffic from



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: port

      Override the group's default port



      :type: number *(optional)* *(readonly)*


LoadBalancerSecurityGroups
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancerSecurityGroups([valueOrFunction, [displayName]])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.LoadBalancerSecurityGroups;

      .. code-tab:: javascript

         const { LoadBalancerSecurityGroups } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { LoadBalancerSecurityGroups } from '@aws-cdk/aws-elasticloadbalancingv2';



   :extends: :py:class:`@aws-cdk/cdk.Token`\ 
   :param valueOrFunction: What this token will evaluate to, literal or function.
   :type valueOrFunction: any *(optional)*
   :param displayName: A human-readable display hint for this Token
   :type displayName: string *(optional)*

   .. py:method:: concat(left, right) -> @aws-cdk/cdk.Token

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.concat>`

      Return a concated version of this Token in a string context

      

      The default implementation of this combines strings, but specialized

      implements of Token can return a more appropriate value.



      :param left: 
      :type left: any
      :param right: 
      :type right: any
      :rtype: :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:method:: resolve() -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.resolve>`

      :return: The resolved value for this token.
      :rtype: any


   .. py:method:: toJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toJSON>`

      Turn this Token into JSON

      

      This gets called by JSON.stringify(). We want to prohibit this, because

      it's not possible to do this properly, so we just throw an error here.



      :rtype: any


   .. py:method:: toList() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toList>`

      Return a string list representation of this token

      

      Call this if the Token intrinsically evaluates to a list of strings.

      If so, you can represent the Token in a similar way in the type

      system.

      

      Note that even though the Token is represented as a list of strings, you

      still cannot do any operations on it such as concatenation, indexing,

      or taking its length. The only useful operations you can do to these lists

      is constructing a `FnJoin` or a `FnSelect` on it.



      :rtype: string[]


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toString>`

      Return a reversible string representation of this token

      

      If the Token is initialized with a literal, the stringified value of the

      literal is returned. Otherwise, a special quoted string representation

      of the Token is returned that can be embedded into other strings.

      

      Strings with quoted Tokens in them can be restored back into

      complex values with the Tokens restored by calling `resolve()`

      on the string.



      :rtype: string


   .. py:attribute:: displayName

      *Inherited from* :py:attr:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.displayName>`

      A human-readable display hint for this Token



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: valueOrFunction

      *Inherited from* :py:attr:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.valueOrFunction>`

      What this token will evaluate to, literal or function.



      :type: any *(optional)* *(readonly)*


LoadBalancerTargetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancerTargetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.LoadBalancerTargetProps;

      .. code-tab:: javascript

         // LoadBalancerTargetProps is an interface

      .. code-tab:: typescript

         import { LoadBalancerTargetProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Result of attaching a target to load balancer





   .. py:attribute:: targetType

      What kind of target this is



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetType`\ 


   .. py:attribute:: targetJson

      JSON representing the target's direct addition to the TargetGroup list

      

      May be omitted if the target is going to register itself later.



      :type: any *(optional)*


NetworkListener
^^^^^^^^^^^^^^^

.. py:class:: NetworkListener(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkListener;

      .. code-tab:: javascript

         const { NetworkListener } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { NetworkListener } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define a Network Listener



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseListener`\ 
   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkListener`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerProps`\ 

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-elasticloadbalancingv2.INetworkListener

      Import an existing listener



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkListener`\ 


   .. py:method:: addTargetGroups(_id, *targetGroups)

      Load balance incoming requests to the given target groups.



      :param _id: 
      :type _id: string
      :param \*targetGroups: 
      :type \*targetGroups: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup`\ 


   .. py:method:: addTargets(id, props) -> @aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup

      Load balance incoming requests to the given load balancing targets.

      

      This method implicitly creates an ApplicationTargetGroup for the targets

      involved.



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps`\ 
      :return: The newly created target group
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup`\ 


   .. py:method:: export() -> @aws-cdk/aws-elasticloadbalancingv2.NetworkListenerRefProps

      Export this listener



      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkListenerRefProps`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseListener <@aws-cdk/aws-elasticloadbalancingv2.BaseListener.validate>`

      Validate this listener



      :rtype: string[]


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseListener <@aws-cdk/aws-elasticloadbalancingv2.BaseListener.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: listenerArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseListener <@aws-cdk/aws-elasticloadbalancingv2.BaseListener.listenerArn>`

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


NetworkListenerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkListenerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkListenerProps;

      .. code-tab:: javascript

         // NetworkListenerProps is an interface

      .. code-tab:: typescript

         import { NetworkListenerProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for a Network Listener attached to a Load Balancer



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps`\ 


   .. py:attribute:: loadBalancer

      The load balancer to attach this listener to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer`\ 


   .. py:attribute:: port

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps.port>`

      The port on which the listener listens for requests.



      :type: number


   .. py:attribute:: defaultTargetGroups

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps.defaultTargetGroups>`

      Default target groups to load balance to



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup`\ [] *(optional)*
      :default: None


NetworkListenerRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkListenerRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkListenerRefProps;

      .. code-tab:: javascript

         // NetworkListenerRefProps is an interface

      .. code-tab:: typescript

         import { NetworkListenerRefProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties to reference an existing listener





   .. py:attribute:: listenerArn

      ARN of the listener



      :type: string


NetworkLoadBalancer
^^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkLoadBalancer(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkLoadBalancer;

      .. code-tab:: javascript

         const { NetworkLoadBalancer } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { NetworkLoadBalancer } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define a new network load balancer



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer`\ 
   :implements: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerProps`\ 

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer

      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer`\ 


   .. py:method:: addListener(id, props) -> @aws-cdk/aws-elasticloadbalancingv2.NetworkListener

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer.addListener`

      Add a listener to this load balancer



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseNetworkListenerProps`\ 
      :return: The newly created listener
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkListener`\ 


   .. py:method:: export() -> @aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerRefProps

      Export this load balancer



      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkLoadBalancerRefProps`\ 


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      Return the given named metric for this Network Load Balancer



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricActiveFlowCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of concurrent TCP flows (or connections) from clients to targets.

      

      This metric includes connections in the SYN_SENT and ESTABLISHED states.

      TCP connections are not terminated at the load balancer, so a client

      opening a TCP connection to a target counts as a single flow.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricConsumedLCUs([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of load balancer capacity units (LCU) used by your load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricHealthyHostCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of targets that are considered healthy.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricNewFlowCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of new TCP flows (or connections) established from clients to targets in the time period.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricProcessedBytes([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of bytes processed by the load balancer, including TCP/IP headers.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTcpClientResetCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of reset (RST) packets sent from a client to a target.

      

      These resets are generated by the client and forwarded by the load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTcpElbResetCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of reset (RST) packets generated by the load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricTcpTargetResetCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The total number of reset (RST) packets sent from a target to a client.

      

      These resets are generated by the target and forwarded by the load balancer.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricUnHealthyHostCount([props]) -> @aws-cdk/aws-cloudwatch.Metric

      The number of targets that are considered unhealthy.



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: asAliasRecordTarget() -> @aws-cdk/aws-route53.AliasRecordTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.asAliasRecordTarget>`

      Return hosted zone ID and DNS name, usable for Route53 alias targets



      :rtype: :py:class:`@aws-cdk/aws-route53.AliasRecordTargetProps`\ 


   .. py:method:: removeAttribute(key)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.removeAttribute>`

      Remove an attribute from the load balancer



      :param key: 
      :type key: string


   .. py:method:: setAttribute(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.setAttribute>`

      Set a non-standard attribute on the load balancer



      :param key: 
      :type key: string
      :param value: 
      :type value: string *(optional)*


   .. py:attribute:: canonicalHostedZoneId

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.canonicalHostedZoneId>`

      The canonical hosted zone ID of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: dnsName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.dnsName>`

      The DNS name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: fullName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.fullName>`

      The full name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.loadBalancerArn>`

      The ARN of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.loadBalancerName>`

      The name of this load balancer



      :type: string *(readonly)*


   .. py:attribute:: vpc

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer.vpc>`

      The VPC this load balancer has been created in, if available

      

      If the Load Balancer was imported, the VPC is not available.



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\  *(optional)* *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


NetworkLoadBalancerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkLoadBalancerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkLoadBalancerProps;

      .. code-tab:: javascript

         // NetworkLoadBalancerProps is an interface

      .. code-tab:: typescript

         import { NetworkLoadBalancerProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for a network load balancer



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps`\ 


   .. py:attribute:: crossZoneEnabled

      Indicates whether cross-zone load balancing is enabled.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: vpc

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.vpc>`

      The VPC network to place the load balancer in



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 


   .. py:attribute:: deletionProtection

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.deletionProtection>`

      Indicates whether deletion protection is enabled.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: internetFacing

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.internetFacing>`

      Whether the load balancer has an internet-routable address



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: loadBalancerName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.loadBalancerName>`

      Name of the load balancer



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: vpcPlacement

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps <@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancerProps.vpcPlacement>`

      Where in the VPC to place the load balancer



      :type: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :default: Public subnets if internetFacing, otherwise private subnets


NetworkLoadBalancerRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkLoadBalancerRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkLoadBalancerRefProps;

      .. code-tab:: javascript

         // NetworkLoadBalancerRefProps is an interface

      .. code-tab:: typescript

         import { NetworkLoadBalancerRefProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties to reference an existing load balancer





   .. py:attribute:: loadBalancerArn

      ARN of the load balancer



      :type: string


NetworkTargetGroup
^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkTargetGroup(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkTargetGroup;

      .. code-tab:: javascript

         const { NetworkTargetGroup } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { NetworkTargetGroup } from '@aws-cdk/aws-elasticloadbalancingv2';



   Define a Network Target Group



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroupProps`\ 

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup

      Import an existing listener



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup`\ 


   .. py:method:: addTarget(*targets)

      Add a load balancing target to this target group



      :param \*targets: 
      :type \*targets: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget`\ 


   .. py:method:: registerListener(listener)

      Register a listener that is load balancing to this target group.

      

      Don't call this directly. It will be called by listeners.



      :param listener: 
      :type listener: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkListener`\ 


   .. py:attribute:: firstLoadBalancerFullName

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.firstLoadBalancerFullName`

      Full name of first load balancer



      :type: string *(readonly)*


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.addDependency>`

      Add a dependency between this target group and the indicated resources



      :param \*other: 
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addLoadBalancerTarget(props)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.addLoadBalancerTarget>`

      Register the given load balancing target as part of this group



      *Protected method*

      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: asCodeDeployLoadBalancer() -> @aws-cdk/aws-codedeploy-api.ILoadBalancerProps

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.asCodeDeployLoadBalancer>`

      Specify the CodeDeploy-required properties of this load balancer.



      :rtype: :py:class:`@aws-cdk/aws-codedeploy-api.ILoadBalancerProps`\ 


   .. py:method:: configureHealthCheck(healthCheck)

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.configureHealthCheck>`

      Set/replace the target group's health check



      :param healthCheck: 
      :type healthCheck: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\ 


   .. py:method:: export() -> @aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.export>`

      Export this target group



      :rtype: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetGroupRefProps`\ 


   .. py:method:: loadBalancerDependency() -> @aws-cdk/cdk.IDependable

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.loadBalancerDependency>`

      Return an object to depend on this TargetGroup being attached to a load balancer



      :rtype: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: setAttribute(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.setAttribute>`

      Set a non-standard attribute on the target group



      :param key: 
      :type key: string
      :param value: 
      :type value: string *(optional)*


   .. py:attribute:: defaultPort

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.defaultPort>`

      Default port configured for members of this target group



      *Protected property*

      :type: string *(readonly)*


   .. py:attribute:: loadBalancerArns

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.loadBalancerArns>`

      Health check for the members of this target group

      A token representing a list of ARNs of the load balancers that route traffic to this target group



      :type: string *(readonly)*


   .. py:attribute:: loadBalancerAssociationDependencies

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.loadBalancerAssociationDependencies>`

      List of dependables that need to be depended on to ensure the TargetGroup is associated to a load balancer



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: targetGroupArn

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupArn>`

      The ARN of the target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupFullName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupFullName>`

      The full name of the target group



      :type: string *(readonly)*


   .. py:attribute:: targetGroupLoadBalancerArns

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupLoadBalancerArns>`

      ARNs of load balancers load balancing to this TargetGroup



      :type: string[] *(readonly)*


   .. py:attribute:: targetGroupName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.targetGroupName>`

      The name of the target group



      :type: string *(readonly)*


   .. py:attribute:: healthCheck

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroup.healthCheck>`

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\ 


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


NetworkTargetGroupProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkTargetGroupProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.NetworkTargetGroupProps;

      .. code-tab:: javascript

         // NetworkTargetGroupProps is an interface

      .. code-tab:: typescript

         import { NetworkTargetGroupProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties for a new Network Target Group



   :extends: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps`\ 


   .. py:attribute:: port

      The port on which the listener listens for requests.



      :type: number


   .. py:attribute:: proxyProtocolV2

      Indicates whether Proxy Protocol version 2 is enabled.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: targets

      The targets to add to this target group.

      

      Can be `Instance`, `IPAddress`, or any self-registering load balancing

      target. If you use either `Instance` or `IPAddress` as targets, all

      target must be of the same type.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget`\ [] *(optional)*


   .. py:attribute:: vpc

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.vpc>`

      The virtual private cloud (VPC).



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 


   .. py:attribute:: deregistrationDelaySec

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.deregistrationDelaySec>`

      The amount of time for Elastic Load Balancing to wait before deregistering a target.

      

      The range is 0–3600 seconds.



      :type: number *(optional)*
      :default: 300


   .. py:attribute:: healthCheck

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.healthCheck>`

      Health check configuration



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.HealthCheck`\  *(optional)*
      :default: No health check


   .. py:attribute:: targetGroupName

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.targetGroupName>`

      The name of the target group.

      

      This name must be unique per region per account, can have a maximum of

      32 characters, must contain only alphanumeric characters or hyphens, and

      must not begin or end with a hyphen.



      :type: string *(optional)*
      :default: Automatically generated


   .. py:attribute:: targetType

      *Inherited from* :py:attr:`@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps <@aws-cdk/aws-elasticloadbalancingv2.BaseTargetGroupProps.targetType>`

      The type of targets registered to this TargetGroup, either IP or Instance.

      

      All targets registered into the group must be of this type. If you

      register targets to the TargetGroup in the CDK app, the TargetType is

      determined automatically.



      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetType`\  *(optional)*
      :default: Determined automatically


Protocol (enum)
^^^^^^^^^^^^^^^

.. py:class:: Protocol

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.Protocol;

      .. code-tab:: javascript

         const { Protocol } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { Protocol } from '@aws-cdk/aws-elasticloadbalancingv2';



   Backend protocol for health checks



   .. py:data:: Http

   HTTP



   .. py:data:: Https

   HTTPS



   .. py:data:: Tcp

   TCP




SslPolicy (enum)
^^^^^^^^^^^^^^^^

.. py:class:: SslPolicy

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.SslPolicy;

      .. code-tab:: javascript

         const { SslPolicy } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { SslPolicy } from '@aws-cdk/aws-elasticloadbalancingv2';



   Elastic Load Balancing provides the following security policies for Application Load Balancers

   

   We recommend the Recommended policy for general use. You can

   use the ForwardSecrecy policy if you require Forward Secrecy

   (FS).

   

   You can use one of the TLS policies to meet compliance and security

   standards that require disabling certain TLS protocol versions, or to

   support legacy clients that require deprecated ciphers.



   .. py:data:: Recommended

   The recommended security policy



   .. py:data:: ForwardSecrecy

   Forward secrecy ciphers only



   .. py:data:: TLS12

   TLS1.2 only and no SHA ciphers



   .. py:data:: TLS12Ext

   TLS1.2 only with all ciphers



   .. py:data:: TLS11

   TLS1.1 and higher with all ciphers



   .. py:data:: Legacy

   Support for DES-CBC3-SHA

   

   Do not use this security policy unless you must support a legacy client

   that requires the DES-CBC3-SHA cipher, which is a weak cipher.




TargetGroupLoadBalancerArns
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TargetGroupLoadBalancerArns([valueOrFunction, [displayName]])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.TargetGroupLoadBalancerArns;

      .. code-tab:: javascript

         const { TargetGroupLoadBalancerArns } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { TargetGroupLoadBalancerArns } from '@aws-cdk/aws-elasticloadbalancingv2';



   :extends: :py:class:`@aws-cdk/cdk.Token`\ 
   :param valueOrFunction: What this token will evaluate to, literal or function.
   :type valueOrFunction: any *(optional)*
   :param displayName: A human-readable display hint for this Token
   :type displayName: string *(optional)*

   .. py:method:: concat(left, right) -> @aws-cdk/cdk.Token

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.concat>`

      Return a concated version of this Token in a string context

      

      The default implementation of this combines strings, but specialized

      implements of Token can return a more appropriate value.



      :param left: 
      :type left: any
      :param right: 
      :type right: any
      :rtype: :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:method:: resolve() -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.resolve>`

      :return: The resolved value for this token.
      :rtype: any


   .. py:method:: toJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toJSON>`

      Turn this Token into JSON

      

      This gets called by JSON.stringify(). We want to prohibit this, because

      it's not possible to do this properly, so we just throw an error here.



      :rtype: any


   .. py:method:: toList() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toList>`

      Return a string list representation of this token

      

      Call this if the Token intrinsically evaluates to a list of strings.

      If so, you can represent the Token in a similar way in the type

      system.

      

      Note that even though the Token is represented as a list of strings, you

      still cannot do any operations on it such as concatenation, indexing,

      or taking its length. The only useful operations you can do to these lists

      is constructing a `FnJoin` or a `FnSelect` on it.



      :rtype: string[]


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toString>`

      Return a reversible string representation of this token

      

      If the Token is initialized with a literal, the stringified value of the

      literal is returned. Otherwise, a special quoted string representation

      of the Token is returned that can be embedded into other strings.

      

      Strings with quoted Tokens in them can be restored back into

      complex values with the Tokens restored by calling `resolve()`

      on the string.



      :rtype: string


   .. py:attribute:: displayName

      *Inherited from* :py:attr:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.displayName>`

      A human-readable display hint for this Token



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: valueOrFunction

      *Inherited from* :py:attr:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.valueOrFunction>`

      What this token will evaluate to, literal or function.



      :type: any *(optional)* *(readonly)*


TargetGroupRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TargetGroupRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.TargetGroupRefProps;

      .. code-tab:: javascript

         // TargetGroupRefProps is an interface

      .. code-tab:: typescript

         import { TargetGroupRefProps } from '@aws-cdk/aws-elasticloadbalancingv2';



   Properties to reference an existing target group





   .. py:attribute:: defaultPort

      Port target group is listening on



      :type: string


   .. py:attribute:: targetGroupArn

      ARN of the target group



      :type: string


   .. py:attribute:: loadBalancerArns

      A Token representing the list of ARNs for the load balancer routing to this target group



      :type: string *(optional)*


TargetType (enum)
^^^^^^^^^^^^^^^^^

.. py:class:: TargetType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.TargetType;

      .. code-tab:: javascript

         const { TargetType } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { TargetType } from '@aws-cdk/aws-elasticloadbalancingv2';



   How to interpret the load balancing target identifiers



   .. py:data:: Instance

   Targets identified by instance ID



   .. py:data:: Ip

   Targets identified by IP address





cloudformation
^^^^^^^^^^^^^^
.. py:module:: @aws-cdk/aws-elasticloadbalancingv2.cloudformation

ListenerCertificateResource
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ListenerCertificateResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerCertificateResource;

      .. code-tab:: javascript

         const { cloudformation.ListenerCertificateResource } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { cloudformation.ListenerCertificateResource } from '@aws-cdk/aws-elasticloadbalancingv2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ListenerCertificateResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ListenerCertificateResource``
   :type properties: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerCertificateResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: listenerCertificateArn

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerCertificateResourceProps`\  *(readonly)*

   .. py:class:: CertificateProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerCertificateResource.CertificateProperty;

         .. code-tab:: javascript

            // cloudformation.ListenerCertificateResource.CertificateProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ListenerCertificateResource.CertificateProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: certificateArn

         ``ListenerCertificateResource.CertificateProperty.CertificateArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html#cfn-elasticloadbalancingv2-listener-certificates-certificatearn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ListenerCertificateResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ListenerCertificateResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerCertificateResourceProps;

      .. code-tab:: javascript

         // cloudformation.ListenerCertificateResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ListenerCertificateResourceProps } from '@aws-cdk/aws-elasticloadbalancingv2';





   .. py:attribute:: certificates

      ``AWS::ElasticLoadBalancingV2::ListenerCertificate.Certificates``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-certificates


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerCertificateResource.CertificateProperty`\ )[]


   .. py:attribute:: listenerArn

      ``AWS::ElasticLoadBalancingV2::ListenerCertificate.ListenerArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-listenerarn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


ListenerResource
~~~~~~~~~~~~~~~~

.. py:class:: ListenerResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerResource;

      .. code-tab:: javascript

         const { cloudformation.ListenerResource } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { cloudformation.ListenerResource } from '@aws-cdk/aws-elasticloadbalancingv2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ListenerResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ListenerResource``
   :type properties: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: listenerArn

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerResourceProps`\  *(readonly)*

   .. py:class:: ActionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerResource.ActionProperty;

         .. code-tab:: javascript

            // cloudformation.ListenerResource.ActionProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ListenerResource.ActionProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: targetGroupArn

         ``ListenerResource.ActionProperty.TargetGroupArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-defaultactions.html#cfn-elasticloadbalancingv2-listener-defaultactions-targetgrouparn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: type

         ``ListenerResource.ActionProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-defaultactions.html#cfn-elasticloadbalancingv2-listener-defaultactions-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:class:: CertificateProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerResource.CertificateProperty;

         .. code-tab:: javascript

            // cloudformation.ListenerResource.CertificateProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ListenerResource.CertificateProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: certificateArn

         ``ListenerResource.CertificateProperty.CertificateArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html#cfn-elasticloadbalancingv2-listener-certificates-certificatearn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ListenerResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ListenerResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerResourceProps;

      .. code-tab:: javascript

         // cloudformation.ListenerResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ListenerResourceProps } from '@aws-cdk/aws-elasticloadbalancingv2';





   .. py:attribute:: defaultActions

      ``AWS::ElasticLoadBalancingV2::Listener.DefaultActions``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-defaultactions


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerResource.ActionProperty`\  or :py:class:`@aws-cdk/cdk.Token`\ )[]


   .. py:attribute:: loadBalancerArn

      ``AWS::ElasticLoadBalancingV2::Listener.LoadBalancerArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-loadbalancerarn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: port

      ``AWS::ElasticLoadBalancingV2::Listener.Port``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-port


      :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: protocol

      ``AWS::ElasticLoadBalancingV2::Listener.Protocol``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-protocol


      :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: certificates

      ``AWS::ElasticLoadBalancingV2::Listener.Certificates``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-certificates


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerResource.CertificateProperty`\ )[] *(optional)*


   .. py:attribute:: sslPolicy

      ``AWS::ElasticLoadBalancingV2::Listener.SslPolicy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-sslpolicy


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


ListenerRuleResource
~~~~~~~~~~~~~~~~~~~~

.. py:class:: ListenerRuleResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerRuleResource;

      .. code-tab:: javascript

         const { cloudformation.ListenerRuleResource } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { cloudformation.ListenerRuleResource } from '@aws-cdk/aws-elasticloadbalancingv2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ListenerRuleResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ListenerRuleResource``
   :type properties: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerRuleResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: listenerRuleArn

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerRuleResourceProps`\  *(readonly)*

   .. py:class:: ActionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerRuleResource.ActionProperty;

         .. code-tab:: javascript

            // cloudformation.ListenerRuleResource.ActionProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ListenerRuleResource.ActionProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: targetGroupArn

         ``ListenerRuleResource.ActionProperty.TargetGroupArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-actions.html#cfn-elasticloadbalancingv2-listener-actions-targetgrouparn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: type

         ``ListenerRuleResource.ActionProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-actions.html#cfn-elasticloadbalancingv2-listener-actions-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:class:: RuleConditionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerRuleResource.RuleConditionProperty;

         .. code-tab:: javascript

            // cloudformation.ListenerRuleResource.RuleConditionProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ListenerRuleResource.RuleConditionProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: field

         ``ListenerRuleResource.RuleConditionProperty.Field``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-conditions.html#cfn-elasticloadbalancingv2-listenerrule-conditions-field


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: values

         ``ListenerRuleResource.RuleConditionProperty.Values``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-conditions.html#cfn-elasticloadbalancingv2-listenerrule-conditions-values


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ListenerRuleResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ListenerRuleResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.ListenerRuleResourceProps;

      .. code-tab:: javascript

         // cloudformation.ListenerRuleResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ListenerRuleResourceProps } from '@aws-cdk/aws-elasticloadbalancingv2';





   .. py:attribute:: actions

      ``AWS::ElasticLoadBalancingV2::ListenerRule.Actions``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-actions


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerRuleResource.ActionProperty`\ )[]


   .. py:attribute:: conditions

      ``AWS::ElasticLoadBalancingV2::ListenerRule.Conditions``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-conditions


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.ListenerRuleResource.RuleConditionProperty`\ )[]


   .. py:attribute:: listenerArn

      ``AWS::ElasticLoadBalancingV2::ListenerRule.ListenerArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-listenerarn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: priority

      ``AWS::ElasticLoadBalancingV2::ListenerRule.Priority``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-priority


      :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


LoadBalancerResource
~~~~~~~~~~~~~~~~~~~~

.. py:class:: LoadBalancerResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.LoadBalancerResource;

      .. code-tab:: javascript

         const { cloudformation.LoadBalancerResource } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { cloudformation.LoadBalancerResource } from '@aws-cdk/aws-elasticloadbalancingv2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``LoadBalancerResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``LoadBalancerResource``
   :type properties: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.LoadBalancerResourceProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: loadBalancerArn

      :type: string *(readonly)*


   .. py:attribute:: loadBalancerCanonicalHostedZoneId

      :type: string *(readonly)*


   .. py:attribute:: loadBalancerDnsName

      :type: string *(readonly)*


   .. py:attribute:: loadBalancerFullName

      :type: string *(readonly)*


   .. py:attribute:: loadBalancerName

      :type: string *(readonly)*


   .. py:attribute:: loadBalancerSecurityGroups

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerSecurityGroups`\  *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.LoadBalancerResourceProps`\  *(readonly)*

   .. py:class:: LoadBalancerAttributeProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.LoadBalancerResource.LoadBalancerAttributeProperty;

         .. code-tab:: javascript

            // cloudformation.LoadBalancerResource.LoadBalancerAttributeProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.LoadBalancerResource.LoadBalancerAttributeProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: key

         ``LoadBalancerResource.LoadBalancerAttributeProperty.Key``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes-key


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: value

         ``LoadBalancerResource.LoadBalancerAttributeProperty.Value``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes-value


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: SubnetMappingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.LoadBalancerResource.SubnetMappingProperty;

         .. code-tab:: javascript

            // cloudformation.LoadBalancerResource.SubnetMappingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.LoadBalancerResource.SubnetMappingProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: allocationId

         ``LoadBalancerResource.SubnetMappingProperty.AllocationId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-allocationid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: subnetId

         ``LoadBalancerResource.SubnetMappingProperty.SubnetId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-subnetid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


LoadBalancerResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: LoadBalancerResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.LoadBalancerResourceProps;

      .. code-tab:: javascript

         // cloudformation.LoadBalancerResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.LoadBalancerResourceProps } from '@aws-cdk/aws-elasticloadbalancingv2';





   .. py:attribute:: ipAddressType

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.IpAddressType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-ipaddresstype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: loadBalancerAttributes

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.LoadBalancerAttributes``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.LoadBalancerResource.LoadBalancerAttributeProperty`\ )[] *(optional)*


   .. py:attribute:: name

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.Name``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: scheme

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.Scheme``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-scheme


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: securityGroups

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.SecurityGroups``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-securitygroups


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: subnetMappings

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.SubnetMappings``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmappings


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.LoadBalancerResource.SubnetMappingProperty`\ )[] *(optional)*


   .. py:attribute:: subnets

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.Subnets``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnets


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: tags

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.Tag`\ )[] *(optional)*


   .. py:attribute:: type

      ``AWS::ElasticLoadBalancingV2::LoadBalancer.Type``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-type


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


TargetGroupResource
~~~~~~~~~~~~~~~~~~~

.. py:class:: TargetGroupResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.TargetGroupResource;

      .. code-tab:: javascript

         const { cloudformation.TargetGroupResource } = require('@aws-cdk/aws-elasticloadbalancingv2');

      .. code-tab:: typescript

         import { cloudformation.TargetGroupResource } from '@aws-cdk/aws-elasticloadbalancingv2';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``TargetGroupResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``TargetGroupResource``
   :type properties: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.TargetGroupResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.TargetGroupResourceProps`\  *(readonly)*


   .. py:attribute:: targetGroupArn

      :type: string *(readonly)*


   .. py:attribute:: targetGroupFullName

      :type: string *(readonly)*


   .. py:attribute:: targetGroupLoadBalancerArns

      :type: :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.TargetGroupLoadBalancerArns`\  *(readonly)*


   .. py:attribute:: targetGroupName

      :type: string *(readonly)*

   .. py:class:: MatcherProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.TargetGroupResource.MatcherProperty;

         .. code-tab:: javascript

            // cloudformation.TargetGroupResource.MatcherProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TargetGroupResource.MatcherProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: httpCode

         ``TargetGroupResource.MatcherProperty.HttpCode``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html#cfn-elasticloadbalancingv2-targetgroup-matcher-httpcode


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:class:: TargetDescriptionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.TargetGroupResource.TargetDescriptionProperty;

         .. code-tab:: javascript

            // cloudformation.TargetGroupResource.TargetDescriptionProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TargetGroupResource.TargetDescriptionProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: id

         ``TargetGroupResource.TargetDescriptionProperty.Id``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html#cfn-elasticloadbalancingv2-targetgroup-targetdescription-id


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: availabilityZone

         ``TargetGroupResource.TargetDescriptionProperty.AvailabilityZone``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html#cfn-elasticloadbalancingv2-targetgroup-targetdescription-availabilityzone


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: port

         ``TargetGroupResource.TargetDescriptionProperty.Port``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html#cfn-elasticloadbalancingv2-targetgroup-targetdescription-port


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: TargetGroupAttributeProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ElasticLoadBalancingV2;

         .. code-tab:: java

            import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.TargetGroupResource.TargetGroupAttributeProperty;

         .. code-tab:: javascript

            // cloudformation.TargetGroupResource.TargetGroupAttributeProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TargetGroupResource.TargetGroupAttributeProperty } from '@aws-cdk/aws-elasticloadbalancingv2';





      .. py:attribute:: key

         ``TargetGroupResource.TargetGroupAttributeProperty.Key``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattribute.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattribute-key


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: value

         ``TargetGroupResource.TargetGroupAttributeProperty.Value``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattribute.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattribute-value


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


TargetGroupResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: TargetGroupResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ElasticLoadBalancingV2;

      .. code-tab:: java

         import software.amazon.awscdk.services.elasticloadbalancingv2.cloudformation.TargetGroupResourceProps;

      .. code-tab:: javascript

         // cloudformation.TargetGroupResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.TargetGroupResourceProps } from '@aws-cdk/aws-elasticloadbalancingv2';





   .. py:attribute:: port

      ``AWS::ElasticLoadBalancingV2::TargetGroup.Port``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-port


      :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: protocol

      ``AWS::ElasticLoadBalancingV2::TargetGroup.Protocol``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocol


      :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: vpcId

      ``AWS::ElasticLoadBalancingV2::TargetGroup.VpcId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-vpcid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: healthCheckIntervalSeconds

      ``AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckIntervalSeconds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckintervalseconds


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: healthCheckPath

      ``AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPath``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckpath


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: healthCheckPort

      ``AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckPort``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckport


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: healthCheckProtocol

      ``AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckProtocol``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckprotocol


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: healthCheckTimeoutSeconds

      ``AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckTimeoutSeconds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthchecktimeoutseconds


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: healthyThresholdCount

      ``AWS::ElasticLoadBalancingV2::TargetGroup.HealthyThresholdCount``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthythresholdcount


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: matcher

      ``AWS::ElasticLoadBalancingV2::TargetGroup.Matcher``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-matcher


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.TargetGroupResource.MatcherProperty`\  *(optional)*


   .. py:attribute:: name

      ``AWS::ElasticLoadBalancingV2::TargetGroup.Name``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: tags

      ``AWS::ElasticLoadBalancingV2::TargetGroup.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.Tag`\ )[] *(optional)*


   .. py:attribute:: targetGroupAttributes

      ``AWS::ElasticLoadBalancingV2::TargetGroup.TargetGroupAttributes``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattributes


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.TargetGroupResource.TargetGroupAttributeProperty`\ )[] *(optional)*


   .. py:attribute:: targets

      ``AWS::ElasticLoadBalancingV2::TargetGroup.Targets``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targets


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-elasticloadbalancingv2.cloudformation.TargetGroupResource.TargetDescriptionProperty`\ )[] *(optional)*


   .. py:attribute:: targetType

      ``AWS::ElasticLoadBalancingV2::TargetGroup.TargetType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targettype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: unhealthyThresholdCount

      ``AWS::ElasticLoadBalancingV2::TargetGroup.UnhealthyThresholdCount``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-unhealthythresholdcount


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



.. py:currentmodule:: @aws-cdk/aws-elasticloadbalancingv2

