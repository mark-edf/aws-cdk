.. @jsii-pacmak:meta@ {"fingerprint":"0Bqc2yTOLeHMnLNG00ExX9mKwvGZOpZg9NJw/jWDPO4="}

@aws-cdk/app-delivery
=====================

.. mdinclude:: ./__aws-cdk_app-delivery.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AppDelivery/0.21.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AppDelivery" Version="0.21.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AppDelivery --version 0.21.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AppDelivery" version="0.21.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/cdk-app-delivery/0.21.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:cdk-app-delivery:jar:0.21.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="cdk-app-delivery" rev="0.21.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>cdk-app-delivery</artifactId>
           <version>0.21.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:cdk-app-delivery:0.21.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='cdk-app-delivery', version='0.21.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/app-delivery/v/0.21.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/app-delivery@0.21.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/app-delivery": "^0.21.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/app-delivery@0.21.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/app-delivery/v/0.21.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/app-delivery@0.21.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/app-delivery": "^0.21.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/app-delivery@0.21.0



.. py:module:: @aws-cdk/app-delivery

PipelineDeployStackAction
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineDeployStackAction(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AppDelivery;

      .. code-tab:: java

         import software.amazon.awscdk.appdelivery.PipelineDeployStackAction;

      .. code-tab:: javascript

         const { PipelineDeployStackAction } = require('@aws-cdk/app-delivery');

      .. code-tab:: typescript

         import { PipelineDeployStackAction } from '@aws-cdk/app-delivery';



   A CodePipeline action to deploy a stack that is part of a CDK App. This

   action takes care of preparing and executing a CloudFormation ChangeSet.

   

   It currently does *not* support stacks that make use of ``Asset``s, and

   requires the deployed stack is in the same account and region where the

   CodePipeline is hosted.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/app-delivery.PipelineDeployStackActionProps`\ 

   .. py:method:: addToRolePolicy(statement)

      Add policy statements to the role deploying the stack.

      

      This role is passed to CloudFormation and must have the IAM permissions

      necessary to deploy the stack or you can grant this role `adminPermissions`

      by using that option during creation. If you do not grant

      `adminPermissions` you need to identify the proper statements to add to

      this role based on the CloudFormation Resources in your stack.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :rtype: string[]


   .. py:attribute:: role

      The role used by CloudFormation for the deploy action



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.

      

      Note that if the original ID of the construct you are looking for contained

      a '/', then it would have been replaced by '--'.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined

      

      Note that if the original ID of the construct you are looking for contained

      a '/', then it would have been replaced by '--'.



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


PipelineDeployStackActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineDeployStackActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AppDelivery;

      .. code-tab:: java

         import software.amazon.awscdk.appdelivery.PipelineDeployStackActionProps;

      .. code-tab:: javascript

         // PipelineDeployStackActionProps is an interface

      .. code-tab:: typescript

         import { PipelineDeployStackActionProps } from '@aws-cdk/app-delivery';





   .. py:attribute:: adminPermissions

      Whether to grant admin permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have admin (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean


   .. py:attribute:: inputArtifact

      The CodePipeline artifact that holds the synthesized app, which is the

      contents of the ``<directory>`` when running ``cdk synth -o <directory>``.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:attribute:: stack

      The CDK stack to be deployed.



      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


   .. py:attribute:: stage

      The CodePipeline stage in which to perform the deployment.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\ 


   .. py:attribute:: capabilities

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify AnonymousIAM if your

      stack template contains AWS Identity and Access Management (IAM) resources. For more

      information



      :type: :py:class:`@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)*
      :default: AnonymousIAM, unless `adminPermissions` is true


   .. py:attribute:: changeSetName

      The name to use when creating a ChangeSet for the stack.



      :type: string *(optional)*
      :default: CDK-CodePipeline-ChangeSet


   .. py:attribute:: createChangeSetRunOrder

      The runOrder for the CodePipeline action creating the ChangeSet.



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: executeChangeSetRunOrder

      The runOrder for the CodePipeline action executing the ChangeSet.



      :type: number *(optional)*
      :default: ``createChangeSetRunOrder + 1``


   .. py:attribute:: role

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      admin permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*
      :default: A fresh role with admin or no permissions (depending on the value of `adminPermissions`).


