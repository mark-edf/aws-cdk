.. @jsii-pacmak:meta@ {"fingerprint":"9UJMB3u+6l4COI5qjAoq7YdQF5kwET3TMIXi1A/JysU="}

@aws-cdk/aws-s3-deployment
==========================

.. mdinclude:: ./__aws-cdk_aws-s3-deployment.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.S3.Deployment/0.21.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.S3.Deployment" Version="0.21.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.S3.Deployment --version 0.21.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.S3.Deployment" version="0.21.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/s3-deployment/0.21.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:s3-deployment:jar:0.21.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="s3-deployment" rev="0.21.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>s3-deployment</artifactId>
           <version>0.21.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:s3-deployment:0.21.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='s3-deployment', version='0.21.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-s3-deployment/v/0.21.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-s3-deployment@0.21.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-s3-deployment": "^0.21.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-s3-deployment@0.21.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-s3-deployment/v/0.21.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-s3-deployment@0.21.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-s3-deployment": "^0.21.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-s3-deployment@0.21.0



.. py:module:: @aws-cdk/aws-s3-deployment

BucketDeployment
^^^^^^^^^^^^^^^^

.. py:class:: BucketDeployment(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.S3.Deployment;

      .. code-tab:: java

         import software.amazon.awscdk.services.s3.deployment.BucketDeployment;

      .. code-tab:: javascript

         const { BucketDeployment } = require('@aws-cdk/aws-s3-deployment');

      .. code-tab:: typescript

         import { BucketDeployment } from '@aws-cdk/aws-s3-deployment';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-s3-deployment.BucketDeploymentProps`\ 

   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.

      

      Note that if the original ID of the construct you are looking for contained

      a '/', then it would have been replaced by '--'.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined

      

      Note that if the original ID of the construct you are looking for contained

      a '/', then it would have been replaced by '--'.



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


BucketDeploymentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BucketDeploymentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.S3.Deployment;

      .. code-tab:: java

         import software.amazon.awscdk.services.s3.deployment.BucketDeploymentProps;

      .. code-tab:: javascript

         // BucketDeploymentProps is an interface

      .. code-tab:: typescript

         import { BucketDeploymentProps } from '@aws-cdk/aws-s3-deployment';





   .. py:attribute:: destinationBucket

      The S3 bucket to sync the contents of the zip file to.



      :type: :py:class:`@aws-cdk/aws-s3.BucketRef`\ 


   .. py:attribute:: source

      The source from which to deploy the contents of this bucket.



      :type: :py:class:`~@aws-cdk/aws-s3-deployment.ISource`\ 


   .. py:attribute:: destinationKeyPrefix

      Key prefix in the destination bucket.



      :type: string *(optional)*
      :default: "/" (unzip to root of the destination bucket)


   .. py:attribute:: retainOnDelete

      If this is set to "false", the destination files will be deleted when the

      resource is deleted or the destination is updated.

      

      NOTICE: if this is set to "false" and destination bucket/prefix is updated,

      all files in the previous destination will first be deleted and then

      uploaded to the new destination location. This could have availablity

      implications on your users.



      :type: boolean *(optional)*
      :default: true - when resource is deleted/updated, files are retained


ISource (interface)
^^^^^^^^^^^^^^^^^^^

.. py:class:: ISource

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.S3.Deployment;

      .. code-tab:: java

         import software.amazon.awscdk.services.s3.deployment.ISource;

      .. code-tab:: javascript

         // ISource is an interface

      .. code-tab:: typescript

         import { ISource } from '@aws-cdk/aws-s3-deployment';



   Represents a source for bucket deployments.





   .. py:method:: bind(context) -> @aws-cdk/aws-s3-deployment.SourceProps

      Binds the source to a bucket deployment.



      :param context: The construct tree context.
      :type context: :py:class:`@aws-cdk/cdk.Construct`\ 
      :rtype: :py:class:`~@aws-cdk/aws-s3-deployment.SourceProps`\ 
      :abstract: Yes


Source
^^^^^^

.. py:class:: Source

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.S3.Deployment;

      .. code-tab:: java

         import software.amazon.awscdk.services.s3.deployment.Source;

      .. code-tab:: javascript

         const { Source } = require('@aws-cdk/aws-s3-deployment');

      .. code-tab:: typescript

         import { Source } from '@aws-cdk/aws-s3-deployment';



   Specifies bucket deployment source.

   

   Usage:

   

        Source.bucket(bucket, key)

        Source.asset('/local/path/to/directory')

        Source.asset('/local/path/to/a/file.zip')




   .. py:staticmethod:: asset(path) -> @aws-cdk/aws-s3-deployment.ISource

      Uses a local asset as the deployment source.



      :param path: The path to a local .zip file or a directory
      :type path: string
      :rtype: :py:class:`~@aws-cdk/aws-s3-deployment.ISource`\ 


   .. py:staticmethod:: bucket(bucket, zipObjectKey) -> @aws-cdk/aws-s3-deployment.ISource

      Uses a .zip file stored in an S3 bucket as the source for the destination bucket contents.



      :param bucket: The S3 Bucket
      :type bucket: :py:class:`@aws-cdk/aws-s3.BucketRef`\ 
      :param zipObjectKey: The S3 object key of the zip file with contents
      :type zipObjectKey: string
      :rtype: :py:class:`~@aws-cdk/aws-s3-deployment.ISource`\ 


SourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.S3.Deployment;

      .. code-tab:: java

         import software.amazon.awscdk.services.s3.deployment.SourceProps;

      .. code-tab:: javascript

         // SourceProps is an interface

      .. code-tab:: typescript

         import { SourceProps } from '@aws-cdk/aws-s3-deployment';





   .. py:attribute:: bucket

      The source bucket to deploy from.



      :type: :py:class:`@aws-cdk/aws-s3.BucketRef`\ 


   .. py:attribute:: zipObjectKey

      An S3 object key in the source bucket that points to a zip file.



      :type: string


