.. @jsii-pacmak:meta@ {"fingerprint":"h0Gih/ccISOfokG8VOh8dXm5nwTmiOlmSo4Fq0HQhVg="}

@aws-cdk/aws-ecs
================

.. mdinclude:: ./__aws-cdk_aws-ecs.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.ECS/0.17.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.ECS" Version="0.17.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.ECS --version 0.17.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.ECS" version="0.17.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/ecs/0.17.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:ecs:jar:0.17.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="ecs" rev="0.17.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>ecs</artifactId>
           <version>0.17.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:ecs:0.17.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='ecs', version='0.17.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-ecs/v/0.17.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-ecs@0.17.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-ecs": "^0.17.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-ecs@0.17.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-ecs/v/0.17.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-ecs@0.17.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-ecs": "^0.17.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-ecs@0.17.0



.. py:module:: @aws-cdk/aws-ecs

AddAutoScalingGroupCapacityOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AddAutoScalingGroupCapacityOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.AddAutoScalingGroupCapacityOptions;

      .. code-tab:: javascript

         // AddAutoScalingGroupCapacityOptions is an interface

      .. code-tab:: typescript

         import { AddAutoScalingGroupCapacityOptions } from '@aws-cdk/aws-ecs';



   Properties for adding an autoScalingGroup





   .. py:attribute:: containersAccessInstanceRole

      Whether or not the containers can access the instance role



      :type: boolean *(optional)*
      :default: false


AddDefaultAutoScalingGroupOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AddDefaultAutoScalingGroupOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.AddDefaultAutoScalingGroupOptions;

      .. code-tab:: javascript

         // AddDefaultAutoScalingGroupOptions is an interface

      .. code-tab:: typescript

         import { AddDefaultAutoScalingGroupOptions } from '@aws-cdk/aws-ecs';



   Properties for adding autoScalingGroup





   .. py:attribute:: instanceType

      The type of EC2 instance to launch into your Autoscaling Group



      :type: :py:class:`@aws-cdk/aws-ec2.InstanceType`\ 


   .. py:attribute:: instanceCount

      Number of container instances registered in your ECS Cluster



      :type: number *(optional)*
      :default: 1


AssetImage
^^^^^^^^^^

.. py:class:: AssetImage(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.AssetImage;

      .. code-tab:: javascript

         const { AssetImage } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { AssetImage } from '@aws-cdk/aws-ecs';



   An image that will be built at synthesis time



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-ecs.IContainerImage`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.AssetImageProps`\ 

   .. py:method:: bind(containerDefinition)

      *Implements* :py:meth:`@aws-cdk/aws-ecs.IContainerImage.bind`

      Called when the image is used by a ContainerDefinition



      :param containerDefinition: 
      :type containerDefinition: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 


   .. py:attribute:: imageName

      *Implements* :py:meth:`@aws-cdk/aws-ecs.IContainerImage.imageName`

      Full name of this image



      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


AssetImageProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AssetImageProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.AssetImageProps;

      .. code-tab:: javascript

         // AssetImageProps is an interface

      .. code-tab:: typescript

         import { AssetImageProps } from '@aws-cdk/aws-ecs';





   .. py:attribute:: directory

      The directory where the Dockerfile is stored



      :type: string


AwsLogDriver
^^^^^^^^^^^^

.. py:class:: AwsLogDriver(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.AwsLogDriver;

      .. code-tab:: javascript

         const { AwsLogDriver } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { AwsLogDriver } from '@aws-cdk/aws-ecs';



   A log driver that will log to an AWS Log Group



   :extends: :py:class:`~@aws-cdk/aws-ecs.LogDriver`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.AwsLogDriverProps`\ 

   .. py:method:: renderLogDriver() -> @aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LogConfigurationProperty

      *Implements* :py:meth:`@aws-cdk/aws-ecs.LogDriver.renderLogDriver`

      Return the log driver CloudFormation JSON



      :rtype: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LogConfigurationProperty`\ 


   .. py:attribute:: logGroup

      The log group that the logs will be sent to



      :type: :py:class:`@aws-cdk/aws-logs.LogGroupRef`\  *(readonly)*


   .. py:attribute:: props

      :type: :py:class:`~@aws-cdk/aws-ecs.AwsLogDriverProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


AwsLogDriverProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AwsLogDriverProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.AwsLogDriverProps;

      .. code-tab:: javascript

         // AwsLogDriverProps is an interface

      .. code-tab:: typescript

         import { AwsLogDriverProps } from '@aws-cdk/aws-ecs';



   Properties for defining a new AWS Log Driver





   .. py:attribute:: streamPrefix

      Prefix for the log streams

      

      The awslogs-stream-prefix option allows you to associate a log stream

      with the specified prefix, the container name, and the ID of the Amazon

      ECS task to which the container belongs. If you specify a prefix with

      this option, then the log stream takes the following format:

      

           prefix-name/container-name/ecs-task-id



      :type: string


   .. py:attribute:: datetimeFormat

      This option defines a multiline start pattern in Python strftime format.

      

      A log message consists of a line that matches the pattern and any

      following lines that don’t match the pattern. Thus the matched line is

      the delimiter between log messages.



      :type: string *(optional)*


   .. py:attribute:: logGroup

      The log group to log to



      :type: :py:class:`@aws-cdk/aws-logs.LogGroupRef`\  *(optional)*
      :default: A log group is automatically created


   .. py:attribute:: multilinePattern

      This option defines a multiline start pattern using a regular expression.

      

      A log message consists of a line that matches the pattern and any

      following lines that don’t match the pattern. Thus the matched line is

      the delimiter between log messages.



      :type: string *(optional)*


BaseService
^^^^^^^^^^^

.. py:class:: BaseService(parent, name, props, additionalProps, clusterName, taskDefinition)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.BaseService;

      .. code-tab:: javascript

         const { BaseService } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { BaseService } from '@aws-cdk/aws-ecs';



   Base class for Ecs and Fargate services



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget`\ 
   :implements: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :abstract: Yes
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.BaseServiceProps`\ 
   :param additionalProps: 
   :type additionalProps: any
   :param clusterName: 
   :type clusterName: string
   :param taskDefinition: 
   :type taskDefinition: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\ 

   .. py:method:: attachToApplicationTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget.attachToApplicationTargetGroup`

      Called when the service is attached to an ALB

      

      Don't call this function directly. Instead, call listener.addTarget()

      to add this service to a load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: attachToNetworkTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget.attachToNetworkTargetGroup`

      Called when the service is attached to an NLB

      

      Don't call this function directly. Instead, call listener.addTarget()

      to add this service to a load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: autoScaleTaskCount(props) -> @aws-cdk/aws-ecs.ScalableTaskCount

      Enable autoscaling for the number of tasks in this service



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.EnableScalingProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.ScalableTaskCount`\ 


   .. py:method:: configureAwsVpcNetworking(vpc, [assignPublicIp, [vpcPlacement, [securityGroup]]])

      Set up AWSVPC networking for this construct



      *Protected method*

      :param vpc: 
      :type vpc: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 
      :param assignPublicIp: 
      :type assignPublicIp: boolean *(optional)*
      :param vpcPlacement: 
      :type vpcPlacement: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :param securityGroup: 
      :type securityGroup: :py:class:`@aws-cdk/aws-ec2.SecurityGroupRef`\  *(optional)*


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      Return the given named metric for this Service



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:attribute:: clusterName

      Name of this service's cluster



      :type: string *(readonly)*


   .. py:attribute:: connections

      Manage allowed network traffic for this service



      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      CloudFormation resources generated by this service



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: serviceArn

      ARN of this service



      :type: string *(readonly)*


   .. py:attribute:: serviceName

      Name of this service



      :type: string *(readonly)*


   .. py:attribute:: taskDefinition

      Task definition this service is associated with



      :type: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\  *(readonly)*


   .. py:attribute:: loadBalancers

      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.LoadBalancerProperty`\ []


   .. py:attribute:: networkConfiguration

      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.NetworkConfigurationProperty`\  *(optional)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


BaseServiceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BaseServiceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.BaseServiceProps;

      .. code-tab:: javascript

         // BaseServiceProps is an interface

      .. code-tab:: typescript

         import { BaseServiceProps } from '@aws-cdk/aws-ecs';



   Basic service properties





   .. py:attribute:: desiredCount

      Number of desired copies of running tasks



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: healthCheckGracePeriodSeconds

      Time after startup to ignore unhealthy load balancer checks.



      :type: number *(optional)*
      :default: ??? FIXME


   .. py:attribute:: maximumPercent

      The maximum number of tasks, specified as a percentage of the Amazon ECS

      service's DesiredCount value, that can run in a service during a

      deployment.



      :type: number *(optional)*
      :default: 200


   .. py:attribute:: minimumHealthyPercent

      The minimum number of tasks, specified as a percentage of

      the Amazon ECS service's DesiredCount value, that must

      continue to run and remain healthy during a deployment.



      :type: number *(optional)*
      :default: 50


   .. py:attribute:: serviceName

      A name for the service.



      :type: string *(optional)*
      :default: CloudFormation-generated name


BinPackResource (enum)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: BinPackResource

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.BinPackResource;

      .. code-tab:: javascript

         const { BinPackResource } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { BinPackResource } from '@aws-cdk/aws-ecs';



   Instance resource used for bin packing



   .. py:data:: Cpu

   Fill up hosts' CPU allocations first



   .. py:data:: Memory

   Fill up hosts' memory allocations first




BuiltInAttributes
^^^^^^^^^^^^^^^^^

.. py:class:: BuiltInAttributes()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.BuiltInAttributes;

      .. code-tab:: javascript

         const { BuiltInAttributes } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { BuiltInAttributes } from '@aws-cdk/aws-ecs';



   Built-in container instance attributes




   .. py:attribute:: AmiId

      The AMI ID of the instance



      :type: string *(readonly)* *(static)*


   .. py:attribute:: AvailabilityZone

      The AZ where the instance is running



      :type: string *(readonly)* *(static)*


   .. py:attribute:: InstanceId

      The Instance ID of the instance



      :type: string *(readonly)* *(static)*


   .. py:attribute:: InstanceType

      The instance type



      :type: string *(readonly)* *(static)*


   .. py:attribute:: OsType

      The OS type

      

      Either 'linux' or 'windows'.



      :type: string *(readonly)* *(static)*


Capability (enum)
^^^^^^^^^^^^^^^^^

.. py:class:: Capability

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Capability;

      .. code-tab:: javascript

         const { Capability } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { Capability } from '@aws-cdk/aws-ecs';



   A Linux capability



   .. py:data:: All

   .. py:data:: AuditControl

   .. py:data:: AuditWrite

   .. py:data:: BlockSuspend

   .. py:data:: Chown

   .. py:data:: DacOverride

   .. py:data:: DacReadSearch

   .. py:data:: Fowner

   .. py:data:: Fsetid

   .. py:data:: IpcLock

   .. py:data:: IpcOwner

   .. py:data:: Kill

   .. py:data:: Lease

   .. py:data:: LinuxImmutable

   .. py:data:: MacAdmin

   .. py:data:: MacOverride

   .. py:data:: Mknod

   .. py:data:: NetAdmin

   .. py:data:: NetBindService

   .. py:data:: NetBroadcast

   .. py:data:: NetRaw

   .. py:data:: Setfcap

   .. py:data:: Setgid

   .. py:data:: Setpcap

   .. py:data:: Setuid

   .. py:data:: SysAdmin

   .. py:data:: SysBoot

   .. py:data:: SysChroot

   .. py:data:: SysModule

   .. py:data:: SysNice

   .. py:data:: SysPacct

   .. py:data:: SysPtrace

   .. py:data:: SysRawio

   .. py:data:: SysResource

   .. py:data:: SysTime

   .. py:data:: SysTtyConfig

   .. py:data:: Syslog

   .. py:data:: WakeAlarm


Cluster
^^^^^^^

.. py:class:: Cluster(parent, name, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Cluster;

      .. code-tab:: javascript

         const { Cluster } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { Cluster } from '@aws-cdk/aws-ecs';



   A container cluster that runs on your EC2 instances



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-ecs.ICluster`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.ClusterProps`\ 

   .. py:staticmethod:: import(parent, name, props) -> @aws-cdk/aws-ecs.ICluster

      Import an existing cluster



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param name: 
      :type name: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.ImportedClusterProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.ICluster`\ 


   .. py:method:: addAutoScalingGroupCapacity(autoScalingGroup, [options])

      Add compute capacity to this ECS cluster in the form of an AutoScalingGroup



      :param autoScalingGroup: 
      :type autoScalingGroup: :py:class:`@aws-cdk/aws-autoscaling.AutoScalingGroup`\ 
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions`\  *(optional)*


   .. py:method:: addDefaultAutoScalingGroupCapacity(options)

      Add a default-configured AutoScalingGroup running the ECS-optimized AMI to this Cluster



      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-ecs.AddDefaultAutoScalingGroupOptions`\ 


   .. py:method:: export() -> @aws-cdk/aws-ecs.ImportedClusterProps

      Export the Cluster



      :rtype: :py:class:`~@aws-cdk/aws-ecs.ImportedClusterProps`\ 


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      Return the given named metric for this Cluster



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricCpuReservation([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for cluster CPU reservation



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricMemoryReservation([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for cluster Memory reservation



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:attribute:: clusterArn

      The ARN of this cluster



      :type: string *(readonly)*


   .. py:attribute:: clusterName

      *Implements* :py:meth:`@aws-cdk/aws-ecs.ICluster.clusterName`

      The name of this cluster



      :type: string *(readonly)*


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ecs.ICluster.connections`

      Connections manager for the EC2 cluster



      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: hasEc2Capacity

      *Implements* :py:meth:`@aws-cdk/aws-ecs.ICluster.hasEc2Capacity`

      Whether the cluster has EC2 capacity associated with it



      :type: boolean *(readonly)*


   .. py:attribute:: vpc

      *Implements* :py:meth:`@aws-cdk/aws-ecs.ICluster.vpc`

      The VPC this cluster was created in.



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ClusterProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ClusterProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ClusterProps;

      .. code-tab:: javascript

         // ClusterProps is an interface

      .. code-tab:: typescript

         import { ClusterProps } from '@aws-cdk/aws-ecs';



   Properties to define an ECS cluster





   .. py:attribute:: vpc

      The VPC where your ECS instances will be running or your ENIs will be deployed



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 


   .. py:attribute:: clusterName

      A name for the cluster.



      :type: string *(optional)*
      :default: CloudFormation-generated name


CommonTaskDefinitionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CommonTaskDefinitionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.CommonTaskDefinitionProps;

      .. code-tab:: javascript

         // CommonTaskDefinitionProps is an interface

      .. code-tab:: typescript

         import { CommonTaskDefinitionProps } from '@aws-cdk/aws-ecs';



   Properties common to all Task definitions





   .. py:attribute:: executionRole

      The IAM role assumed by the ECS agent.

      

      The role will be used to retrieve container images from ECR and

      create CloudWatch log groups.



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: An execution role will be automatically created if you use ECR images in your task definition


   .. py:attribute:: family

      Namespace for task definition versions



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: taskRole

      The IAM role assumable by your application code running inside the container



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: A task role is automatically created for you


   .. py:attribute:: volumes

      See: https://docs.aws.amazon.com/AmazonECS/latest/developerguide//task_definition_parameters.html#volumes



      :type: :py:class:`~@aws-cdk/aws-ecs.Volume`\ [] *(optional)*


Compatibility (enum)
^^^^^^^^^^^^^^^^^^^^

.. py:class:: Compatibility

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Compatibility;

      .. code-tab:: javascript

         const { Compatibility } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { Compatibility } from '@aws-cdk/aws-ecs';



   Task compatibility



   .. py:data:: Ec2

   Task should be launchable on EC2 clusters



   .. py:data:: Fargate

   Task should be launchable on Fargate clusters



   .. py:data:: Ec2AndFargate

   Task should be launchable on both types of clusters




ContainerDefinition
^^^^^^^^^^^^^^^^^^^

.. py:class:: ContainerDefinition(parent, id, taskDefinition, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ContainerDefinition;

      .. code-tab:: javascript

         const { ContainerDefinition } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { ContainerDefinition } from '@aws-cdk/aws-ecs';



   A definition for a single container in a Task



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param taskDefinition: 
   :type taskDefinition: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinitionProps`\ 

   .. py:method:: addLink(container, [alias])

      Add a link from this container to a different container

      The link parameter allows containers to communicate with each other without the need for port mappings.

      Only supported if the network mode of a task definition is set to bridge.

      Warning: The --link flag is a legacy feature of Docker. It may eventually be removed.



      :param container: 
      :type container: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 
      :param alias: 
      :type alias: string *(optional)*


   .. py:method:: addMountPoints(*mountPoints)

      Add one or more mount points to this container.



      :param \*mountPoints: 
      :type \*mountPoints: :py:class:`~@aws-cdk/aws-ecs.MountPoint`\ 


   .. py:method:: addPortMappings(*portMappings)

      Add one or more port mappings to this container



      :param \*portMappings: 
      :type \*portMappings: :py:class:`~@aws-cdk/aws-ecs.PortMapping`\ 


   .. py:method:: addScratch(scratch)

      Mount temporary disc space to a container.

      This adds the correct container mountPoint and task definition volume.



      :param scratch: 
      :type scratch: :py:class:`~@aws-cdk/aws-ecs.ScratchSpace`\ 


   .. py:method:: addToExecutionPolicy(statement)

      Add a statement to the Task Definition's Execution policy



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: addUlimits(*ulimits)

      Add one or more ulimits to this container



      :param \*ulimits: 
      :type \*ulimits: :py:class:`~@aws-cdk/aws-ecs.Ulimit`\ 


   .. py:method:: addVolumesFrom(*volumesFrom)

      Add one or more volumes to this container



      :param \*volumesFrom: 
      :type \*volumesFrom: :py:class:`~@aws-cdk/aws-ecs.VolumeFrom`\ 


   .. py:method:: renderContainerDefinition() -> @aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.ContainerDefinitionProperty

      Render this container definition to a CloudFormation object



      :rtype: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.ContainerDefinitionProperty`\ 


   .. py:attribute:: containerPort

      Return the port that the container will be listening on by default



      :type: number *(readonly)*


   .. py:attribute:: essential

      Whether or not this container is essential



      :type: boolean *(readonly)*


   .. py:attribute:: ingressPort

      Ingress Port is needed to set the security group ingress for the task/service



      :type: number *(readonly)*


   .. py:attribute:: linuxParameters

      Access Linux Parameters



      :type: :py:class:`~@aws-cdk/aws-ecs.LinuxParameters`\  *(readonly)*


   .. py:attribute:: memoryLimitSpecified

      Whether there was at least one memory limit specified in this definition



      :type: boolean *(readonly)*


   .. py:attribute:: mountPoints

      The configured mount points



      :type: :py:class:`~@aws-cdk/aws-ecs.MountPoint`\ [] *(readonly)*


   .. py:attribute:: portMappings

      The configured port mappings



      :type: :py:class:`~@aws-cdk/aws-ecs.PortMapping`\ [] *(readonly)*


   .. py:attribute:: props

      :type: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinitionProps`\  *(readonly)*


   .. py:attribute:: taskDefinition

      The task definition this container definition is part of



      :type: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\  *(readonly)*


   .. py:attribute:: ulimits

      The configured ulimits



      :type: :py:class:`~@aws-cdk/aws-ecs.Ulimit`\ [] *(readonly)*


   .. py:attribute:: volumesFrom

      The configured volumes



      :type: :py:class:`~@aws-cdk/aws-ecs.VolumeFrom`\ [] *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ContainerDefinitionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ContainerDefinitionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ContainerDefinitionProps;

      .. code-tab:: javascript

         // ContainerDefinitionProps is an interface

      .. code-tab:: typescript

         import { ContainerDefinitionProps } from '@aws-cdk/aws-ecs';



   Properties of a container definition





   .. py:attribute:: image

      The image to use for a container.

      

      You can use images in the Docker Hub registry or specify other

      repositories (repository-url/image:tag).

      TODO: Update these to specify using classes of IContainerImage



      :type: :py:class:`~@aws-cdk/aws-ecs.IContainerImage`\ 


   .. py:attribute:: command

      The CMD value to pass to the container.

      

      If you provide a shell command as a single string, you have to quote command-line arguments.



      :type: string[] *(optional)*
      :default: CMD value built into container image


   .. py:attribute:: cpu

      The minimum number of CPU units to reserve for the container.



      :type: number *(optional)*


   .. py:attribute:: disableNetworking

      Indicates whether networking is disabled within the container.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: dnsSearchDomains

      A list of DNS search domains that are provided to the container.



      :type: string[] *(optional)*
      :default: No search domains


   .. py:attribute:: dnsServers

      A list of DNS servers that Amazon ECS provides to the container.



      :type: string[] *(optional)*
      :default: Default DNS servers


   .. py:attribute:: dockerLabels

      A key-value map of labels for the container.



      :type: string => string *(optional)*
      :default: No labels


   .. py:attribute:: dockerSecurityOptions

      A list of custom labels for SELinux and AppArmor multi-level security systems.



      :type: string[] *(optional)*
      :default: No security labels


   .. py:attribute:: entryPoint

      The ENTRYPOINT value to pass to the container.



      :type: string[] *(optional)*
      :default: Entry point configured in container


   .. py:attribute:: environment

      The environment variables to pass to the container.



      :type: string => string *(optional)*
      :default: No environment variables


   .. py:attribute:: essential

      Indicates whether the task stops if this container fails.

      

      If you specify true and the container fails, all other containers in the

      task stop. If you specify false and the container fails, none of the other

      containers in the task is affected.

      

      You must have at least one essential container in a task.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: extraHosts

      A list of hostnames and IP address mappings to append to the /etc/hosts file on the container.



      :type: string => string *(optional)*
      :default: No extra hosts


   .. py:attribute:: healthCheck

      Container health check.



      :type: :py:class:`~@aws-cdk/aws-ecs.HealthCheck`\  *(optional)*
      :default: Health check configuration from container


   .. py:attribute:: hostname

      The name that Docker uses for the container hostname.



      :type: string *(optional)*
      :default: Automatic hostname


   .. py:attribute:: logging

      Configures a custom log driver for the container.



      :type: :py:class:`~@aws-cdk/aws-ecs.LogDriver`\  *(optional)*


   .. py:attribute:: memoryLimitMiB

      The hard limit (in MiB) of memory to present to the container.

      

      If your container attempts to exceed the allocated memory, the container

      is terminated.

      

      At least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.



      :type: number *(optional)*


   .. py:attribute:: memoryReservationMiB

      The soft limit (in MiB) of memory to reserve for the container.

      

      When system memory is under contention, Docker attempts to keep the

      container memory within the limit. If the container requires more memory,

      it can consume up to the value specified by the Memory property or all of

      the available memory on the container instance—whichever comes first.

      

      At least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.



      :type: number *(optional)*


   .. py:attribute:: privileged

      Indicates whether the container is given full access to the host container instance.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: readonlyRootFilesystem

      Indicates whether the container's root file system is mounted as read only.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: user

      The user name to use inside the container.



      :type: string *(optional)*
      :default: root


   .. py:attribute:: workingDirectory

      The working directory in the container to run commands in.



      :type: string *(optional)*
      :default: /


ContainerImage
^^^^^^^^^^^^^^

.. py:class:: ContainerImage()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ContainerImage;

      .. code-tab:: javascript

         const { ContainerImage } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { ContainerImage } from '@aws-cdk/aws-ecs';



   Constructs for types of container images




   .. py:staticmethod:: fromAsset(parent, id, props) -> @aws-cdk/aws-ecs.AssetImage

      Reference an image that's constructed directly from sources on disk



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.AssetImageProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.AssetImage`\ 


   .. py:staticmethod:: fromDockerHub(name) -> @aws-cdk/aws-ecs.DockerHubImage

      Reference an image on DockerHub



      :param name: 
      :type name: string
      :rtype: :py:class:`~@aws-cdk/aws-ecs.DockerHubImage`\ 


   .. py:staticmethod:: fromEcrRepository(repository, [tag]) -> @aws-cdk/aws-ecs.EcrImage

      Reference an image in an ECR repository



      :param repository: 
      :type repository: :py:class:`@aws-cdk/aws-ecr.RepositoryRef`\ 
      :param tag: 
      :type tag: string *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-ecs.EcrImage`\ 


CpuUtilizationScalingProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CpuUtilizationScalingProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.CpuUtilizationScalingProps;

      .. code-tab:: javascript

         // CpuUtilizationScalingProps is an interface

      .. code-tab:: typescript

         import { CpuUtilizationScalingProps } from '@aws-cdk/aws-ecs';



   Properties for enabling scaling based on CPU utilization



   :extends: :py:class:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps`\ 


   .. py:attribute:: targetUtilizationPercent

      Target average CPU utilization across the task



      :type: number


   .. py:attribute:: disableScaleIn

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.disableScaleIn>`

      Indicates whether scale in by the target tracking policy is disabled.

      

      If the value is true, scale in is disabled and the target tracking policy

      won't remove capacity from the scalable resource. Otherwise, scale in is

      enabled and the target tracking policy can remove capacity from the

      scalable resource.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: policyName

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.policyName>`

      A name for the scaling policy



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: scaleInCooldownSec

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.scaleInCooldownSec>`

      Period after a scale in activity completes before another scale in activity can start.



      :type: number *(optional)*
      :default: No scale in cooldown


   .. py:attribute:: scaleOutCooldownSec

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.scaleOutCooldownSec>`

      Period after a scale out activity completes before another scale out activity can start.



      :type: number *(optional)*
      :default: No scale out cooldown


Device (interface)
^^^^^^^^^^^^^^^^^^

.. py:class:: Device

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Device;

      .. code-tab:: javascript

         // Device is an interface

      .. code-tab:: typescript

         import { Device } from '@aws-cdk/aws-ecs';



   A host device





   .. py:attribute:: hostPath

      Path on the host



      :type: string


   .. py:attribute:: containerPath

      Path in the container



      :type: string *(optional)*
      :default: Same path as the host


   .. py:attribute:: permissions

      Permissions



      :type: :py:class:`~@aws-cdk/aws-ecs.DevicePermission`\ [] *(optional)*
      :default: Readonly


DevicePermission (enum)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: DevicePermission

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.DevicePermission;

      .. code-tab:: javascript

         const { DevicePermission } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { DevicePermission } from '@aws-cdk/aws-ecs';



   Permissions for device access



   .. py:data:: Read

   Read



   .. py:data:: Write

   Write



   .. py:data:: Mknod

   Make a node




DockerHubImage
^^^^^^^^^^^^^^

.. py:class:: DockerHubImage(imageName)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.DockerHubImage;

      .. code-tab:: javascript

         const { DockerHubImage } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { DockerHubImage } from '@aws-cdk/aws-ecs';



   A DockerHub image



   :implements: :py:class:`~@aws-cdk/aws-ecs.IContainerImage`\ 
   :param imageName: 
   :type imageName: string

   .. py:method:: bind(_containerDefinition)

      *Implements* :py:meth:`@aws-cdk/aws-ecs.IContainerImage.bind`

      Called when the image is used by a ContainerDefinition



      :param _containerDefinition: 
      :type _containerDefinition: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 


   .. py:attribute:: imageName

      *Implements* :py:meth:`@aws-cdk/aws-ecs.IContainerImage.imageName`

      :type: string *(readonly)*


Ec2Service
^^^^^^^^^^

.. py:class:: Ec2Service(parent, name, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Ec2Service;

      .. code-tab:: javascript

         const { Ec2Service } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { Ec2Service } from '@aws-cdk/aws-ecs';



   Start a service on an ECS cluster



   :extends: :py:class:`~@aws-cdk/aws-ecs.BaseService`\ 
   :implements: :py:class:`@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.Ec2ServiceProps`\ 

   .. py:method:: attachToClassicLB(loadBalancer)

      *Implements* :py:meth:`@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget.attachToClassicLB`

      Register this service as the target of a Classic Load Balancer

      

      Don't call this. Call `loadBalancer.addTarget()` instead.



      :param loadBalancer: 
      :type loadBalancer: :py:class:`@aws-cdk/aws-elasticloadbalancing.LoadBalancer`\ 


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      *Overrides* :py:meth:`@aws-cdk/aws-ecs.BaseService.metric`

      Return the given named metric for this Service



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricCpuUtilization([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for cluster CPU utilization



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: metricMemoryUtilization([props]) -> @aws-cdk/aws-cloudwatch.Metric

      Metric for cluster Memory utilization



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:method:: placeOnMemberOf(*expressions)

      Place services only on instances matching the given query expression

      

      You can specify multiple expressions in one call. The tasks will only

      be placed on instances matching all expressions.



      :param \*expressions: 
      :type \*expressions: string


   .. py:method:: placePackedBy(resource)

      Try to place tasks on instances with the least amount of indicated resource available

      

      This ensures the total consumption of this resource is lowest.



      :param resource: 
      :type resource: :py:class:`~@aws-cdk/aws-ecs.BinPackResource`\ 


   .. py:method:: placeRandomly()

      Place tasks randomly across the available instances.





   .. py:method:: placeSpreadAcross(*fields)

      Try to place tasks spread across instance attributes.

      

      You can use one of the built-in attributes found on `BuiltInAttributes`

      or supply your own custom instance attributes. If more than one attribute

      is supplied, spreading is done in order.



      :param \*fields: 
      :type \*fields: string


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      Validate this Ec2Service



      :rtype: string[]


   .. py:attribute:: clusterName

      *Overrides* :py:attr:`@aws-cdk/aws-ecs.BaseService.clusterName`

      Name of the cluster



      :type: string *(readonly)*


   .. py:method:: attachToApplicationTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.attachToApplicationTargetGroup>`

      Called when the service is attached to an ALB

      

      Don't call this function directly. Instead, call listener.addTarget()

      to add this service to a load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: attachToNetworkTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.attachToNetworkTargetGroup>`

      Called when the service is attached to an NLB

      

      Don't call this function directly. Instead, call listener.addTarget()

      to add this service to a load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: autoScaleTaskCount(props) -> @aws-cdk/aws-ecs.ScalableTaskCount

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.autoScaleTaskCount>`

      Enable autoscaling for the number of tasks in this service



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.EnableScalingProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.ScalableTaskCount`\ 


   .. py:method:: configureAwsVpcNetworking(vpc, [assignPublicIp, [vpcPlacement, [securityGroup]]])

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.configureAwsVpcNetworking>`

      Set up AWSVPC networking for this construct



      *Protected method*

      :param vpc: 
      :type vpc: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 
      :param assignPublicIp: 
      :type assignPublicIp: boolean *(optional)*
      :param vpcPlacement: 
      :type vpcPlacement: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :param securityGroup: 
      :type securityGroup: :py:class:`@aws-cdk/aws-ec2.SecurityGroupRef`\  *(optional)*


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.connections>`

      Manage allowed network traffic for this service



      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.dependencyElements>`

      CloudFormation resources generated by this service



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: serviceArn

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.serviceArn>`

      ARN of this service



      :type: string *(readonly)*


   .. py:attribute:: serviceName

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.serviceName>`

      Name of this service



      :type: string *(readonly)*


   .. py:attribute:: taskDefinition

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.taskDefinition>`

      Task definition this service is associated with



      :type: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\  *(readonly)*


   .. py:attribute:: loadBalancers

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.loadBalancers>`

      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.LoadBalancerProperty`\ []


   .. py:attribute:: networkConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.networkConfiguration>`

      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.NetworkConfigurationProperty`\  *(optional)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


Ec2ServiceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: Ec2ServiceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Ec2ServiceProps;

      .. code-tab:: javascript

         // Ec2ServiceProps is an interface

      .. code-tab:: typescript

         import { Ec2ServiceProps } from '@aws-cdk/aws-ecs';



   Properties to define an ECS service



   :extends: :py:class:`~@aws-cdk/aws-ecs.BaseServiceProps`\ 


   .. py:attribute:: cluster

      Cluster where service will be deployed



      :type: :py:class:`~@aws-cdk/aws-ecs.ICluster`\ 


   .. py:attribute:: taskDefinition

      Task Definition used for running tasks in the service



      :type: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\ 


   .. py:attribute:: daemon

      Deploy exactly one task on each instance in your cluster.

      

      When using this strategy, do not specify a desired number of tasks or any

      task placement strategies.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: placeOnDistinctInstances

      Whether to start services on distinct instances



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: securityGroup

      Existing security group to use for the task's ENIs

      

      (Only applicable in case the TaskDefinition is configured for AwsVpc networking)



      :type: :py:class:`@aws-cdk/aws-ec2.SecurityGroupRef`\  *(optional)*
      :default: A new security group is created


   .. py:attribute:: vpcPlacement

      In what subnets to place the task's ENIs

      

      (Only applicable in case the TaskDefinition is configured for AwsVpc networking)



      :type: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :default: Private subnets


   .. py:attribute:: desiredCount

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.desiredCount>`

      Number of desired copies of running tasks



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: healthCheckGracePeriodSeconds

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.healthCheckGracePeriodSeconds>`

      Time after startup to ignore unhealthy load balancer checks.



      :type: number *(optional)*
      :default: ??? FIXME


   .. py:attribute:: maximumPercent

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.maximumPercent>`

      The maximum number of tasks, specified as a percentage of the Amazon ECS

      service's DesiredCount value, that can run in a service during a

      deployment.



      :type: number *(optional)*
      :default: 200


   .. py:attribute:: minimumHealthyPercent

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.minimumHealthyPercent>`

      The minimum number of tasks, specified as a percentage of

      the Amazon ECS service's DesiredCount value, that must

      continue to run and remain healthy during a deployment.



      :type: number *(optional)*
      :default: 50


   .. py:attribute:: serviceName

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.serviceName>`

      A name for the service.



      :type: string *(optional)*
      :default: CloudFormation-generated name


Ec2TaskDefinition
^^^^^^^^^^^^^^^^^

.. py:class:: Ec2TaskDefinition(parent, name, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Ec2TaskDefinition;

      .. code-tab:: javascript

         const { Ec2TaskDefinition } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { Ec2TaskDefinition } from '@aws-cdk/aws-ecs';



   Define Tasks to run on an ECS cluster



   :extends: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.Ec2TaskDefinitionProps`\  *(optional)*

   .. py:method:: addContainer(id, props) -> @aws-cdk/aws-ecs.ContainerDefinition

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addContainer>`

      Create a new container to this task definition



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinitionProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 


   .. py:method:: addExtension(extension)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addExtension>`

      Extend this TaskDefinition with the given extension

      

      Extension can be used to apply a packaged modification to

      a task definition.



      :param extension: 
      :type extension: :py:class:`~@aws-cdk/aws-ecs.ITaskDefinitionExtension`\ 


   .. py:method:: addPlacementConstraint(constraint)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addPlacementConstraint>`

      Constrain where tasks can be placed



      :param constraint: 
      :type constraint: :py:class:`~@aws-cdk/aws-ecs.PlacementConstraint`\ 


   .. py:method:: addToExecutionRolePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addToExecutionRolePolicy>`

      Add a policy statement to the Execution Role



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: addToTaskRolePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addToTaskRolePolicy>`

      Add a policy statement to the Task Role



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: addVolume(volume)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addVolume>`

      Add a volume to this task definition



      :param volume: 
      :type volume: :py:class:`~@aws-cdk/aws-ecs.Volume`\ 


   .. py:method:: obtainExecutionRole() -> @aws-cdk/aws-iam.IRole

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.obtainExecutionRole>`

      Create the execution role if it doesn't exist



      :rtype: :py:class:`@aws-cdk/aws-iam.IRole`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.validate>`

      Validate this task definition



      :rtype: string[]


   .. py:attribute:: containers

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.containers>`

      All containers



      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ [] *(readonly)*


   .. py:attribute:: family

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.family>`

      The family name of this task definition



      :type: string *(readonly)*


   .. py:attribute:: networkMode

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.networkMode>`

      Network mode used by this task definition



      :type: :py:class:`~@aws-cdk/aws-ecs.NetworkMode`\  *(readonly)*


   .. py:attribute:: taskDefinitionArn

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.taskDefinitionArn>`

      ARN of this task definition



      :type: string *(readonly)*


   .. py:attribute:: taskRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.taskRole>`

      Task role used by this task definition



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(readonly)*


   .. py:attribute:: compatibility

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.compatibility>`

      What launching modes this task is compatible with



      :type: :py:class:`~@aws-cdk/aws-ecs.Compatibility`\ 


   .. py:attribute:: defaultContainer

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.defaultContainer>`

      Default container for this task

      

      Load balancers will send traffic to this container. The first

      essential container that is added to this task will become the default

      container.



      :type: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\  *(optional)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


Ec2TaskDefinitionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: Ec2TaskDefinitionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Ec2TaskDefinitionProps;

      .. code-tab:: javascript

         // Ec2TaskDefinitionProps is an interface

      .. code-tab:: typescript

         import { Ec2TaskDefinitionProps } from '@aws-cdk/aws-ecs';



   Properties to define an ECS task definition



   :extends: :py:class:`~@aws-cdk/aws-ecs.CommonTaskDefinitionProps`\ 


   .. py:attribute:: networkMode

      The Docker networking mode to use for the containers in the task.

      

      On Fargate, the only supported networking mode is AwsVpc.



      :type: :py:class:`~@aws-cdk/aws-ecs.NetworkMode`\  *(optional)*
      :default: NetworkMode.Bridge for EC2 tasks, AwsVpc for Fargate tasks.


   .. py:attribute:: placementConstraints

      An array of placement constraint objects to use for the task. You can

      specify a maximum of 10 constraints per task (this limit includes

      constraints in the task definition and those specified at run time).

      

      Not supported in Fargate.



      :type: :py:class:`~@aws-cdk/aws-ecs.PlacementConstraint`\ [] *(optional)*


   .. py:attribute:: executionRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.executionRole>`

      The IAM role assumed by the ECS agent.

      

      The role will be used to retrieve container images from ECR and

      create CloudWatch log groups.



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: An execution role will be automatically created if you use ECR images in your task definition


   .. py:attribute:: family

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.family>`

      Namespace for task definition versions



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: taskRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.taskRole>`

      The IAM role assumable by your application code running inside the container



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: A task role is automatically created for you


   .. py:attribute:: volumes

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.volumes>`

      See: https://docs.aws.amazon.com/AmazonECS/latest/developerguide//task_definition_parameters.html#volumes



      :type: :py:class:`~@aws-cdk/aws-ecs.Volume`\ [] *(optional)*


EcrImage
^^^^^^^^

.. py:class:: EcrImage(repository, tag)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.EcrImage;

      .. code-tab:: javascript

         const { EcrImage } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { EcrImage } from '@aws-cdk/aws-ecs';



   An image from an ECR repository



   :implements: :py:class:`~@aws-cdk/aws-ecs.IContainerImage`\ 
   :param repository: 
   :type repository: :py:class:`@aws-cdk/aws-ecr.RepositoryRef`\ 
   :param tag: 
   :type tag: string

   .. py:method:: bind(containerDefinition)

      *Implements* :py:meth:`@aws-cdk/aws-ecs.IContainerImage.bind`

      Called when the image is used by a ContainerDefinition



      :param containerDefinition: 
      :type containerDefinition: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 


   .. py:attribute:: imageName

      *Implements* :py:meth:`@aws-cdk/aws-ecs.IContainerImage.imageName`

      Name of the image



      :type: string *(readonly)*


EcsOptimizedAmi
^^^^^^^^^^^^^^^

.. py:class:: EcsOptimizedAmi()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.EcsOptimizedAmi;

      .. code-tab:: javascript

         const { EcsOptimizedAmi } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { EcsOptimizedAmi } from '@aws-cdk/aws-ecs';



   Construct a Linux machine image from the latest ECS Optimized AMI published in SSM



   :implements: :py:class:`@aws-cdk/aws-ec2.IMachineImageSource`\ 

   .. py:method:: getImage(parent) -> @aws-cdk/aws-ec2.MachineImage

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IMachineImageSource.getImage`

      Return the correct image



      :param parent: 
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :rtype: :py:class:`@aws-cdk/aws-ec2.MachineImage`\ 


FargatePlatformVersion (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: FargatePlatformVersion

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.FargatePlatformVersion;

      .. code-tab:: javascript

         const { FargatePlatformVersion } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { FargatePlatformVersion } from '@aws-cdk/aws-ecs';



   Fargate platform version



   .. py:data:: Latest

   The latest, recommended platform version



   .. py:data:: Version1_2

   Version 1.2

   

   Supports private registries.



   .. py:data:: Version1_1

   Version 1.1.0

   

   Supports task metadata, health checks, service discovery.



   .. py:data:: Version1_0

   Initial release

   

   Based on Amazon Linux 2017.09.




FargateService
^^^^^^^^^^^^^^

.. py:class:: FargateService(parent, name, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.FargateService;

      .. code-tab:: javascript

         const { FargateService } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { FargateService } from '@aws-cdk/aws-ecs';



   Start a service on an ECS cluster



   :extends: :py:class:`~@aws-cdk/aws-ecs.BaseService`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.FargateServiceProps`\ 

   .. py:method:: attachToApplicationTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.attachToApplicationTargetGroup>`

      Called when the service is attached to an ALB

      

      Don't call this function directly. Instead, call listener.addTarget()

      to add this service to a load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: attachToNetworkTargetGroup(targetGroup) -> @aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.attachToNetworkTargetGroup>`

      Called when the service is attached to an NLB

      

      Don't call this function directly. Instead, call listener.addTarget()

      to add this service to a load balancer.



      :param targetGroup: 
      :type targetGroup: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps`\ 


   .. py:method:: autoScaleTaskCount(props) -> @aws-cdk/aws-ecs.ScalableTaskCount

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.autoScaleTaskCount>`

      Enable autoscaling for the number of tasks in this service



      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.EnableScalingProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.ScalableTaskCount`\ 


   .. py:method:: configureAwsVpcNetworking(vpc, [assignPublicIp, [vpcPlacement, [securityGroup]]])

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.configureAwsVpcNetworking>`

      Set up AWSVPC networking for this construct



      *Protected method*

      :param vpc: 
      :type vpc: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\ 
      :param assignPublicIp: 
      :type assignPublicIp: boolean *(optional)*
      :param vpcPlacement: 
      :type vpcPlacement: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :param securityGroup: 
      :type securityGroup: :py:class:`@aws-cdk/aws-ec2.SecurityGroupRef`\  *(optional)*


   .. py:method:: metric(metricName, [props]) -> @aws-cdk/aws-cloudwatch.Metric

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.metric>`

      Return the given named metric for this Service



      :param metricName: 
      :type metricName: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-cloudwatch.MetricCustomization`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:attribute:: clusterName

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.clusterName>`

      Name of this service's cluster



      :type: string *(readonly)*


   .. py:attribute:: connections

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.connections>`

      Manage allowed network traffic for this service



      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.dependencyElements>`

      CloudFormation resources generated by this service



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: serviceArn

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.serviceArn>`

      ARN of this service



      :type: string *(readonly)*


   .. py:attribute:: serviceName

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.serviceName>`

      Name of this service



      :type: string *(readonly)*


   .. py:attribute:: taskDefinition

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.taskDefinition>`

      Task definition this service is associated with



      :type: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\  *(readonly)*


   .. py:attribute:: loadBalancers

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.loadBalancers>`

      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.LoadBalancerProperty`\ []


   .. py:attribute:: networkConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseService <@aws-cdk/aws-ecs.BaseService.networkConfiguration>`

      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.NetworkConfigurationProperty`\  *(optional)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


FargateServiceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: FargateServiceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.FargateServiceProps;

      .. code-tab:: javascript

         // FargateServiceProps is an interface

      .. code-tab:: typescript

         import { FargateServiceProps } from '@aws-cdk/aws-ecs';



   Properties to define a Fargate service



   :extends: :py:class:`~@aws-cdk/aws-ecs.BaseServiceProps`\ 


   .. py:attribute:: cluster

      Cluster where service will be deployed



      :type: :py:class:`~@aws-cdk/aws-ecs.ICluster`\ 


   .. py:attribute:: taskDefinition

      Task Definition used for running tasks in the service



      :type: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\ 


   .. py:attribute:: assignPublicIp

      Assign public IP addresses to each task



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: platformVersion

      Fargate platform version to run this service on

      

      Unless you have specific compatibility requirements, you don't need to

      specify this.



      :type: :py:class:`~@aws-cdk/aws-ecs.FargatePlatformVersion`\  *(optional)*
      :default: Latest


   .. py:attribute:: securityGroup

      Existing security group to use for the tasks



      :type: :py:class:`@aws-cdk/aws-ec2.SecurityGroupRef`\  *(optional)*
      :default: A new security group is created


   .. py:attribute:: vpcPlacement

      In what subnets to place the task's ENIs



      :type: :py:class:`@aws-cdk/aws-ec2.VpcPlacementStrategy`\  *(optional)*
      :default: Private subnet if assignPublicIp, public subnets otherwise


   .. py:attribute:: desiredCount

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.desiredCount>`

      Number of desired copies of running tasks



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: healthCheckGracePeriodSeconds

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.healthCheckGracePeriodSeconds>`

      Time after startup to ignore unhealthy load balancer checks.



      :type: number *(optional)*
      :default: ??? FIXME


   .. py:attribute:: maximumPercent

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.maximumPercent>`

      The maximum number of tasks, specified as a percentage of the Amazon ECS

      service's DesiredCount value, that can run in a service during a

      deployment.



      :type: number *(optional)*
      :default: 200


   .. py:attribute:: minimumHealthyPercent

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.minimumHealthyPercent>`

      The minimum number of tasks, specified as a percentage of

      the Amazon ECS service's DesiredCount value, that must

      continue to run and remain healthy during a deployment.



      :type: number *(optional)*
      :default: 50


   .. py:attribute:: serviceName

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.BaseServiceProps <@aws-cdk/aws-ecs.BaseServiceProps.serviceName>`

      A name for the service.



      :type: string *(optional)*
      :default: CloudFormation-generated name


FargateTaskDefinition
^^^^^^^^^^^^^^^^^^^^^

.. py:class:: FargateTaskDefinition(parent, name, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.FargateTaskDefinition;

      .. code-tab:: javascript

         const { FargateTaskDefinition } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { FargateTaskDefinition } from '@aws-cdk/aws-ecs';



   A definition for Tasks on a Fargate cluster



   :extends: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.FargateTaskDefinitionProps`\  *(optional)*

   .. py:attribute:: networkMode

      *Overrides* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition.networkMode`

      The configured network mode



      :type: :py:class:`~@aws-cdk/aws-ecs.NetworkMode`\  *(readonly)*


   .. py:method:: addContainer(id, props) -> @aws-cdk/aws-ecs.ContainerDefinition

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addContainer>`

      Create a new container to this task definition



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinitionProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 


   .. py:method:: addExtension(extension)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addExtension>`

      Extend this TaskDefinition with the given extension

      

      Extension can be used to apply a packaged modification to

      a task definition.



      :param extension: 
      :type extension: :py:class:`~@aws-cdk/aws-ecs.ITaskDefinitionExtension`\ 


   .. py:method:: addPlacementConstraint(constraint)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addPlacementConstraint>`

      Constrain where tasks can be placed



      :param constraint: 
      :type constraint: :py:class:`~@aws-cdk/aws-ecs.PlacementConstraint`\ 


   .. py:method:: addToExecutionRolePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addToExecutionRolePolicy>`

      Add a policy statement to the Execution Role



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: addToTaskRolePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addToTaskRolePolicy>`

      Add a policy statement to the Task Role



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: addVolume(volume)

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.addVolume>`

      Add a volume to this task definition



      :param volume: 
      :type volume: :py:class:`~@aws-cdk/aws-ecs.Volume`\ 


   .. py:method:: obtainExecutionRole() -> @aws-cdk/aws-iam.IRole

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.obtainExecutionRole>`

      Create the execution role if it doesn't exist



      :rtype: :py:class:`@aws-cdk/aws-iam.IRole`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.validate>`

      Validate this task definition



      :rtype: string[]


   .. py:attribute:: containers

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.containers>`

      All containers



      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ [] *(readonly)*


   .. py:attribute:: family

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.family>`

      The family name of this task definition



      :type: string *(readonly)*


   .. py:attribute:: taskDefinitionArn

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.taskDefinitionArn>`

      ARN of this task definition



      :type: string *(readonly)*


   .. py:attribute:: taskRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.taskRole>`

      Task role used by this task definition



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(readonly)*


   .. py:attribute:: compatibility

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.compatibility>`

      What launching modes this task is compatible with



      :type: :py:class:`~@aws-cdk/aws-ecs.Compatibility`\ 


   .. py:attribute:: defaultContainer

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.TaskDefinition <@aws-cdk/aws-ecs.TaskDefinition.defaultContainer>`

      Default container for this task

      

      Load balancers will send traffic to this container. The first

      essential container that is added to this task will become the default

      container.



      :type: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\  *(optional)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


FargateTaskDefinitionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: FargateTaskDefinitionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.FargateTaskDefinitionProps;

      .. code-tab:: javascript

         // FargateTaskDefinitionProps is an interface

      .. code-tab:: typescript

         import { FargateTaskDefinitionProps } from '@aws-cdk/aws-ecs';



   Properties to define a Fargate Task



   :extends: :py:class:`~@aws-cdk/aws-ecs.CommonTaskDefinitionProps`\ 


   .. py:attribute:: cpu

      The number of cpu units used by the task.

      Valid values, which determines your range of valid values for the memory parameter:

      256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB

      512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB

      1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB

      2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments

      4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments



      :type: string *(optional)*
      :default: 256


   .. py:attribute:: memoryMiB

      The amount (in MiB) of memory used by the task.

      

      This field is required and you must use one of the following values, which determines your range of valid values

      for the cpu parameter:

      

      0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)

      

      1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)

      

      2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)

      

      Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)

      

      Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)



      :type: string *(optional)*
      :default: 512


   .. py:attribute:: executionRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.executionRole>`

      The IAM role assumed by the ECS agent.

      

      The role will be used to retrieve container images from ECR and

      create CloudWatch log groups.



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: An execution role will be automatically created if you use ECR images in your task definition


   .. py:attribute:: family

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.family>`

      Namespace for task definition versions



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: taskRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.taskRole>`

      The IAM role assumable by your application code running inside the container



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: A task role is automatically created for you


   .. py:attribute:: volumes

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.volumes>`

      See: https://docs.aws.amazon.com/AmazonECS/latest/developerguide//task_definition_parameters.html#volumes



      :type: :py:class:`~@aws-cdk/aws-ecs.Volume`\ [] *(optional)*


HealthCheck (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: HealthCheck

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.HealthCheck;

      .. code-tab:: javascript

         // HealthCheck is an interface

      .. code-tab:: typescript

         import { HealthCheck } from '@aws-cdk/aws-ecs';



   Container health check configuration





   .. py:attribute:: command

      Command to run, as the binary path and arguments.

      

      If you provide a shell command as a single string, you have to quote command-line arguments.



      :type: string[]


   .. py:attribute:: intervalSeconds

      Time period in seconds between each health check execution.

      

      You may specify between 5 and 300 seconds.



      :type: number *(optional)*
      :default: 30


   .. py:attribute:: retries

      Number of times to retry a failed health check before the container is considered unhealthy.

      

      You may specify between 1 and 10 retries.



      :type: number *(optional)*
      :default: 3


   .. py:attribute:: startPeriod

      Grace period after startup before failed health checks count.

      

      You may specify between 0 and 300 seconds.



      :type: number *(optional)*
      :default: No start period


   .. py:attribute:: timeout

      The time period in seconds to wait for a health check to succeed before it is considered a failure.

      

      You may specify between 2 and 60 seconds.



      :type: number *(optional)*
      :default: 5


Host (interface)
^^^^^^^^^^^^^^^^

.. py:class:: Host

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Host;

      .. code-tab:: javascript

         // Host is an interface

      .. code-tab:: typescript

         import { Host } from '@aws-cdk/aws-ecs';



   A volume host





   .. py:attribute:: sourcePath

      Source path on the host



      :type: string *(optional)*


ICluster (interface)
^^^^^^^^^^^^^^^^^^^^

.. py:class:: ICluster

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ICluster;

      .. code-tab:: javascript

         // ICluster is an interface

      .. code-tab:: typescript

         import { ICluster } from '@aws-cdk/aws-ecs';



   An ECS cluster





   .. py:attribute:: clusterName

      Name of the cluster



      :type: string *(readonly)*


   .. py:attribute:: connections

      Connections manager of the cluster instances



      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: hasEc2Capacity

      Whether the cluster has EC2 capacity associated with it



      :type: boolean *(readonly)*


   .. py:attribute:: vpc

      VPC that the cluster instances are running in



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRef`\  *(readonly)*


IContainerImage (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IContainerImage

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.IContainerImage;

      .. code-tab:: javascript

         // IContainerImage is an interface

      .. code-tab:: typescript

         import { IContainerImage } from '@aws-cdk/aws-ecs';



   A container image





   .. py:attribute:: imageName

      Name of the image



      :type: string *(readonly)*


   .. py:method:: bind(containerDefinition)

      Called when the image is used by a ContainerDefinition



      :param containerDefinition: 
      :type containerDefinition: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 
      :abstract: Yes


ITaskDefinitionExtension (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ITaskDefinitionExtension

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ITaskDefinitionExtension;

      .. code-tab:: javascript

         // ITaskDefinitionExtension is an interface

      .. code-tab:: typescript

         import { ITaskDefinitionExtension } from '@aws-cdk/aws-ecs';



   An extension for Task Definitions

   

   Classes that want to make changes to a TaskDefinition (such as

   adding helper containers) can implement this interface, and can

   then be "added" to a TaskDefinition like so:

   

       taskDefinition.addExtension(new MyExtension("some_parameter"));





   .. py:method:: extend(taskDefinition)

      Apply the extension to the given TaskDefinition



      :param taskDefinition: 
      :type taskDefinition: :py:class:`~@aws-cdk/aws-ecs.TaskDefinition`\ 
      :abstract: Yes


ImportedClusterProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ImportedClusterProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ImportedClusterProps;

      .. code-tab:: javascript

         // ImportedClusterProps is an interface

      .. code-tab:: typescript

         import { ImportedClusterProps } from '@aws-cdk/aws-ecs';



   Properties to import an ECS cluster





   .. py:attribute:: clusterName

      Name of the cluster



      :type: string


   .. py:attribute:: securityGroups

      Security group of the cluster instances



      :type: :py:class:`@aws-cdk/aws-ec2.SecurityGroupRefProps`\ []


   .. py:attribute:: vpc

      VPC that the cluster instances are running in



      :type: :py:class:`@aws-cdk/aws-ec2.VpcNetworkRefProps`\ 


   .. py:attribute:: hasEc2Capacity

      Whether the given cluster has EC2 capacity



      :type: boolean *(optional)*
      :default: true


LinuxParameters
^^^^^^^^^^^^^^^

.. py:class:: LinuxParameters()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LinuxParameters;

      .. code-tab:: javascript

         const { LinuxParameters } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { LinuxParameters } from '@aws-cdk/aws-ecs';



   Linux parameter setup in a container




   .. py:method:: addCapabilities(*cap)

      Add one or more capabilities

      

      Only works with EC2 launch type.



      :param \*cap: 
      :type \*cap: :py:class:`~@aws-cdk/aws-ecs.Capability`\ 


   .. py:method:: addDevices(*device)

      Add one or more devices



      :param \*device: 
      :type \*device: :py:class:`~@aws-cdk/aws-ecs.Device`\ 


   .. py:method:: addTmpfs(*tmpfs)

      Add one or more tmpfs mounts



      :param \*tmpfs: 
      :type \*tmpfs: :py:class:`~@aws-cdk/aws-ecs.Tmpfs`\ 


   .. py:method:: dropCapabilities(*cap)

      Drop one or more capabilities

      

      Only works with EC2 launch type.



      :param \*cap: 
      :type \*cap: :py:class:`~@aws-cdk/aws-ecs.Capability`\ 


   .. py:method:: renderLinuxParameters() -> @aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LinuxParametersProperty

      Render the Linux parameters to a CloudFormation object



      :rtype: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LinuxParametersProperty`\ 


   .. py:attribute:: initProcessEnabled

      Whether the init process is enabled



      :type: boolean *(optional)*


   .. py:attribute:: sharedMemorySize

      The shared memory size



      :type: number *(optional)*


LoadBalancedEc2Service
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancedEc2Service(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LoadBalancedEc2Service;

      .. code-tab:: javascript

         const { LoadBalancedEc2Service } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { LoadBalancedEc2Service } from '@aws-cdk/aws-ecs';



   A single task running on an ECS cluster fronted by a load balancer



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.LoadBalancedEc2ServiceProps`\ 

   .. py:attribute:: loadBalancer

      The load balancer that is fronting the ECS service



      :type: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


LoadBalancedEc2ServiceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancedEc2ServiceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LoadBalancedEc2ServiceProps;

      .. code-tab:: javascript

         // LoadBalancedEc2ServiceProps is an interface

      .. code-tab:: typescript

         import { LoadBalancedEc2ServiceProps } from '@aws-cdk/aws-ecs';



   Properties for a LoadBalancedEc2Service





   .. py:attribute:: cluster

      The cluster where your EC2 service will be deployed



      :type: :py:class:`~@aws-cdk/aws-ecs.ICluster`\ 


   .. py:attribute:: image

      The image to start.



      :type: :py:class:`~@aws-cdk/aws-ecs.IContainerImage`\ 


   .. py:attribute:: containerPort

      The container port of the application load balancer attached to your EC2 service. Corresponds to container port mapping.



      :type: number *(optional)*
      :default: 80


   .. py:attribute:: desiredCount

      Number of desired copies of running tasks



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: memoryLimitMiB

      The hard limit (in MiB) of memory to present to the container.

      

      If your container attempts to exceed the allocated memory, the container

      is terminated.

      

      At least one of memoryLimitMiB and memoryReservationMiB is required.



      :type: number *(optional)*


   .. py:attribute:: memoryReservationMiB

      The soft limit (in MiB) of memory to reserve for the container.

      

      When system memory is under contention, Docker attempts to keep the

      container memory within the limit. If the container requires more memory,

      it can consume up to the value specified by the Memory property or all of

      the available memory on the container instance—whichever comes first.

      

      At least one of memoryLimitMiB and memoryReservationMiB is required.



      :type: number *(optional)*


   .. py:attribute:: publicLoadBalancer

      Determines whether the Application Load Balancer will be internet-facing



      :type: boolean *(optional)*
      :default: true


LoadBalancedFargateService
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancedFargateService(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LoadBalancedFargateService;

      .. code-tab:: javascript

         const { LoadBalancedFargateService } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { LoadBalancedFargateService } from '@aws-cdk/aws-ecs';



   A single task running on an ECS cluster fronted by a load balancer



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.LoadBalancedFargateServiceProps`\ 

   .. py:attribute:: loadBalancer

      :type: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


LoadBalancedFargateServiceApplet
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancedFargateServiceApplet(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LoadBalancedFargateServiceApplet;

      .. code-tab:: javascript

         const { LoadBalancedFargateServiceApplet } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { LoadBalancedFargateServiceApplet } from '@aws-cdk/aws-ecs';



   An applet for a LoadBalancedFargateService



   :extends: :py:class:`@aws-cdk/cdk.Stack`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.App`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.LoadBalancedFargateServiceAppletProps`\ 

   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:method:: findResource(path) -> @aws-cdk/cdk.Resource

      *Inherited from* :py:meth:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.findResource>`

      Looks up a resource by path.



      :param path: 
      :type path: string
      :return: The Resource or undefined if not found
      :rtype: :py:class:`@aws-cdk/cdk.Resource`\  *(optional)*


   .. py:method:: parentApp() -> @aws-cdk/cdk.App

      *Inherited from* :py:meth:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.parentApp>`

      :rtype: :py:class:`@aws-cdk/cdk.App`\  *(optional)*


   .. py:method:: renameLogical(oldId, newId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.renameLogical>`

      Rename a generated logical identities



      :param oldId: 
      :type oldId: string
      :param newId: 
      :type newId: string


   .. py:method:: reportMissingContext(key, details)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.reportMissingContext>`

      Indicate that a context key was expected

      

      Contains instructions on how the key should be supplied.



      :param key: Key that uniquely identifies this missing context.
      :type key: string
      :param details: The set of parameters needed to obtain the context (specific to context provider).
      :type details: :py:class:`@aws-cdk/cx-api.MissingContext`\ 


   .. py:method:: requireAccountId([why]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.requireAccountId>`

      Returns the AWS account ID of this Stack,

      or throws an exception if the account ID is not set in the environment.



      :param why: more information about why is the account ID required
      :type why: string *(optional)*
      :return: the AWS account ID of this Stack
      :rtype: string


   .. py:method:: requireRegion([why]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.requireRegion>`

      :param why: more information about why region is required.
      :type why: string *(optional)*
      :return: The region in which this stack is deployed. Throws if region is not defined.
      :rtype: string


   .. py:method:: toCloudFormation() -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.toCloudFormation>`

      Returns the CloudFormation template for this stack by traversing

      the tree and invoking toCloudFormation() on all Entity objects.



      :rtype: any


   .. py:attribute:: env

      *Inherited from* :py:attr:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.env>`

      The environment in which this stack is deployed.



      :type: :py:class:`@aws-cdk/cdk.Environment`\  *(readonly)*


   .. py:attribute:: isStack

      *Inherited from* :py:attr:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.isStack>`

      Used to determine if this construct is a stack.



      :type: boolean *(readonly)*


   .. py:attribute:: logicalIds

      *Inherited from* :py:attr:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.logicalIds>`

      Logical ID generation strategy



      :type: :py:class:`@aws-cdk/cdk.LogicalIDs`\  *(readonly)*


   .. py:attribute:: missingContext

      *Inherited from* :py:attr:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.missingContext>`

      Lists all missing contextual information.

      This is returned when the stack is synthesized under the 'missing' attribute

      and allows tooling to obtain the context and re-synthesize.



      :type: string => :py:class:`@aws-cdk/cx-api.MissingContext`\  *(readonly)*


   .. py:attribute:: name

      *Inherited from* :py:attr:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.name>`

      The CloudFormation stack name.



      :type: string *(readonly)*


   .. py:attribute:: templateOptions

      *Inherited from* :py:attr:`@aws-cdk/cdk.Stack <@aws-cdk/cdk.Stack.templateOptions>`

      Options for CloudFormation template (like version, transform, description).



      :type: :py:class:`@aws-cdk/cdk.TemplateOptions`\  *(readonly)*


LoadBalancedFargateServiceAppletProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancedFargateServiceAppletProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LoadBalancedFargateServiceAppletProps;

      .. code-tab:: javascript

         // LoadBalancedFargateServiceAppletProps is an interface

      .. code-tab:: typescript

         import { LoadBalancedFargateServiceAppletProps } from '@aws-cdk/aws-ecs';



   Properties for a LoadBalancedEcsServiceApplet



   :extends: :py:class:`@aws-cdk/cdk.StackProps`\ 


   .. py:attribute:: image

      The image to start (from DockerHub)



      :type: string


   .. py:attribute:: containerPort

      The container port of the application load balancer attached to your Fargate service. Corresponds to container port mapping.



      :type: number *(optional)*
      :default: 80


   .. py:attribute:: cpu

      The number of cpu units used by the task.

      Valid values, which determines your range of valid values for the memory parameter:

      256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB

      512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB

      1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB

      2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments

      4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments

      

      This default is set in the underlying FargateTaskDefinition construct.



      :type: string *(optional)*
      :default: 256


   .. py:attribute:: desiredCount

      Number of desired copies of running tasks



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: memoryMiB

      The amount (in MiB) of memory used by the task.

      

      This field is required and you must use one of the following values, which determines your range of valid values

      for the cpu parameter:

      

      0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)

      

      1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)

      

      2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)

      

      Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)

      

      Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)

      

      This default is set in the underlying FargateTaskDefinition construct.



      :type: string *(optional)*
      :default: 512


   .. py:attribute:: publicLoadBalancer

      Determines whether the Application Load Balancer will be internet-facing



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: publicTasks

      Determines whether your Fargate Service will be assigned a public IP address.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: env

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackProps <@aws-cdk/cdk.StackProps.env>`

      The AWS environment (account/region) where this stack will be deployed.

      

      If not supplied, the `default-account` and `default-region` context parameters will be

      used. If they are undefined, it will not be possible to deploy the stack.



      :type: :py:class:`@aws-cdk/cdk.Environment`\  *(optional)*


   .. py:attribute:: namingScheme

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackProps <@aws-cdk/cdk.StackProps.namingScheme>`

      Strategy for logical ID generation

      

      Optional. If not supplied, the HashedNamingScheme will be used.



      :type: :py:class:`@aws-cdk/cdk.IAddressingScheme`\  *(optional)*


LoadBalancedFargateServiceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LoadBalancedFargateServiceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LoadBalancedFargateServiceProps;

      .. code-tab:: javascript

         // LoadBalancedFargateServiceProps is an interface

      .. code-tab:: typescript

         import { LoadBalancedFargateServiceProps } from '@aws-cdk/aws-ecs';



   Properties for a LoadBalancedEcsService





   .. py:attribute:: cluster

      The cluster where your Fargate service will be deployed



      :type: :py:class:`~@aws-cdk/aws-ecs.ICluster`\ 


   .. py:attribute:: image

      The image to start



      :type: :py:class:`~@aws-cdk/aws-ecs.IContainerImage`\ 


   .. py:attribute:: containerPort

      The container port of the application load balancer attached to your Fargate service. Corresponds to container port mapping.



      :type: number *(optional)*
      :default: 80


   .. py:attribute:: cpu

      The number of cpu units used by the task.

      Valid values, which determines your range of valid values for the memory parameter:

      256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB

      512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB

      1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB

      2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments

      4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments

      

      This default is set in the underlying FargateTaskDefinition construct.



      :type: string *(optional)*
      :default: 256


   .. py:attribute:: desiredCount

      Number of desired copies of running tasks



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: memoryMiB

      The amount (in MiB) of memory used by the task.

      

      This field is required and you must use one of the following values, which determines your range of valid values

      for the cpu parameter:

      

      0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)

      

      1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)

      

      2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)

      

      Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)

      

      Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)

      

      This default is set in the underlying FargateTaskDefinition construct.



      :type: string *(optional)*
      :default: 512


   .. py:attribute:: publicLoadBalancer

      Determines whether the Application Load Balancer will be internet-facing



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: publicTasks

      Determines whether your Fargate Service will be assigned a public IP address.



      :type: boolean *(optional)*
      :default: false


LogDriver
^^^^^^^^^

.. py:class:: LogDriver(parent, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.LogDriver;

      .. code-tab:: javascript

         const { LogDriver } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { LogDriver } from '@aws-cdk/aws-ecs';



   Base class for log drivers



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :abstract: Yes
   :param parent: The parent construct
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string

   .. py:method:: renderLogDriver() -> @aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LogConfigurationProperty

      Return the log driver CloudFormation JSON



      :rtype: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LogConfigurationProperty`\ 
      :abstract: Yes


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


MemoryUtilizationScalingProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MemoryUtilizationScalingProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.MemoryUtilizationScalingProps;

      .. code-tab:: javascript

         // MemoryUtilizationScalingProps is an interface

      .. code-tab:: typescript

         import { MemoryUtilizationScalingProps } from '@aws-cdk/aws-ecs';



   Properties for enabling scaling based on memory utilization



   :extends: :py:class:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps`\ 


   .. py:attribute:: targetUtilizationPercent

      Target average memory utilization across the task



      :type: number


   .. py:attribute:: disableScaleIn

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.disableScaleIn>`

      Indicates whether scale in by the target tracking policy is disabled.

      

      If the value is true, scale in is disabled and the target tracking policy

      won't remove capacity from the scalable resource. Otherwise, scale in is

      enabled and the target tracking policy can remove capacity from the

      scalable resource.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: policyName

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.policyName>`

      A name for the scaling policy



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: scaleInCooldownSec

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.scaleInCooldownSec>`

      Period after a scale in activity completes before another scale in activity can start.



      :type: number *(optional)*
      :default: No scale in cooldown


   .. py:attribute:: scaleOutCooldownSec

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.scaleOutCooldownSec>`

      Period after a scale out activity completes before another scale out activity can start.



      :type: number *(optional)*
      :default: No scale out cooldown


MountPoint (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MountPoint

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.MountPoint;

      .. code-tab:: javascript

         // MountPoint is an interface

      .. code-tab:: typescript

         import { MountPoint } from '@aws-cdk/aws-ecs';





   .. py:attribute:: containerPath

      :type: string


   .. py:attribute:: readOnly

      :type: boolean


   .. py:attribute:: sourceVolume

      :type: string


NetworkMode (enum)
^^^^^^^^^^^^^^^^^^

.. py:class:: NetworkMode

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.NetworkMode;

      .. code-tab:: javascript

         const { NetworkMode } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { NetworkMode } from '@aws-cdk/aws-ecs';



   The Docker networking mode to use for the containers in the task.



   .. py:data:: None

   The task's containers do not have external connectivity and port mappings can't be specified in the container definition.



   .. py:data:: Bridge

   The task utilizes Docker's built-in virtual network which runs inside each container instance.



   .. py:data:: AwsVpc

   The task is allocated an elastic network interface.



   .. py:data:: Host

   The task bypasses Docker's built-in virtual network and maps container ports directly to the EC2 instance's network interface directly.

   

   In this mode, you can't run multiple instantiations of the same task on a

   single container instance when port mappings are used.




PlacementConstraint (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PlacementConstraint

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.PlacementConstraint;

      .. code-tab:: javascript

         // PlacementConstraint is an interface

      .. code-tab:: typescript

         import { PlacementConstraint } from '@aws-cdk/aws-ecs';



   A constraint on how instances should be placed





   .. py:attribute:: type

      The type of constraint



      :type: :py:class:`~@aws-cdk/aws-ecs.PlacementConstraintType`\ 


   .. py:attribute:: expression

      Additional information for the constraint



      :type: string *(optional)*


PlacementConstraintType (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PlacementConstraintType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.PlacementConstraintType;

      .. code-tab:: javascript

         const { PlacementConstraintType } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { PlacementConstraintType } from '@aws-cdk/aws-ecs';



   A placement constraint type



   .. py:data:: DistinctInstance

   Place each task on a different instance



   .. py:data:: MemberOf

   Place tasks only on instances matching the expression in 'expression'




PortMapping (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PortMapping

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.PortMapping;

      .. code-tab:: javascript

         // PortMapping is an interface

      .. code-tab:: typescript

         import { PortMapping } from '@aws-cdk/aws-ecs';



   Map a host port to a container port





   .. py:attribute:: containerPort

      Port inside the container



      :type: number


   .. py:attribute:: hostPort

      Port on the host

      

      In AwsVpc or Host networking mode, leave this out or set it to the

      same value as containerPort.

      

      In Bridge networking mode, leave this out or set it to non-reserved

      non-ephemeral port.



      :type: number *(optional)*


   .. py:attribute:: protocol

      Protocol



      :type: :py:class:`~@aws-cdk/aws-ecs.Protocol`\  *(optional)*
      :default: Tcp


Protocol (enum)
^^^^^^^^^^^^^^^

.. py:class:: Protocol

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Protocol;

      .. code-tab:: javascript

         const { Protocol } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { Protocol } from '@aws-cdk/aws-ecs';



   Network protocol



   .. py:data:: Tcp

   TCP



   .. py:data:: Udp

   UDP




ScalableTaskCount
^^^^^^^^^^^^^^^^^

.. py:class:: ScalableTaskCount(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ScalableTaskCount;

      .. code-tab:: javascript

         const { ScalableTaskCount } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { ScalableTaskCount } from '@aws-cdk/aws-ecs';



   Scalable attribute representing task count



   :extends: :py:class:`@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps`\ 

   .. py:method:: scaleOnCpuUtilization(id, props)

      Scale out or in to achieve a target CPU utilization



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.CpuUtilizationScalingProps`\ 


   .. py:method:: scaleOnMemoryUtilization(id, props)

      Scale out or in to achieve a target memory utilization utilization



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.CpuUtilizationScalingProps`\ 


   .. py:method:: scaleOnMetric(id, props)

      Scale out or in based on a metric value



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps`\ 


   .. py:method:: scaleOnSchedule(id, props)

      Scale out or in based on time



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.ScalingSchedule`\ 


   .. py:method:: scaleToTrackCustomMetric(id, props)

      Scale out or in to track a custom metric



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.TrackCustomMetricProps`\ 


   .. py:method:: doScaleOnMetric(id, props)

      *Inherited from* :py:meth:`@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute <@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute.doScaleOnMetric>`

      Scale out or in based on a metric value



      *Protected method*

      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps`\ 


   .. py:method:: doScaleOnSchedule(id, props)

      *Inherited from* :py:meth:`@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute <@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute.doScaleOnSchedule>`

      Scale out or in based on time



      *Protected method*

      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.ScalingSchedule`\ 


   .. py:method:: doScaleToTrackMetric(id, props)

      *Inherited from* :py:meth:`@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute <@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute.doScaleToTrackMetric>`

      Scale out or in in order to keep a metric around a target value



      *Protected method*

      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`@aws-cdk/aws-applicationautoscaling.BasicTargetTrackingScalingPolicyProps`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute <@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute.props>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


ScratchSpace (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ScratchSpace

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.ScratchSpace;

      .. code-tab:: javascript

         // ScratchSpace is an interface

      .. code-tab:: typescript

         import { ScratchSpace } from '@aws-cdk/aws-ecs';





   .. py:attribute:: containerPath

      :type: string


   .. py:attribute:: name

      :type: string


   .. py:attribute:: readOnly

      :type: boolean


   .. py:attribute:: sourcePath

      :type: string


TaskDefinition
^^^^^^^^^^^^^^

.. py:class:: TaskDefinition(parent, name, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.TaskDefinition;

      .. code-tab:: javascript

         const { TaskDefinition } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { TaskDefinition } from '@aws-cdk/aws-ecs';



   Base class for Ecs and Fargate task definitions



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-ecs.TaskDefinitionProps`\ 

   .. py:method:: addContainer(id, props) -> @aws-cdk/aws-ecs.ContainerDefinition

      Create a new container to this task definition



      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinitionProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ 


   .. py:method:: addExtension(extension)

      Extend this TaskDefinition with the given extension

      

      Extension can be used to apply a packaged modification to

      a task definition.



      :param extension: 
      :type extension: :py:class:`~@aws-cdk/aws-ecs.ITaskDefinitionExtension`\ 


   .. py:method:: addPlacementConstraint(constraint)

      Constrain where tasks can be placed



      :param constraint: 
      :type constraint: :py:class:`~@aws-cdk/aws-ecs.PlacementConstraint`\ 


   .. py:method:: addToExecutionRolePolicy(statement)

      Add a policy statement to the Execution Role



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: addToTaskRolePolicy(statement)

      Add a policy statement to the Task Role



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: addVolume(volume)

      Add a volume to this task definition



      :param volume: 
      :type volume: :py:class:`~@aws-cdk/aws-ecs.Volume`\ 


   .. py:method:: obtainExecutionRole() -> @aws-cdk/aws-iam.IRole

      Create the execution role if it doesn't exist



      :rtype: :py:class:`@aws-cdk/aws-iam.IRole`\ 


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      Validate this task definition



      :rtype: string[]


   .. py:attribute:: containers

      All containers



      *Protected property*

      :type: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\ [] *(readonly)*


   .. py:attribute:: family

      The family name of this task definition



      :type: string *(readonly)*


   .. py:attribute:: networkMode

      Network mode used by this task definition



      :type: :py:class:`~@aws-cdk/aws-ecs.NetworkMode`\  *(readonly)*


   .. py:attribute:: taskDefinitionArn

      ARN of this task definition



      :type: string *(readonly)*


   .. py:attribute:: taskRole

      Task role used by this task definition



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(readonly)*


   .. py:attribute:: compatibility

      What launching modes this task is compatible with



      :type: :py:class:`~@aws-cdk/aws-ecs.Compatibility`\ 


   .. py:attribute:: defaultContainer

      Default container for this task

      

      Load balancers will send traffic to this container. The first

      essential container that is added to this task will become the default

      container.



      :type: :py:class:`~@aws-cdk/aws-ecs.ContainerDefinition`\  *(optional)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


TaskDefinitionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TaskDefinitionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.TaskDefinitionProps;

      .. code-tab:: javascript

         // TaskDefinitionProps is an interface

      .. code-tab:: typescript

         import { TaskDefinitionProps } from '@aws-cdk/aws-ecs';



   Properties for generic task definitions



   :extends: :py:class:`~@aws-cdk/aws-ecs.CommonTaskDefinitionProps`\ 


   .. py:attribute:: compatibility

      What launch types this task definition should be compatible with.



      :type: :py:class:`~@aws-cdk/aws-ecs.Compatibility`\ 


   .. py:attribute:: cpu

      The number of cpu units used by the task.

      Valid values, which determines your range of valid values for the memory parameter:

      256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB

      512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB

      1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB

      2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments

      4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments



      :type: string *(optional)*


   .. py:attribute:: memoryMiB

      The amount (in MiB) of memory used by the task.

      

      This field is required and you must use one of the following values, which determines your range of valid values

      for the cpu parameter:

      

      0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)

      

      1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)

      

      2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)

      

      Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)

      

      Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)



      :type: string *(optional)*


   .. py:attribute:: networkMode

      The Docker networking mode to use for the containers in the task.

      

      On Fargate, the only supported networking mode is AwsVpc.



      :type: :py:class:`~@aws-cdk/aws-ecs.NetworkMode`\  *(optional)*
      :default: NetworkMode.Bridge for EC2 tasks, AwsVpc for Fargate tasks.


   .. py:attribute:: placementConstraints

      An array of placement constraint objects to use for the task. You can

      specify a maximum of 10 constraints per task (this limit includes

      constraints in the task definition and those specified at run time).

      

      Not supported in Fargate.



      :type: :py:class:`~@aws-cdk/aws-ecs.PlacementConstraint`\ [] *(optional)*


   .. py:attribute:: executionRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.executionRole>`

      The IAM role assumed by the ECS agent.

      

      The role will be used to retrieve container images from ECR and

      create CloudWatch log groups.



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: An execution role will be automatically created if you use ECR images in your task definition


   .. py:attribute:: family

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.family>`

      Namespace for task definition versions



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: taskRole

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.taskRole>`

      The IAM role assumable by your application code running inside the container



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: A task role is automatically created for you


   .. py:attribute:: volumes

      *Inherited from* :py:attr:`@aws-cdk/aws-ecs.CommonTaskDefinitionProps <@aws-cdk/aws-ecs.CommonTaskDefinitionProps.volumes>`

      See: https://docs.aws.amazon.com/AmazonECS/latest/developerguide//task_definition_parameters.html#volumes



      :type: :py:class:`~@aws-cdk/aws-ecs.Volume`\ [] *(optional)*


Tmpfs (interface)
^^^^^^^^^^^^^^^^^

.. py:class:: Tmpfs

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Tmpfs;

      .. code-tab:: javascript

         // Tmpfs is an interface

      .. code-tab:: typescript

         import { Tmpfs } from '@aws-cdk/aws-ecs';



   A tmpfs mount





   .. py:attribute:: containerPath

      Path in the container to mount



      :type: string


   .. py:attribute:: size

      Size of the volume



      :type: number


   .. py:attribute:: mountOptions

      Mount options



      :type: :py:class:`~@aws-cdk/aws-ecs.TmpfsMountOption`\ [] *(optional)*


TmpfsMountOption (enum)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TmpfsMountOption

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.TmpfsMountOption;

      .. code-tab:: javascript

         const { TmpfsMountOption } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { TmpfsMountOption } from '@aws-cdk/aws-ecs';



   Options for a tmpfs mount



   .. py:data:: Defaults

   .. py:data:: Ro

   .. py:data:: Rw

   .. py:data:: Suid

   .. py:data:: Nosuid

   .. py:data:: Dev

   .. py:data:: Nodev

   .. py:data:: Exec

   .. py:data:: Noexec

   .. py:data:: Sync

   .. py:data:: Async

   .. py:data:: Dirsync

   .. py:data:: Remount

   .. py:data:: Mand

   .. py:data:: Nomand

   .. py:data:: Atime

   .. py:data:: Noatime

   .. py:data:: Diratime

   .. py:data:: Nodiratime

   .. py:data:: Bind

   .. py:data:: Rbind

   .. py:data:: Unbindable

   .. py:data:: Runbindable

   .. py:data:: Private

   .. py:data:: Rprivate

   .. py:data:: Shared

   .. py:data:: Rshared

   .. py:data:: Slave

   .. py:data:: Rslave

   .. py:data:: Relatime

   .. py:data:: Norelatime

   .. py:data:: Strictatime

   .. py:data:: Nostrictatime

   .. py:data:: Mode

   .. py:data:: Uid

   .. py:data:: Gid

   .. py:data:: NrInodes

   .. py:data:: NrBlocks

   .. py:data:: Mpol


TrackCustomMetricProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TrackCustomMetricProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.TrackCustomMetricProps;

      .. code-tab:: javascript

         // TrackCustomMetricProps is an interface

      .. code-tab:: typescript

         import { TrackCustomMetricProps } from '@aws-cdk/aws-ecs';



   Properties to target track a custom metric



   :extends: :py:class:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps`\ 


   .. py:attribute:: metric

      Metric to track

      

      The metric must represent utilization; that is, you will always get the following behavior:

      

      - metric > targetValue => scale out

      - metric < targetValue => scale in



      :type: :py:class:`@aws-cdk/aws-cloudwatch.Metric`\ 


   .. py:attribute:: targetValue

      The target value to achieve for the metric



      :type: number


   .. py:attribute:: disableScaleIn

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.disableScaleIn>`

      Indicates whether scale in by the target tracking policy is disabled.

      

      If the value is true, scale in is disabled and the target tracking policy

      won't remove capacity from the scalable resource. Otherwise, scale in is

      enabled and the target tracking policy can remove capacity from the

      scalable resource.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: policyName

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.policyName>`

      A name for the scaling policy



      :type: string *(optional)*
      :default: Automatically generated name


   .. py:attribute:: scaleInCooldownSec

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.scaleInCooldownSec>`

      Period after a scale in activity completes before another scale in activity can start.



      :type: number *(optional)*
      :default: No scale in cooldown


   .. py:attribute:: scaleOutCooldownSec

      *Inherited from* :py:attr:`@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps <@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps.scaleOutCooldownSec>`

      Period after a scale out activity completes before another scale out activity can start.



      :type: number *(optional)*
      :default: No scale out cooldown


Ulimit (interface)
^^^^^^^^^^^^^^^^^^

.. py:class:: Ulimit

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Ulimit;

      .. code-tab:: javascript

         // Ulimit is an interface

      .. code-tab:: typescript

         import { Ulimit } from '@aws-cdk/aws-ecs';



   Container ulimits.

   

   Correspond to ulimits options on docker run.

   

   NOTE: Does not work for Windows containers.





   .. py:attribute:: hardLimit

      Hard limit of the resource



      :type: number


   .. py:attribute:: name

      What resource to enforce a limit on



      :type: :py:class:`~@aws-cdk/aws-ecs.UlimitName`\ 


   .. py:attribute:: softLimit

      Soft limit of the resource



      :type: number


UlimitName (enum)
^^^^^^^^^^^^^^^^^

.. py:class:: UlimitName

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.UlimitName;

      .. code-tab:: javascript

         const { UlimitName } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { UlimitName } from '@aws-cdk/aws-ecs';



   Type of resource to set a limit on



   .. py:data:: Core

   .. py:data:: Cpu

   .. py:data:: Data

   .. py:data:: Fsize

   .. py:data:: Locks

   .. py:data:: Memlock

   .. py:data:: Msgqueue

   .. py:data:: Nice

   .. py:data:: Nofile

   .. py:data:: Nproc

   .. py:data:: Rss

   .. py:data:: Rtprio

   .. py:data:: Rttime

   .. py:data:: Sigpending

   .. py:data:: Stack


Volume (interface)
^^^^^^^^^^^^^^^^^^

.. py:class:: Volume

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.Volume;

      .. code-tab:: javascript

         // Volume is an interface

      .. code-tab:: typescript

         import { Volume } from '@aws-cdk/aws-ecs';



   Volume definition





   .. py:attribute:: host

      Path on the host



      :type: :py:class:`~@aws-cdk/aws-ecs.Host`\  *(optional)*


   .. py:attribute:: name

      A name for the volume



      :type: string *(optional)*


VolumeFrom (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VolumeFrom

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.VolumeFrom;

      .. code-tab:: javascript

         // VolumeFrom is an interface

      .. code-tab:: typescript

         import { VolumeFrom } from '@aws-cdk/aws-ecs';



   A volume from another container





   .. py:attribute:: readOnly

      Whether the volume is read only



      :type: boolean


   .. py:attribute:: sourceContainer

      Name of the source container



      :type: string



cloudformation
^^^^^^^^^^^^^^
.. py:module:: @aws-cdk/aws-ecs.cloudformation

ClusterResource
~~~~~~~~~~~~~~~

.. py:class:: ClusterResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.cloudformation.ClusterResource;

      .. code-tab:: javascript

         const { cloudformation.ClusterResource } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { cloudformation.ClusterResource } from '@aws-cdk/aws-ecs';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ClusterResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ClusterResource``
   :type properties: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ClusterResourceProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: clusterArn

      :type: string *(readonly)*


   .. py:attribute:: clusterName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ClusterResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ClusterResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ClusterResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.cloudformation.ClusterResourceProps;

      .. code-tab:: javascript

         // cloudformation.ClusterResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ClusterResourceProps } from '@aws-cdk/aws-ecs';





   .. py:attribute:: clusterName

      ``AWS::ECS::Cluster.ClusterName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustername


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


ServiceResource
~~~~~~~~~~~~~~~

.. py:class:: ServiceResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource;

      .. code-tab:: javascript

         const { cloudformation.ServiceResource } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { cloudformation.ServiceResource } from '@aws-cdk/aws-ecs';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ServiceResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ServiceResource``
   :type properties: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResourceProps`\  *(readonly)*


   .. py:attribute:: serviceArn

      :type: string *(readonly)*


   .. py:attribute:: serviceName

      :type: string *(readonly)*

   .. py:class:: AwsVpcConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource.AwsVpcConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.ServiceResource.AwsVpcConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ServiceResource.AwsVpcConfigurationProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: subnets

         ``ServiceResource.AwsVpcConfigurationProperty.Subnets``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-subnets


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


      .. py:attribute:: assignPublicIp

         ``ServiceResource.AwsVpcConfigurationProperty.AssignPublicIp``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-assignpublicip


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: securityGroups

         ``ServiceResource.AwsVpcConfigurationProperty.SecurityGroups``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-securitygroups


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:class:: DeploymentConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource.DeploymentConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.ServiceResource.DeploymentConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ServiceResource.DeploymentConfigurationProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: maximumPercent

         ``ServiceResource.DeploymentConfigurationProperty.MaximumPercent``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html#cfn-ecs-service-deploymentconfiguration-maximumpercent


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: minimumHealthyPercent

         ``ServiceResource.DeploymentConfigurationProperty.MinimumHealthyPercent``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html#cfn-ecs-service-deploymentconfiguration-minimumhealthypercent


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: LoadBalancerProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource.LoadBalancerProperty;

         .. code-tab:: javascript

            // cloudformation.ServiceResource.LoadBalancerProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ServiceResource.LoadBalancerProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: containerPort

         ``ServiceResource.LoadBalancerProperty.ContainerPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-containerport


         :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: containerName

         ``ServiceResource.LoadBalancerProperty.ContainerName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-containername


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: loadBalancerName

         ``ServiceResource.LoadBalancerProperty.LoadBalancerName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-loadbalancername


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: targetGroupArn

         ``ServiceResource.LoadBalancerProperty.TargetGroupArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-targetgrouparn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: NetworkConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource.NetworkConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.ServiceResource.NetworkConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ServiceResource.NetworkConfigurationProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: awsvpcConfiguration

         ``ServiceResource.NetworkConfigurationProperty.AwsvpcConfiguration``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-networkconfiguration.html#cfn-ecs-service-networkconfiguration-awsvpcconfiguration


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.AwsVpcConfigurationProperty`\  *(optional)*


   .. py:class:: PlacementConstraintProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource.PlacementConstraintProperty;

         .. code-tab:: javascript

            // cloudformation.ServiceResource.PlacementConstraintProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ServiceResource.PlacementConstraintProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: type

         ``ServiceResource.PlacementConstraintProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html#cfn-ecs-service-placementconstraint-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: expression

         ``ServiceResource.PlacementConstraintProperty.Expression``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html#cfn-ecs-service-placementconstraint-expression


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: PlacementStrategyProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource.PlacementStrategyProperty;

         .. code-tab:: javascript

            // cloudformation.ServiceResource.PlacementStrategyProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ServiceResource.PlacementStrategyProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: type

         ``ServiceResource.PlacementStrategyProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html#cfn-ecs-service-placementstrategy-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: field

         ``ServiceResource.PlacementStrategyProperty.Field``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html#cfn-ecs-service-placementstrategy-field


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: ServiceRegistryProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.ServiceResource.ServiceRegistryProperty;

         .. code-tab:: javascript

            // cloudformation.ServiceResource.ServiceRegistryProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ServiceResource.ServiceRegistryProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: containerName

         ``ServiceResource.ServiceRegistryProperty.ContainerName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-containername


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: containerPort

         ``ServiceResource.ServiceRegistryProperty.ContainerPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-containerport


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: port

         ``ServiceResource.ServiceRegistryProperty.Port``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-port


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: registryArn

         ``ServiceResource.ServiceRegistryProperty.RegistryArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-registryarn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ServiceResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ServiceResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.cloudformation.ServiceResourceProps;

      .. code-tab:: javascript

         // cloudformation.ServiceResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ServiceResourceProps } from '@aws-cdk/aws-ecs';





   .. py:attribute:: taskDefinition

      ``AWS::ECS::Service.TaskDefinition``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-taskdefinition


      :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: cluster

      ``AWS::ECS::Service.Cluster``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-cluster


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: deploymentConfiguration

      ``AWS::ECS::Service.DeploymentConfiguration``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.DeploymentConfigurationProperty`\  *(optional)*


   .. py:attribute:: desiredCount

      ``AWS::ECS::Service.DesiredCount``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-desiredcount


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: healthCheckGracePeriodSeconds

      ``AWS::ECS::Service.HealthCheckGracePeriodSeconds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-healthcheckgraceperiodseconds


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: launchType

      ``AWS::ECS::Service.LaunchType``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: loadBalancers

      ``AWS::ECS::Service.LoadBalancers``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.LoadBalancerProperty`\  or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: networkConfiguration

      ``AWS::ECS::Service.NetworkConfiguration``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration


      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.NetworkConfigurationProperty`\  or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: placementConstraints

      ``AWS::ECS::Service.PlacementConstraints``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.PlacementConstraintProperty`\ )[] *(optional)*


   .. py:attribute:: placementStrategies

      ``AWS::ECS::Service.PlacementStrategies``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.PlacementStrategyProperty`\ )[] *(optional)*


   .. py:attribute:: platformVersion

      ``AWS::ECS::Service.PlatformVersion``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-platformversion


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: role

      ``AWS::ECS::Service.Role``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-role


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: schedulingStrategy

      ``AWS::ECS::Service.SchedulingStrategy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-schedulingstrategy


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: serviceName

      ``AWS::ECS::Service.ServiceName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicename


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: serviceRegistries

      ``AWS::ECS::Service.ServiceRegistries``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.ServiceResource.ServiceRegistryProperty`\ )[] *(optional)*


TaskDefinitionResource
~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: TaskDefinitionResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource;

      .. code-tab:: javascript

         const { cloudformation.TaskDefinitionResource } = require('@aws-cdk/aws-ecs');

      .. code-tab:: typescript

         import { cloudformation.TaskDefinitionResource } from '@aws-cdk/aws-ecs';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``TaskDefinitionResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``TaskDefinitionResource``
   :type properties: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResourceProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResourceProps`\  *(readonly)*


   .. py:attribute:: taskDefinitionArn

      :type: string *(readonly)*

   .. py:class:: ContainerDefinitionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.ContainerDefinitionProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.ContainerDefinitionProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.ContainerDefinitionProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: command

         ``TaskDefinitionResource.ContainerDefinitionProperty.Command``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-command


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: cpu

         ``TaskDefinitionResource.ContainerDefinitionProperty.Cpu``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-cpu


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: disableNetworking

         ``TaskDefinitionResource.ContainerDefinitionProperty.DisableNetworking``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-disablenetworking


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: dnsSearchDomains

         ``TaskDefinitionResource.ContainerDefinitionProperty.DnsSearchDomains``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dnssearchdomains


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: dnsServers

         ``TaskDefinitionResource.ContainerDefinitionProperty.DnsServers``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dnsservers


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: dockerLabels

         ``TaskDefinitionResource.ContainerDefinitionProperty.DockerLabels``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dockerlabels


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*


      .. py:attribute:: dockerSecurityOptions

         ``TaskDefinitionResource.ContainerDefinitionProperty.DockerSecurityOptions``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dockersecurityoptions


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: entryPoint

         ``TaskDefinitionResource.ContainerDefinitionProperty.EntryPoint``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-entrypoint


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: environment

         ``TaskDefinitionResource.ContainerDefinitionProperty.Environment``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-environment


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.KeyValuePairProperty`\ )[] *(optional)*


      .. py:attribute:: essential

         ``TaskDefinitionResource.ContainerDefinitionProperty.Essential``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-essential


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: extraHosts

         ``TaskDefinitionResource.ContainerDefinitionProperty.ExtraHosts``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-extrahosts


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.HostEntryProperty`\ )[] *(optional)*


      .. py:attribute:: healthCheck

         ``TaskDefinitionResource.ContainerDefinitionProperty.HealthCheck``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-healthcheck


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.HealthCheckProperty`\  *(optional)*


      .. py:attribute:: hostname

         ``TaskDefinitionResource.ContainerDefinitionProperty.Hostname``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-hostname


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: image

         ``TaskDefinitionResource.ContainerDefinitionProperty.Image``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-image


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: links

         ``TaskDefinitionResource.ContainerDefinitionProperty.Links``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-links


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: linuxParameters

         ``TaskDefinitionResource.ContainerDefinitionProperty.LinuxParameters``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-linuxparameters


         :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LinuxParametersProperty`\  or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: logConfiguration

         ``TaskDefinitionResource.ContainerDefinitionProperty.LogConfiguration``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration


         :type: :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.LogConfigurationProperty`\  or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: memory

         ``TaskDefinitionResource.ContainerDefinitionProperty.Memory``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-memory


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: memoryReservation

         ``TaskDefinitionResource.ContainerDefinitionProperty.MemoryReservation``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-memoryreservation


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: mountPoints

         ``TaskDefinitionResource.ContainerDefinitionProperty.MountPoints``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.MountPointProperty`\ )[] *(optional)*


      .. py:attribute:: name

         ``TaskDefinitionResource.ContainerDefinitionProperty.Name``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: portMappings

         ``TaskDefinitionResource.ContainerDefinitionProperty.PortMappings``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-portmappings


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.PortMappingProperty`\ )[] *(optional)*


      .. py:attribute:: privileged

         ``TaskDefinitionResource.ContainerDefinitionProperty.Privileged``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-privileged


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: readonlyRootFilesystem

         ``TaskDefinitionResource.ContainerDefinitionProperty.ReadonlyRootFilesystem``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-readonlyrootfilesystem


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: repositoryCredentials

         ``TaskDefinitionResource.ContainerDefinitionProperty.RepositoryCredentials``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-repositorycredentials


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.RepositoryCredentialsProperty`\  *(optional)*


      .. py:attribute:: ulimits

         ``TaskDefinitionResource.ContainerDefinitionProperty.Ulimits``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-ulimits


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.UlimitProperty`\ )[] *(optional)*


      .. py:attribute:: user

         ``TaskDefinitionResource.ContainerDefinitionProperty.User``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-user


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: volumesFrom

         ``TaskDefinitionResource.ContainerDefinitionProperty.VolumesFrom``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.VolumeFromProperty`\ )[] *(optional)*


      .. py:attribute:: workingDirectory

         ``TaskDefinitionResource.ContainerDefinitionProperty.WorkingDirectory``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-workingdirectory


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: DeviceProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.DeviceProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.DeviceProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.DeviceProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: hostPath

         ``TaskDefinitionResource.DeviceProperty.HostPath``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-hostpath


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: containerPath

         ``TaskDefinitionResource.DeviceProperty.ContainerPath``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-containerpath


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: permissions

         ``TaskDefinitionResource.DeviceProperty.Permissions``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-permissions


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:class:: DockerVolumeConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.DockerVolumeConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.DockerVolumeConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.DockerVolumeConfigurationProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: autoprovision

         ``TaskDefinitionResource.DockerVolumeConfigurationProperty.Autoprovision``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-autoprovision


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: driver

         ``TaskDefinitionResource.DockerVolumeConfigurationProperty.Driver``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-driver


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: driverOpts

         ``TaskDefinitionResource.DockerVolumeConfigurationProperty.DriverOpts``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-driveropts


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*


      .. py:attribute:: labels

         ``TaskDefinitionResource.DockerVolumeConfigurationProperty.Labels``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-labels


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*


      .. py:attribute:: scope

         ``TaskDefinitionResource.DockerVolumeConfigurationProperty.Scope``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-scope


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: HealthCheckProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.HealthCheckProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.HealthCheckProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.HealthCheckProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: command

         ``TaskDefinitionResource.HealthCheckProperty.Command``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-command


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


      .. py:attribute:: interval

         ``TaskDefinitionResource.HealthCheckProperty.Interval``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-interval


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: retries

         ``TaskDefinitionResource.HealthCheckProperty.Retries``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-retries


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: startPeriod

         ``TaskDefinitionResource.HealthCheckProperty.StartPeriod``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-startperiod


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: timeout

         ``TaskDefinitionResource.HealthCheckProperty.Timeout``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-timeout


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: HostEntryProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.HostEntryProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.HostEntryProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.HostEntryProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: hostname

         ``TaskDefinitionResource.HostEntryProperty.Hostname``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html#cfn-ecs-taskdefinition-containerdefinition-hostentry-hostname


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: ipAddress

         ``TaskDefinitionResource.HostEntryProperty.IpAddress``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html#cfn-ecs-taskdefinition-containerdefinition-hostentry-ipaddress


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:class:: HostVolumePropertiesProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.HostVolumePropertiesProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.HostVolumePropertiesProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.HostVolumePropertiesProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: sourcePath

         ``TaskDefinitionResource.HostVolumePropertiesProperty.SourcePath``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html#cfn-ecs-taskdefinition-volumes-host-sourcepath


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: KernelCapabilitiesProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.KernelCapabilitiesProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.KernelCapabilitiesProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.KernelCapabilitiesProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: add

         ``TaskDefinitionResource.KernelCapabilitiesProperty.Add``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html#cfn-ecs-taskdefinition-kernelcapabilities-add


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: drop

         ``TaskDefinitionResource.KernelCapabilitiesProperty.Drop``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html#cfn-ecs-taskdefinition-kernelcapabilities-drop


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:class:: KeyValuePairProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.KeyValuePairProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.KeyValuePairProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.KeyValuePairProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: name

         ``TaskDefinitionResource.KeyValuePairProperty.Name``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html#cfn-ecs-taskdefinition-containerdefinition-environment-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: value

         ``TaskDefinitionResource.KeyValuePairProperty.Value``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html#cfn-ecs-taskdefinition-containerdefinition-environment-value


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: LinuxParametersProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.LinuxParametersProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.LinuxParametersProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.LinuxParametersProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: capabilities

         ``TaskDefinitionResource.LinuxParametersProperty.Capabilities``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-capabilities


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.KernelCapabilitiesProperty`\  *(optional)*


      .. py:attribute:: devices

         ``TaskDefinitionResource.LinuxParametersProperty.Devices``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-devices


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.DeviceProperty`\ )[] *(optional)*


      .. py:attribute:: initProcessEnabled

         ``TaskDefinitionResource.LinuxParametersProperty.InitProcessEnabled``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-initprocessenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: sharedMemorySize

         ``TaskDefinitionResource.LinuxParametersProperty.SharedMemorySize``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-sharedmemorysize


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: tmpfs

         ``TaskDefinitionResource.LinuxParametersProperty.Tmpfs``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-tmpfs


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.TmpfsProperty`\ )[] *(optional)*


   .. py:class:: LogConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.LogConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.LogConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.LogConfigurationProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: logDriver

         ``TaskDefinitionResource.LogConfigurationProperty.LogDriver``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration-logdriver


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: options

         ``TaskDefinitionResource.LogConfigurationProperty.Options``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration-options


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*


   .. py:class:: MountPointProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.MountPointProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.MountPointProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.MountPointProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: containerPath

         ``TaskDefinitionResource.MountPointProperty.ContainerPath``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-containerpath


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: readOnly

         ``TaskDefinitionResource.MountPointProperty.ReadOnly``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-readonly


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: sourceVolume

         ``TaskDefinitionResource.MountPointProperty.SourceVolume``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-sourcevolume


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: PortMappingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.PortMappingProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.PortMappingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.PortMappingProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: containerPort

         ``TaskDefinitionResource.PortMappingProperty.ContainerPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-containerport


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: hostPort

         ``TaskDefinitionResource.PortMappingProperty.HostPort``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-readonly


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: protocol

         ``TaskDefinitionResource.PortMappingProperty.Protocol``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-sourcevolume


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: RepositoryCredentialsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.RepositoryCredentialsProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.RepositoryCredentialsProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.RepositoryCredentialsProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: credentialsParameter

         ``TaskDefinitionResource.RepositoryCredentialsProperty.CredentialsParameter``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-repositorycredentials.html#cfn-ecs-taskdefinition-repositorycredentials-credentialsparameter


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: TaskDefinitionPlacementConstraintProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.TaskDefinitionPlacementConstraintProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.TaskDefinitionPlacementConstraintProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.TaskDefinitionPlacementConstraintProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: type

         ``TaskDefinitionResource.TaskDefinitionPlacementConstraintProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html#cfn-ecs-taskdefinition-taskdefinitionplacementconstraint-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: expression

         ``TaskDefinitionResource.TaskDefinitionPlacementConstraintProperty.Expression``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html#cfn-ecs-taskdefinition-taskdefinitionplacementconstraint-expression


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: TmpfsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.TmpfsProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.TmpfsProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.TmpfsProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: containerPath

         ``TaskDefinitionResource.TmpfsProperty.ContainerPath``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-containerpath


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: mountOptions

         ``TaskDefinitionResource.TmpfsProperty.MountOptions``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-mountoptions


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


      .. py:attribute:: size

         ``TaskDefinitionResource.TmpfsProperty.Size``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-size


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: UlimitProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.UlimitProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.UlimitProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.UlimitProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: hardLimit

         ``TaskDefinitionResource.UlimitProperty.HardLimit``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-hardlimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: name

         ``TaskDefinitionResource.UlimitProperty.Name``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\ 


      .. py:attribute:: softLimit

         ``TaskDefinitionResource.UlimitProperty.SoftLimit``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-softlimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:class:: VolumeFromProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.VolumeFromProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.VolumeFromProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.VolumeFromProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: readOnly

         ``TaskDefinitionResource.VolumeFromProperty.ReadOnly``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom-readonly


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: sourceContainer

         ``TaskDefinitionResource.VolumeFromProperty.SourceContainer``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom-sourcecontainer


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: VolumeProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.ECS;

         .. code-tab:: java

            import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResource.VolumeProperty;

         .. code-tab:: javascript

            // cloudformation.TaskDefinitionResource.VolumeProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.TaskDefinitionResource.VolumeProperty } from '@aws-cdk/aws-ecs';





      .. py:attribute:: dockerVolumeConfiguration

         ``TaskDefinitionResource.VolumeProperty.DockerVolumeConfiguration``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volume-dockervolumeconfiguration


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.DockerVolumeConfigurationProperty`\  *(optional)*


      .. py:attribute:: host

         ``TaskDefinitionResource.VolumeProperty.Host``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volumes-host


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.HostVolumePropertiesProperty`\  *(optional)*


      .. py:attribute:: name

         ``TaskDefinitionResource.VolumeProperty.Name``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volumes-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.



      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct.

      The toolkit will fail synthesis when errors are reported.



      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct.

      The toolkit will display the info message when apps are synthesized.



      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, data, [from]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct.

      Entries are arbitrary values and will also include a stack trace to allow tracing back to

      the code location for when the entry was added. It can be used, for example, to include source

      mapping in CloudFormation templates to improve diagnostics.



      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct.

      The toolkit will display the warning when an app is synthesized, or fail

      if run in --strict mode.



      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component



      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path

      

      Throws an exception if the descendant is not found.



      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.

      

      Context is usually initialized at the root, but can be overridden at any point in the tree.



      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this

      call, no more children can be added to this construct or to any children.



      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context

      

      It is an error if the context object is not available.



      :param key: 
      :type key: string
      :rtype: any


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`.

      In the future we can add some type-checking here, maybe even auto-generate during compilation.



      *Protected method*

      :param props: The props bag.
      :type props: any
      :param name: The name of the required property.
      :type name: string
      :rtype: any


   .. py:method:: setContext(key, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values.

      Context must be set before any children are added, since children may consult context info during construction.

      If the key already exists, it will be overridden.



      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.



      :param depth: 
      :type depth: number *(optional)*
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined



      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)*


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).



      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).



      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.



      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct.

      This id is unique amongst its siblings.

      To obtain a tree-global unique id for this construct, use `uniqueId`.



      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are

      locked.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct.

      This can be used, for example, to implement support for deprecation notices, source mapping, etc.



      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree.

      Components are separated by '/'.



      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct.

      Includes all components of the tree.



      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.



      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(optional)* *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


TaskDefinitionResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: TaskDefinitionResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.ECS;

      .. code-tab:: java

         import software.amazon.awscdk.services.ecs.cloudformation.TaskDefinitionResourceProps;

      .. code-tab:: javascript

         // cloudformation.TaskDefinitionResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.TaskDefinitionResourceProps } from '@aws-cdk/aws-ecs';





   .. py:attribute:: containerDefinitions

      ``AWS::ECS::TaskDefinition.ContainerDefinitions``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-containerdefinitions


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.ContainerDefinitionProperty`\  or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: cpu

      ``AWS::ECS::TaskDefinition.Cpu``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-cpu


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: executionRoleArn

      ``AWS::ECS::TaskDefinition.ExecutionRoleArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-executionrolearn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: family

      ``AWS::ECS::TaskDefinition.Family``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-family


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: memory

      ``AWS::ECS::TaskDefinition.Memory``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-memory


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: networkMode

      ``AWS::ECS::TaskDefinition.NetworkMode``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: placementConstraints

      ``AWS::ECS::TaskDefinition.PlacementConstraints``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-placementconstraints


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.TaskDefinitionPlacementConstraintProperty`\ )[] *(optional)*


   .. py:attribute:: requiresCompatibilities

      ``AWS::ECS::TaskDefinition.RequiresCompatibilities``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-requirescompatibilities


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: taskRoleArn

      ``AWS::ECS::TaskDefinition.TaskRoleArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-taskrolearn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: volumes

      ``AWS::ECS::TaskDefinition.Volumes``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-volumes


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-ecs.cloudformation.TaskDefinitionResource.VolumeProperty`\ )[] *(optional)*



.. py:currentmodule:: @aws-cdk/aws-ecs

