.. @jsii-pacmak:meta@ {"fingerprint":"R9bjr/nQT2Dmx5H1rt9WjxO5Osdi8v7OquIURrky6uM="}

@aws-cdk/aws-codepipeline-actions
=================================

.. mdinclude:: ./__aws-cdk_aws-codepipeline-actions.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.Codepipeline.Actions/0.28.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.Codepipeline.Actions" Version="0.28.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.Codepipeline.Actions --version 0.28.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.Codepipeline.Actions" version="0.28.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/codepipeline-actions/0.28.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:codepipeline-actions:jar:0.28.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="codepipeline-actions" rev="0.28.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>codepipeline-actions</artifactId>
           <version>0.28.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:codepipeline-actions:0.28.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='codepipeline-actions', version='0.28.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-codepipeline-actions/v/0.28.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-codepipeline-actions@0.28.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-codepipeline-actions": "^0.28.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-codepipeline-actions@0.28.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-codepipeline-actions/v/0.28.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-codepipeline-actions@0.28.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-codepipeline-actions": "^0.28.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-codepipeline-actions@0.28.0



.. py:module:: @aws-cdk/aws-codepipeline-actions

AlexaSkillDeployAction
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AlexaSkillDeployAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.AlexaSkillDeployAction;

      .. code-tab:: javascript

         const { AlexaSkillDeployAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { AlexaSkillDeployAction } from '@aws-cdk/aws-codepipeline-actions';



   Deploys the skill to Alexa



   :extends: :py:class:`@aws-cdk/aws-codepipeline.DeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.AlexaSkillDeployActionProps`\ 

   .. py:method:: bind(_info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param _info: 
      :type _info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


AlexaSkillDeployActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AlexaSkillDeployActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.AlexaSkillDeployActionProps;

      .. code-tab:: javascript

         // AlexaSkillDeployActionProps is an interface

      .. code-tab:: typescript

         import { AlexaSkillDeployActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link AlexaSkillDeployAction Alexa deploy Action}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: clientId

      The client id of the developer console token



      :type: string *(readonly)*


   .. py:attribute:: clientSecret

      The client secret of the developer console token



      :type: :py:class:`@aws-cdk/cdk.SecretValue`\  *(readonly)*


   .. py:attribute:: inputArtifact

      The source artifact containing the voice model and skill manifest



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: refreshToken

      The refresh token of the developer console token



      :type: :py:class:`@aws-cdk/cdk.SecretValue`\  *(readonly)*


   .. py:attribute:: skillId

      The Alexa skill id



      :type: string *(readonly)*


   .. py:attribute:: parameterOverridesArtifact

      An optional artifact containing overrides for the skill manifest



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


BaseJenkinsProvider
^^^^^^^^^^^^^^^^^^^

.. py:class:: BaseJenkinsProvider(scope, id, [version])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.BaseJenkinsProvider;

      .. code-tab:: javascript

         const { BaseJenkinsProvider } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { BaseJenkinsProvider } from '@aws-cdk/aws-codepipeline-actions';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-codepipeline-actions.IJenkinsProvider`\ 
   :abstract: Yes
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param version: 
   :type version: string *(optional)*

   .. py:method:: export() -> @aws-cdk/aws-codepipeline-actions.JenkinsProviderImportProps

      :rtype: :py:class:`~@aws-cdk/aws-codepipeline-actions.JenkinsProviderImportProps`\ 


   .. py:attribute:: providerName

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline-actions.IJenkinsProvider.providerName`

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: serverUrl

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline-actions.IJenkinsProvider.serverUrl`

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: version

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline-actions.IJenkinsProvider.version`

      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CloudFormationAction
^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationAction(props, [configuration])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationAction;

      .. code-tab:: javascript

         const { CloudFormationAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CloudFormationAction } from '@aws-cdk/aws-codepipeline-actions';



   Base class for Actions that execute CloudFormation



   :extends: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 
   :abstract: Yes
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps`\ 
   :param configuration: 
   :type configuration: any *(optional)*

   .. py:attribute:: outputArtifact

      CfnOutput artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: bind(info)

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.bind>`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 
      :abstract: Yes


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


CloudFormationActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationActionProps;

      .. code-tab:: javascript

         // CloudFormationActionProps is an interface

      .. code-tab:: typescript

         import { CloudFormationActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Properties common to all CloudFormation actions



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: stackName

      The name of the stack to apply this action to



      :type: string *(readonly)*


   .. py:attribute:: outputArtifactName

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)* *(readonly)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)* *(readonly)*
      :default: No output artifact generated


   .. py:attribute:: region

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CloudFormationCreateReplaceChangeSetAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationCreateReplaceChangeSetAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationCreateReplaceChangeSetAction;

      .. code-tab:: javascript

         const { CloudFormationCreateReplaceChangeSetAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CloudFormationCreateReplaceChangeSetAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline action to prepare a change set.

   

   Creates the change set if it doesn't exist based on the stack name and template that you submit.

   If the change set exists, AWS CloudFormation deletes it, and then creates a new one.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetActionProps`\ 

   .. py:method:: bind(info)

      *Overrides* :py:meth:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationAction <@aws-cdk/aws-codepipeline-actions.CloudFormationAction.outputArtifact>`

      CfnOutput artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)*


   .. py:method:: addToDeploymentRolePolicy(statement) -> boolean

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.addToDeploymentRolePolicy>`

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 
      :rtype: boolean


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.deploymentRole>`

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


CloudFormationCreateReplaceChangeSetActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationCreateReplaceChangeSetActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationCreateReplaceChangeSetActionProps;

      .. code-tab:: javascript

         // CloudFormationCreateReplaceChangeSetActionProps is an interface

      .. code-tab:: typescript

         import { CloudFormationCreateReplaceChangeSetActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Properties for the CloudFormationCreateReplaceChangeSetAction.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps`\ 


   .. py:attribute:: changeSetName

      Name of the change set to create or update.



      :type: string *(readonly)*


   .. py:attribute:: templatePath

      Input artifact with the ChangeSet's CloudFormation template



      :type: :py:class:`@aws-cdk/aws-codepipeline.ArtifactPath`\  *(readonly)*


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string *(readonly)*


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)* *(readonly)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)* *(readonly)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: adminPermissions

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.adminPermissions>`

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean *(readonly)*


   .. py:attribute:: additionalInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.additionalInputArtifacts>`

      The list of additional input Artifacts for this Action.

      This is especially useful when used in conjunction with the `parameterOverrides` property.

      For example, if you have:

      

         parameterOverrides: {

           'Param1': action1.outputArtifact.bucketName,

           'Param2': action2.outputArtifact.objectKey,

         }

      

      , if the output Artifacts of `action1` and `action2` were not used to

      set either the `templateConfiguration` or the `templatePath` properties,

      you need to make sure to include them in the `additionalInputArtifacts` -

      otherwise, you'll get an "unrecognized Artifact" error during your Pipeline's execution.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*


   .. py:attribute:: capabilities

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.capabilities>`

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)* *(readonly)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.deploymentRole>`

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.parameterOverrides>`

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)* *(readonly)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.templateConfiguration>`

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ArtifactPath`\  *(optional)* *(readonly)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CloudFormationCreateUpdateStackAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationCreateUpdateStackAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationCreateUpdateStackAction;

      .. code-tab:: javascript

         const { CloudFormationCreateUpdateStackAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CloudFormationCreateUpdateStackAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline action to deploy a stack.

   

   Creates the stack if the specified stack doesn't exist. If the stack exists,

   AWS CloudFormation updates the stack. Use this action to update existing

   stacks.

   

   AWS CodePipeline won't replace the stack, and will fail deployment if the

   stack is in a failed state. Use `ReplaceOnFailure` for an action that

   will delete and recreate the stack to try and recover from failed states.

   

   Use this action to automatically replace failed stacks without recovering or

   troubleshooting them. You would typically choose this mode for testing.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackActionProps`\ 

   .. py:method:: bind(info)

      *Overrides* :py:meth:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationAction <@aws-cdk/aws-codepipeline-actions.CloudFormationAction.outputArtifact>`

      CfnOutput artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)*


   .. py:method:: addToDeploymentRolePolicy(statement) -> boolean

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.addToDeploymentRolePolicy>`

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 
      :rtype: boolean


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.deploymentRole>`

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


CloudFormationCreateUpdateStackActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationCreateUpdateStackActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationCreateUpdateStackActionProps;

      .. code-tab:: javascript

         // CloudFormationCreateUpdateStackActionProps is an interface

      .. code-tab:: typescript

         import { CloudFormationCreateUpdateStackActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Properties for the CloudFormationCreateUpdateStackAction.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps`\ 


   .. py:attribute:: templatePath

      Input artifact with the CloudFormation template to deploy



      :type: :py:class:`@aws-cdk/aws-codepipeline.ArtifactPath`\  *(readonly)*


   .. py:attribute:: replaceOnFailure

      Replace the stack if it's in a failed state.

      

      If this is set to true and the stack is in a failed state (one of

      ROLLBACK_COMPLETE, ROLLBACK_FAILED, CREATE_FAILED, DELETE_FAILED, or

      UPDATE_ROLLBACK_FAILED), AWS CloudFormation deletes the stack and then

      creates a new stack.

      

      If this is not set to true and the stack is in a failed state,

      the deployment fails.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string *(readonly)*


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)* *(readonly)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)* *(readonly)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: adminPermissions

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.adminPermissions>`

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean *(readonly)*


   .. py:attribute:: additionalInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.additionalInputArtifacts>`

      The list of additional input Artifacts for this Action.

      This is especially useful when used in conjunction with the `parameterOverrides` property.

      For example, if you have:

      

         parameterOverrides: {

           'Param1': action1.outputArtifact.bucketName,

           'Param2': action2.outputArtifact.objectKey,

         }

      

      , if the output Artifacts of `action1` and `action2` were not used to

      set either the `templateConfiguration` or the `templatePath` properties,

      you need to make sure to include them in the `additionalInputArtifacts` -

      otherwise, you'll get an "unrecognized Artifact" error during your Pipeline's execution.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*


   .. py:attribute:: capabilities

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.capabilities>`

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)* *(readonly)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.deploymentRole>`

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.parameterOverrides>`

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)* *(readonly)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.templateConfiguration>`

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ArtifactPath`\  *(optional)* *(readonly)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CloudFormationDeleteStackAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationDeleteStackAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationDeleteStackAction;

      .. code-tab:: javascript

         const { CloudFormationDeleteStackAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CloudFormationDeleteStackAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline action to delete a stack.

   

   Deletes a stack. If you specify a stack that doesn't exist, the action completes successfully

   without deleting a stack.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeleteStackActionProps`\ 

   .. py:method:: bind(info)

      *Overrides* :py:meth:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationAction <@aws-cdk/aws-codepipeline-actions.CloudFormationAction.outputArtifact>`

      CfnOutput artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)*


   .. py:method:: addToDeploymentRolePolicy(statement) -> boolean

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.addToDeploymentRolePolicy>`

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 
      :rtype: boolean


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployAction.deploymentRole>`

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


CloudFormationDeleteStackActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationDeleteStackActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationDeleteStackActionProps;

      .. code-tab:: javascript

         // CloudFormationDeleteStackActionProps is an interface

      .. code-tab:: typescript

         import { CloudFormationDeleteStackActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Properties for the CloudFormationDeleteStackAction.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps`\ 


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string *(readonly)*


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)* *(readonly)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)* *(readonly)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: adminPermissions

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.adminPermissions>`

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean *(readonly)*


   .. py:attribute:: additionalInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.additionalInputArtifacts>`

      The list of additional input Artifacts for this Action.

      This is especially useful when used in conjunction with the `parameterOverrides` property.

      For example, if you have:

      

         parameterOverrides: {

           'Param1': action1.outputArtifact.bucketName,

           'Param2': action2.outputArtifact.objectKey,

         }

      

      , if the output Artifacts of `action1` and `action2` were not used to

      set either the `templateConfiguration` or the `templatePath` properties,

      you need to make sure to include them in the `additionalInputArtifacts` -

      otherwise, you'll get an "unrecognized Artifact" error during your Pipeline's execution.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*


   .. py:attribute:: capabilities

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.capabilities>`

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)* *(readonly)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.deploymentRole>`

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.parameterOverrides>`

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)* *(readonly)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps.templateConfiguration>`

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ArtifactPath`\  *(optional)* *(readonly)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CloudFormationDeployAction
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationDeployAction(props, configuration)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationDeployAction;

      .. code-tab:: javascript

         const { CloudFormationDeployAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CloudFormationDeployAction } from '@aws-cdk/aws-codepipeline-actions';



   Base class for all CloudFormation actions that execute or stage deployments.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationAction`\ 
   :abstract: Yes
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationDeployActionProps`\ 
   :param configuration: 
   :type configuration: any

   .. py:method:: addToDeploymentRolePolicy(statement) -> boolean

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 
      :rtype: boolean


   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:attribute:: deploymentRole

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationAction <@aws-cdk/aws-codepipeline-actions.CloudFormationAction.outputArtifact>`

      CfnOutput artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


CloudFormationDeployActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationDeployActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationDeployActionProps;

      .. code-tab:: javascript

         // CloudFormationDeployActionProps is an interface

      .. code-tab:: typescript

         import { CloudFormationDeployActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Properties common to CloudFormation actions that stage deployments



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps`\ 


   .. py:attribute:: adminPermissions

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean *(readonly)*


   .. py:attribute:: additionalInputArtifacts

      The list of additional input Artifacts for this Action.

      This is especially useful when used in conjunction with the `parameterOverrides` property.

      For example, if you have:

      

         parameterOverrides: {

           'Param1': action1.outputArtifact.bucketName,

           'Param2': action2.outputArtifact.objectKey,

         }

      

      , if the output Artifacts of `action1` and `action2` were not used to

      set either the `templateConfiguration` or the `templatePath` properties,

      you need to make sure to include them in the `additionalInputArtifacts` -

      otherwise, you'll get an "unrecognized Artifact" error during your Pipeline's execution.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*


   .. py:attribute:: capabilities

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)* *(readonly)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)* *(readonly)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ArtifactPath`\  *(optional)* *(readonly)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string *(readonly)*


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)* *(readonly)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)* *(readonly)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CloudFormationExecuteChangeSetAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationExecuteChangeSetAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationExecuteChangeSetAction;

      .. code-tab:: javascript

         const { CloudFormationExecuteChangeSetAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CloudFormationExecuteChangeSetAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline action to execute a prepared change set.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationAction <@aws-cdk/aws-codepipeline-actions.CloudFormationAction.outputArtifact>`

      CfnOutput artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


CloudFormationExecuteChangeSetActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationExecuteChangeSetActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CloudFormationExecuteChangeSetActionProps;

      .. code-tab:: javascript

         // CloudFormationExecuteChangeSetActionProps is an interface

      .. code-tab:: typescript

         import { CloudFormationExecuteChangeSetActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Properties for the CloudFormationExecuteChangeSetAction.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps`\ 


   .. py:attribute:: changeSetName

      Name of the change set to execute.



      :type: string *(readonly)*


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string *(readonly)*


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)* *(readonly)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)* *(readonly)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps <@aws-cdk/aws-codepipeline-actions.CloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CodeBuildBuildAction
^^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeBuildBuildAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeBuildBuildAction;

      .. code-tab:: javascript

         const { CodeBuildBuildAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CodeBuildBuildAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline build Action that uses AWS CodeBuild.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.BuildAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CodeBuildBuildActionProps`\ 

   .. py:method:: additionalOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      Returns the additional output artifact with the given name,

      or throws an exception if an artifact with that name was not found

      in the additonal output artifacts.

      The names are defined by the {@link CommonCodeBuildActionProps#additionalOutputArtifactNames}

      property.



      :param name: the name of the artifact to find
      :type name: string
      :return: the artifact with the given name
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: additionalOutputArtifacts() -> @aws-cdk/aws-codepipeline.Artifact[]

      Returns the additional output artifacts defined for this Action.

      Their names will be taken from the {@link CommonCodeBuildActionProps#additionalOutputArtifactNames}

      property.



      :return: all additional output artifacts defined for this Action
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ []


   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.BuildAction <@aws-cdk/aws-codepipeline.BuildAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


CodeBuildBuildActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeBuildBuildActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeBuildBuildActionProps;

      .. code-tab:: javascript

         // CodeBuildBuildActionProps is an interface

      .. code-tab:: typescript

         import { CodeBuildBuildActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link CodeBuildBuildAction CodeBuild build CodePipeline Action}.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps`\ 


   .. py:attribute:: outputArtifactName

      The name of the build's output artifact.



      :type: string *(optional)* *(readonly)*
      :default: an auto-generated name will be used


   .. py:attribute:: inputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.inputArtifact>`

      The source to use as input for this Action.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: project

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.project>`

      The Action's Project.



      :type: :py:class:`@aws-cdk/aws-codebuild.IProject`\  *(readonly)*


   .. py:attribute:: additionalInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.additionalInputArtifacts>`

      The list of additional input Artifacts for this Action.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*


   .. py:attribute:: additionalOutputArtifactNames

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.additionalOutputArtifactNames>`

      The list of names for additional output Artifacts for this Action.

      The resulting output artifacts can be accessed with the `additionalOutputArtifacts`

      method of the Action.



      :type: string[] *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CodeBuildTestAction
^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeBuildTestAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeBuildTestAction;

      .. code-tab:: javascript

         const { CodeBuildTestAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CodeBuildTestAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline test Action that uses AWS CodeBuild.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.TestAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CodeBuildTestActionProps`\ 

   .. py:method:: additionalOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      Returns the additional output artifact with the given name,

      or throws an exception if an artifact with that name was not found

      in the additonal output artifacts.

      The names are defined by the {@link CommonCodeBuildActionProps#additionalOutputArtifactNames}

      property.



      :param name: the name of the artifact to find
      :type name: string
      :return: the artifact with the given name
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: additionalOutputArtifacts() -> @aws-cdk/aws-codepipeline.Artifact[]

      Returns the additional output artifacts defined for this Action.

      Their names will be taken from the {@link CommonCodeBuildActionProps#additionalOutputArtifactNames}

      property.



      :return: all additional output artifacts defined for this Action
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ []


   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.TestAction <@aws-cdk/aws-codepipeline.TestAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)* *(readonly)*


CodeBuildTestActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeBuildTestActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeBuildTestActionProps;

      .. code-tab:: javascript

         // CodeBuildTestActionProps is an interface

      .. code-tab:: typescript

         import { CodeBuildTestActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link CodeBuildTestAction CodeBuild test CodePipeline Action}.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps`\ 


   .. py:attribute:: outputArtifactName

      The optional name of the primary output artifact.

      If you provide a value here,

      then the `outputArtifact` property of your Action will be non-null.

      If you don't, `outputArtifact` will be `null`.



      :type: string *(optional)* *(readonly)*
      :default: the Action will not have an output artifact


   .. py:attribute:: inputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.inputArtifact>`

      The source to use as input for this Action.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: project

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.project>`

      The Action's Project.



      :type: :py:class:`@aws-cdk/aws-codebuild.IProject`\  *(readonly)*


   .. py:attribute:: additionalInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.additionalInputArtifacts>`

      The list of additional input Artifacts for this Action.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*


   .. py:attribute:: additionalOutputArtifactNames

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps <@aws-cdk/aws-codepipeline-actions.CommonCodeBuildActionProps.additionalOutputArtifactNames>`

      The list of names for additional output Artifacts for this Action.

      The resulting output artifacts can be accessed with the `additionalOutputArtifacts`

      method of the Action.



      :type: string[] *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CodeCommitSourceAction
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeCommitSourceAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeCommitSourceAction;

      .. code-tab:: javascript

         const { CodeCommitSourceAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CodeCommitSourceAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline Source that is provided by an AWS CodeCommit repository.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.SourceAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CodeCommitSourceActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.SourceAction <@aws-cdk/aws-codepipeline.SourceAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


CodeCommitSourceActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeCommitSourceActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeCommitSourceActionProps;

      .. code-tab:: javascript

         // CodeCommitSourceActionProps is an interface

      .. code-tab:: typescript

         import { CodeCommitSourceActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link CodeCommitSourceAction CodeCommit source CodePipeline Action}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: repository

      The CodeCommit repository.



      :type: :py:class:`@aws-cdk/aws-codecommit.IRepository`\  *(readonly)*


   .. py:attribute:: branch

      :type: string *(optional)* *(readonly)*
      :default: 'master'


   .. py:attribute:: outputArtifactName

      The name of the source's output artifact.

      Output artifacts are used by CodePipeline as inputs into other actions.



      :type: string *(optional)* *(readonly)*
      :default: a name will be auto-generated


   .. py:attribute:: pollForSourceChanges

      Whether AWS CodePipeline should poll for source changes.

      If this is `false`, the Pipeline will use CloudWatch Events to detect source changes instead.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CodeDeployServerDeployAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeDeployServerDeployAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeDeployServerDeployAction;

      .. code-tab:: javascript

         const { CodeDeployServerDeployAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { CodeDeployServerDeployAction } from '@aws-cdk/aws-codepipeline-actions';



   :extends: :py:class:`@aws-cdk/aws-codepipeline.DeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.CodeDeployServerDeployActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


CodeDeployServerDeployActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CodeDeployServerDeployActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CodeDeployServerDeployActionProps;

      .. code-tab:: javascript

         // CodeDeployServerDeployActionProps is an interface

      .. code-tab:: typescript

         import { CodeDeployServerDeployActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link CodeDeployServerDeployAction CodeDeploy server deploy CodePipeline Action}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: deploymentGroup

      The CodeDeploy server Deployment Group to deploy to.



      :type: :py:class:`@aws-cdk/aws-codedeploy.IServerDeploymentGroup`\  *(readonly)*


   .. py:attribute:: inputArtifact

      The source to use as input for deployment.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CommonCodeBuildActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CommonCodeBuildActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CommonCodeBuildActionProps;

      .. code-tab:: javascript

         // CommonCodeBuildActionProps is an interface

      .. code-tab:: typescript

         import { CommonCodeBuildActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Common construction properties of all CodeBuild Pipeline Actions.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: inputArtifact

      The source to use as input for this Action.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: project

      The Action's Project.



      :type: :py:class:`@aws-cdk/aws-codebuild.IProject`\  *(readonly)*


   .. py:attribute:: additionalInputArtifacts

      The list of additional input Artifacts for this Action.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*


   .. py:attribute:: additionalOutputArtifactNames

      The list of names for additional output Artifacts for this Action.

      The resulting output artifacts can be accessed with the `additionalOutputArtifacts`

      method of the Action.



      :type: string[] *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


CommonJenkinsActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CommonJenkinsActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.CommonJenkinsActionProps;

      .. code-tab:: javascript

         // CommonJenkinsActionProps is an interface

      .. code-tab:: typescript

         import { CommonJenkinsActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Common construction properties of all Jenkins Pipeline Actions.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: inputArtifact

      The source to use as input for this build.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: jenkinsProvider

      The Jenkins Provider for this Action.



      :type: :py:class:`~@aws-cdk/aws-codepipeline-actions.IJenkinsProvider`\  *(readonly)*


   .. py:attribute:: projectName

      The name of the project (sometimes also called job, or task)

      on your Jenkins installation that will be invoked by this Action.



      :type: string *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


EcrSourceAction
^^^^^^^^^^^^^^^

.. py:class:: EcrSourceAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.EcrSourceAction;

      .. code-tab:: javascript

         const { EcrSourceAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { EcrSourceAction } from '@aws-cdk/aws-codepipeline-actions';



   The ECR Repository source CodePipeline Action.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.SourceAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.EcrSourceActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.SourceAction <@aws-cdk/aws-codepipeline.SourceAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


EcrSourceActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: EcrSourceActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.EcrSourceActionProps;

      .. code-tab:: javascript

         // EcrSourceActionProps is an interface

      .. code-tab:: typescript

         import { EcrSourceActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of {@link EcrSourceAction}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: repository

      The repository that will be watched for changes.



      :type: :py:class:`@aws-cdk/aws-ecr.IRepository`\  *(readonly)*


   .. py:attribute:: imageTag

      The image tag that will be checked for changes.



      :type: string *(optional)* *(readonly)*
      :default: 'latest'


   .. py:attribute:: outputArtifactName

      The name of the source's output artifact.

      CfnOutput artifacts are used by CodePipeline as inputs into other actions.



      :type: string *(optional)* *(readonly)*
      :default: a name will be auto-generated


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


GitHubSourceAction
^^^^^^^^^^^^^^^^^^

.. py:class:: GitHubSourceAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.GitHubSourceAction;

      .. code-tab:: javascript

         const { GitHubSourceAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { GitHubSourceAction } from '@aws-cdk/aws-codepipeline-actions';



   Source that is provided by a GitHub repository.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.SourceAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.GitHubSourceActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.SourceAction <@aws-cdk/aws-codepipeline.SourceAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


GitHubSourceActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: GitHubSourceActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.GitHubSourceActionProps;

      .. code-tab:: javascript

         // GitHubSourceActionProps is an interface

      .. code-tab:: typescript

         import { GitHubSourceActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link GitHubSourceAction GitHub source action}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: oauthToken

      A GitHub OAuth token to use for authentication.

      

      It is recommended to use a Secrets Manager `SecretString` to obtain the token:

      

         const oauth = new secretsmanager.SecretString(this, 'GitHubOAuthToken', { secretId: 'my-github-token' });

         new GitHubSource(this, 'GitHubAction', { oauthToken: oauth.value, ... });



      :type: :py:class:`@aws-cdk/cdk.SecretValue`\  *(readonly)*


   .. py:attribute:: outputArtifactName

      The name of the source's output artifact. CfnOutput artifacts are used by CodePipeline as

      inputs into other actions.



      :type: string *(readonly)*


   .. py:attribute:: owner

      The GitHub account/user that owns the repo.



      :type: string *(readonly)*


   .. py:attribute:: repo

      The name of the repo, without the username.



      :type: string *(readonly)*


   .. py:attribute:: branch

      The branch to use.



      :type: string *(optional)* *(readonly)*
      :default: "master"


   .. py:attribute:: pollForSourceChanges

      Whether AWS CodePipeline should poll for source changes.

      If this is `false`, the Pipeline will use a webhook to detect source changes instead.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


IJenkinsProvider (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IJenkinsProvider

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.IJenkinsProvider;

      .. code-tab:: javascript

         // IJenkinsProvider is an interface

      .. code-tab:: typescript

         import { IJenkinsProvider } from '@aws-cdk/aws-codepipeline-actions';



   A Jenkins provider.

   

   If you want to create a new Jenkins provider managed alongside your CDK code,

   instantiate the {@link JenkinsProvider} class directly.

   

   If you want to reference an already registered provider,

   use the {@link JenkinsProvider#import} method.



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: providerName

      :type: string *(readonly)*


   .. py:attribute:: serverUrl

      :type: string *(readonly)*


   .. py:attribute:: version

      :type: string *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


JenkinsBuildAction
^^^^^^^^^^^^^^^^^^

.. py:class:: JenkinsBuildAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.JenkinsBuildAction;

      .. code-tab:: javascript

         const { JenkinsBuildAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { JenkinsBuildAction } from '@aws-cdk/aws-codepipeline-actions';



   Jenkins build CodePipeline Action.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.BuildAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.JenkinsBuildActionProps`\ 

   .. py:method:: bind(_info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param _info: 
      :type _info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.BuildAction <@aws-cdk/aws-codepipeline.BuildAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


JenkinsBuildActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: JenkinsBuildActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.JenkinsBuildActionProps;

      .. code-tab:: javascript

         // JenkinsBuildActionProps is an interface

      .. code-tab:: typescript

         import { JenkinsBuildActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of {@link JenkinsBuildAction}.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps`\ 


   .. py:attribute:: outputArtifactName

      The name of the build's output artifact.



      :type: string *(optional)* *(readonly)*
      :default: an auto-generated name will be used


   .. py:attribute:: inputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps <@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps.inputArtifact>`

      The source to use as input for this build.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: jenkinsProvider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps <@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps.jenkinsProvider>`

      The Jenkins Provider for this Action.



      :type: :py:class:`~@aws-cdk/aws-codepipeline-actions.IJenkinsProvider`\  *(readonly)*


   .. py:attribute:: projectName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps <@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps.projectName>`

      The name of the project (sometimes also called job, or task)

      on your Jenkins installation that will be invoked by this Action.



      :type: string *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


JenkinsProvider
^^^^^^^^^^^^^^^

.. py:class:: JenkinsProvider(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.JenkinsProvider;

      .. code-tab:: javascript

         const { JenkinsProvider } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { JenkinsProvider } from '@aws-cdk/aws-codepipeline-actions';



   A class representing Jenkins providers.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.JenkinsProviderProps`\ 

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-codepipeline-actions.IJenkinsProvider

      Import a Jenkins provider registered either outside the CDK,

      or in a different CDK Stack.



      :param scope: the parent Construct for the new provider
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: the identifier of the new provider Construct
      :type id: string
      :param props: the properties used to identify the existing provider
      :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.JenkinsProviderImportProps`\ 
      :return: a new Construct representing a reference to an existing Jenkins provider
      :rtype: :py:class:`~@aws-cdk/aws-codepipeline-actions.IJenkinsProvider`\ 


   .. py:attribute:: providerName

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider.providerName`

      :type: string *(readonly)*


   .. py:attribute:: serverUrl

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider.serverUrl`

      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-codepipeline-actions.JenkinsProviderImportProps

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider <@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider.export>`

      :rtype: :py:class:`~@aws-cdk/aws-codepipeline-actions.JenkinsProviderImportProps`\ 


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider <@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider.version>`

      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


JenkinsProviderImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: JenkinsProviderImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.JenkinsProviderImportProps;

      .. code-tab:: javascript

         // JenkinsProviderImportProps is an interface

      .. code-tab:: typescript

         import { JenkinsProviderImportProps } from '@aws-cdk/aws-codepipeline-actions';



   Properties for importing an existing Jenkins provider.





   .. py:attribute:: providerName

      The name of the Jenkins provider that you set in the AWS CodePipeline plugin configuration of your Jenkins project.



      :type: string *(readonly)*


   .. py:attribute:: serverUrl

      The base URL of your Jenkins server.



      :type: string *(readonly)*


   .. py:attribute:: version

      The version of your provider.



      :type: string *(optional)* *(readonly)*
      :default: '1'


JenkinsProviderProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: JenkinsProviderProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.JenkinsProviderProps;

      .. code-tab:: javascript

         // JenkinsProviderProps is an interface

      .. code-tab:: typescript

         import { JenkinsProviderProps } from '@aws-cdk/aws-codepipeline-actions';





   .. py:attribute:: providerName

      The name of the Jenkins provider that you set in the AWS CodePipeline plugin configuration of your Jenkins project.



      :type: string *(readonly)*


   .. py:attribute:: serverUrl

      The base URL of your Jenkins server.



      :type: string *(readonly)*


   .. py:attribute:: forBuild

      Whether to immediately register a Jenkins Provider for the build category.

      The Provider will always be registered if you create a {@link JenkinsBuildAction}.



      :type: boolean *(optional)* *(readonly)*


   .. py:attribute:: forTest

      Whether to immediately register a Jenkins Provider for the test category.

      The Provider will always be registered if you create a {@link JenkinsTestAction}.



      :type: boolean *(optional)* *(readonly)*


   .. py:attribute:: version

      The version of your provider.



      :type: string *(optional)* *(readonly)*
      :default: '1'


JenkinsTestAction
^^^^^^^^^^^^^^^^^

.. py:class:: JenkinsTestAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.JenkinsTestAction;

      .. code-tab:: javascript

         const { JenkinsTestAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { JenkinsTestAction } from '@aws-cdk/aws-codepipeline-actions';



   Jenkins test CodePipeline Action.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.TestAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.JenkinsTestActionProps`\ 

   .. py:method:: bind(_info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param _info: 
      :type _info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.TestAction <@aws-cdk/aws-codepipeline.TestAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(optional)* *(readonly)*


JenkinsTestActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: JenkinsTestActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.JenkinsTestActionProps;

      .. code-tab:: javascript

         // JenkinsTestActionProps is an interface

      .. code-tab:: typescript

         import { JenkinsTestActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of {@link JenkinsTestAction}.



   :extends: :py:class:`~@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps`\ 


   .. py:attribute:: outputArtifactName

      The optional name of the primary output artifact.

      If you provide a value here,

      then the `outputArtifact` property of your Action will be non-null.

      If you don't, `outputArtifact` will be `null`.



      :type: string *(optional)* *(readonly)*
      :default: the Action will not have an output artifact


   .. py:attribute:: inputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps <@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps.inputArtifact>`

      The source to use as input for this build.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: jenkinsProvider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps <@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps.jenkinsProvider>`

      The Jenkins Provider for this Action.



      :type: :py:class:`~@aws-cdk/aws-codepipeline-actions.IJenkinsProvider`\  *(readonly)*


   .. py:attribute:: projectName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps <@aws-cdk/aws-codepipeline-actions.CommonJenkinsActionProps.projectName>`

      The name of the project (sometimes also called job, or task)

      on your Jenkins installation that will be invoked by this Action.



      :type: string *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


LambdaInvokeAction
^^^^^^^^^^^^^^^^^^

.. py:class:: LambdaInvokeAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.LambdaInvokeAction;

      .. code-tab:: javascript

         const { LambdaInvokeAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { LambdaInvokeAction } from '@aws-cdk/aws-codepipeline-actions';



   CodePipeline invoke Action that is provided by an AWS Lambda function.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.LambdaInvokeActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: outputArtifact(artifactName) -> @aws-cdk/aws-codepipeline.Artifact

      :param artifactName: 
      :type artifactName: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: outputArtifacts() -> @aws-cdk/aws-codepipeline.Artifact[]

      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ []


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


LambdaInvokeActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LambdaInvokeActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.LambdaInvokeActionProps;

      .. code-tab:: javascript

         // LambdaInvokeActionProps is an interface

      .. code-tab:: typescript

         import { LambdaInvokeActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link LambdaInvokeAction Lambda invoke CodePipeline Action}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: lambda

      The lambda function to invoke.



      :type: :py:class:`@aws-cdk/aws-lambda.IFunction`\  *(readonly)*


   .. py:attribute:: addPutJobResultPolicy

      Adds the "codepipeline:PutJobSuccessResult" and

      "codepipeline:PutJobFailureResult" for '*' resource to the Lambda

      execution role policy.

      

      NOTE: the reason we can't add the specific pipeline ARN as a resource is

      to avoid a cyclic dependency between the pipeline and the Lambda function

      (the pipeline references) the Lambda and the Lambda needs permissions on

      the pipeline.



      :type: boolean *(optional)* *(readonly)*
      :default: true


   .. py:attribute:: inputArtifacts

      The optional input Artifacts of the Action.

      A Lambda Action can have up to 5 inputs.

      The inputs will appear in the event passed to the Lambda,

      under the `'CodePipeline.job'.data.inputArtifacts` path.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(optional)* *(readonly)*
      :default: the Action will not have any inputs


   .. py:attribute:: outputArtifactNames

      The optional names of the output Artifacts of the Action.

      A Lambda Action can have up to 5 outputs.

      The outputs will appear in the event passed to the Lambda,

      under the `'CodePipeline.job'.data.outputArtifacts` path.

      It is the responsibility of the Lambda to upload ZIP files with the Artifact contents to the provided locations.



      :type: string[] *(optional)* *(readonly)*
      :default: the Action will not have any outputs


   .. py:attribute:: userParameters

      String to be used in the event data parameter passed to the Lambda

      function

      

      See an example JSON event in the CodePipeline documentation.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


ManualApprovalAction
^^^^^^^^^^^^^^^^^^^^

.. py:class:: ManualApprovalAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.ManualApprovalAction;

      .. code-tab:: javascript

         const { ManualApprovalAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { ManualApprovalAction } from '@aws-cdk/aws-codepipeline-actions';



   Manual approval action.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.ManualApprovalActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:attribute:: notificationTopic

      :type: :py:class:`@aws-cdk/aws-sns.ITopic`\  *(optional)* *(readonly)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


ManualApprovalActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ManualApprovalActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.ManualApprovalActionProps;

      .. code-tab:: javascript

         // ManualApprovalActionProps is an interface

      .. code-tab:: typescript

         import { ManualApprovalActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link ManualApprovalAction}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: additionalInformation

      Any additional information that you want to include in the notification email message.



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: notificationTopic

      Optional SNS topic to send notifications to when an approval is pending.



      :type: :py:class:`@aws-cdk/aws-sns.ITopic`\  *(optional)* *(readonly)*


   .. py:attribute:: notifyEmails

      A list of email addresses to subscribe to notifications when this Action is pending approval.

      If this has been provided, but not `notificationTopic`,

      a new Topic will be created.



      :type: string[] *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


S3DeployAction
^^^^^^^^^^^^^^

.. py:class:: S3DeployAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.S3DeployAction;

      .. code-tab:: javascript

         const { S3DeployAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { S3DeployAction } from '@aws-cdk/aws-codepipeline-actions';



   Deploys the sourceArtifact to Amazon S3.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.DeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.S3DeployActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


S3DeployActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: S3DeployActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.S3DeployActionProps;

      .. code-tab:: javascript

         // S3DeployActionProps is an interface

      .. code-tab:: typescript

         import { S3DeployActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link S3DeployAction S3 deploy Action}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: bucket

      The Amazon S3 bucket that is the deploy target.



      :type: :py:class:`@aws-cdk/aws-s3.IBucket`\  *(readonly)*


   .. py:attribute:: inputArtifact

      The inputArtifact to deploy to Amazon S3.



      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


   .. py:attribute:: extract

      Should the deploy action extract the artifact before deploying to Amazon S3.



      :type: boolean *(optional)* *(readonly)*
      :default: true


   .. py:attribute:: objectKey

      The key of the target object. This is required if extract is false.



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


S3SourceAction
^^^^^^^^^^^^^^

.. py:class:: S3SourceAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.S3SourceAction;

      .. code-tab:: javascript

         const { S3SourceAction } = require('@aws-cdk/aws-codepipeline-actions');

      .. code-tab:: typescript

         import { S3SourceAction } from '@aws-cdk/aws-codepipeline-actions';



   Source that is provided by a specific Amazon S3 object.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.SourceAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codepipeline-actions.S3SourceActionProps`\ 

   .. py:method:: bind(info)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param info: 
      :type info: :py:class:`@aws-cdk/aws-codepipeline.ActionBind`\ 


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionInputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionInputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: actionOutputArtifacts

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.actionOutputArtifacts>`

      *Protected property*

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\ [] *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.Action <@aws-cdk/aws-codepipeline.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.SourceAction <@aws-cdk/aws-codepipeline.SourceAction.outputArtifact>`

      :type: :py:class:`@aws-cdk/aws-codepipeline.Artifact`\  *(readonly)*


S3SourceActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: S3SourceActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Codepipeline.Actions;

      .. code-tab:: java

         import software.amazon.awscdk.services.codepipeline.actions.S3SourceActionProps;

      .. code-tab:: javascript

         // S3SourceActionProps is an interface

      .. code-tab:: typescript

         import { S3SourceActionProps } from '@aws-cdk/aws-codepipeline-actions';



   Construction properties of the {@link S3SourceAction S3 source Action}.



   :extends: :py:class:`@aws-cdk/aws-codepipeline.CommonActionProps`\ 


   .. py:attribute:: bucket

      The Amazon S3 bucket that stores the source code



      :type: :py:class:`@aws-cdk/aws-s3.IBucket`\  *(readonly)*


   .. py:attribute:: bucketKey

      The key within the S3 bucket that stores the source code.



      :type: string *(readonly)*


   .. py:attribute:: outputArtifactName

      The name of the source's output artifact. Output artifacts are used by CodePipeline as

      inputs into other actions.



      :type: string *(optional)* *(readonly)*
      :default: a name will be auto-generated


   .. py:attribute:: pollForSourceChanges

      Whether AWS CodePipeline should poll for source changes.

      If this is `false`, the Pipeline will use CloudWatch Events to detect source changes instead.

      Note that if this is `false`, you need to make sure to include the source Bucket in a CloudTrail Trail,

      as otherwise the CloudWatch Events will not be emitted.



      :type: boolean *(optional)* *(readonly)*
      :default: true


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline.CommonActionProps <@aws-cdk/aws-codepipeline.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)* *(readonly)*
      :default: 1


