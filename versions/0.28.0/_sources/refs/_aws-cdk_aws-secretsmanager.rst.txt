.. @jsii-pacmak:meta@ {"fingerprint":"vGXOoSX88xCIOm4z7r+z+MI36NTOU1jBtLpUYR43IOY="}

@aws-cdk/aws-secretsmanager
===========================

.. mdinclude:: ./__aws-cdk_aws-secretsmanager.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.SecretsManager/0.28.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.SecretsManager" Version="0.28.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.SecretsManager --version 0.28.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.SecretsManager" version="0.28.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/secretsmanager/0.28.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:secretsmanager:jar:0.28.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="secretsmanager" rev="0.28.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>secretsmanager</artifactId>
           <version>0.28.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:secretsmanager:0.28.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='secretsmanager', version='0.28.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-secretsmanager/v/0.28.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-secretsmanager@0.28.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-secretsmanager": "^0.28.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-secretsmanager@0.28.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-secretsmanager/v/0.28.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-secretsmanager@0.28.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-secretsmanager": "^0.28.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-secretsmanager@0.28.0



.. py:module:: @aws-cdk/aws-secretsmanager

AttachedSecret
^^^^^^^^^^^^^^

.. py:class:: AttachedSecret(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.AttachedSecret;

      .. code-tab:: javascript

         const { AttachedSecret } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { AttachedSecret } from '@aws-cdk/aws-secretsmanager';



   An attached secret.



   :extends: :py:class:`~@aws-cdk/aws-secretsmanager.SecretBase`\ 
   :implements: :py:class:`~@aws-cdk/aws-secretsmanager.ISecret`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-secretsmanager.AttachedSecretProps`\ 

   .. py:method:: export() -> @aws-cdk/aws-secretsmanager.SecretImportProps

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase.export`

      Exports this secret.



      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.SecretImportProps`\ 


   .. py:attribute:: secretArn

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.secretArn`

      The ARN of the secret in AWS Secrets Manager.



      :type: string *(readonly)*


   .. py:attribute:: encryptionKey

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.encryptionKey`

      The customer-managed encryption key that is used to encrypt this secret, if any. When not specified, the default

      KMS key for the account and region is being used.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


   .. py:method:: addRotationSchedule(id, options) -> @aws-cdk/aws-secretsmanager.RotationSchedule

      *Inherited from* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.addRotationSchedule>`

      Adds a rotation schedule to the secret.



      :param id: 
      :type id: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-secretsmanager.RotationScheduleOptions`\ 
      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.RotationSchedule`\ 


   .. py:method:: grantRead(grantee, [versionStages]) -> @aws-cdk/aws-iam.Grant

      *Inherited from* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.grantRead>`

      Grants reading the secret value to some role.



      :param grantee: 
      :type grantee: :py:class:`@aws-cdk/aws-iam.IGrantable`\ 
      :param versionStages: 
      :type versionStages: string[] *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-iam.Grant`\ 


   .. py:method:: secretJsonValue(jsonField) -> @aws-cdk/cdk.SecretValue

      *Inherited from* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.secretJsonValue>`

      Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`.



      :param jsonField: 
      :type jsonField: string
      :rtype: :py:class:`@aws-cdk/cdk.SecretValue`\ 


   .. py:attribute:: secretValue

      *Inherited from* :py:attr:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.secretValue>`

      Retrieve the value of the stored secret as a `SecretValue`.



      :type: :py:class:`@aws-cdk/cdk.SecretValue`\  *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


AttachedSecretOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AttachedSecretOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.AttachedSecretOptions;

      .. code-tab:: javascript

         // AttachedSecretOptions is an interface

      .. code-tab:: typescript

         import { AttachedSecretOptions } from '@aws-cdk/aws-secretsmanager';



   Options to add a secret attachment to a secret.





   .. py:attribute:: target

      The target to attach the secret to.



      :type: :py:class:`~@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget`\  *(readonly)*


AttachedSecretProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AttachedSecretProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.AttachedSecretProps;

      .. code-tab:: javascript

         // AttachedSecretProps is an interface

      .. code-tab:: typescript

         import { AttachedSecretProps } from '@aws-cdk/aws-secretsmanager';



   Construction properties for an AttachedSecret.



   :extends: :py:class:`~@aws-cdk/aws-secretsmanager.AttachedSecretOptions`\ 


   .. py:attribute:: secret

      The secret to attach to the target.



      :type: :py:class:`~@aws-cdk/aws-secretsmanager.ISecret`\  *(readonly)*


   .. py:attribute:: target

      *Inherited from* :py:attr:`@aws-cdk/aws-secretsmanager.AttachedSecretOptions <@aws-cdk/aws-secretsmanager.AttachedSecretOptions.target>`

      The target to attach the secret to.



      :type: :py:class:`~@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget`\  *(readonly)*


AttachmentTargetType (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AttachmentTargetType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.AttachmentTargetType;

      .. code-tab:: javascript

         const { AttachmentTargetType } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { AttachmentTargetType } from '@aws-cdk/aws-secretsmanager';



   The type of service or database that's being associated with the secret.



   .. py:data:: Instance

   A database instance



   .. py:data:: Cluster

   A database cluster




CfnResourcePolicy
^^^^^^^^^^^^^^^^^

.. py:class:: CfnResourcePolicy(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnResourcePolicy;

      .. code-tab:: javascript

         const { CfnResourcePolicy } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { CfnResourcePolicy } from '@aws-cdk/aws-secretsmanager';



   A CloudFormation `AWS::SecretsManager::ResourcePolicy`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps`\  *(readonly)*


   .. py:attribute:: resourcePolicySecretArn

      :type: string *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:attribute:: referenceToken

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.referenceToken>`

      Return a token that will CloudFormation { Ref } this stack element



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Token`\  *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.IResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnResourcePolicyProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnResourcePolicyProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnResourcePolicyProps;

      .. code-tab:: javascript

         // CfnResourcePolicyProps is an interface

      .. code-tab:: typescript

         import { CfnResourcePolicyProps } from '@aws-cdk/aws-secretsmanager';



   Properties for defining a `AWS::SecretsManager::ResourcePolicy`





   .. py:attribute:: resourcePolicy

      `AWS::SecretsManager::ResourcePolicy.ResourcePolicy`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(readonly)*


   .. py:attribute:: secretId

      `AWS::SecretsManager::ResourcePolicy.SecretId`



      :type: string *(readonly)*


CfnRotationSchedule
^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRotationSchedule(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnRotationSchedule;

      .. code-tab:: javascript

         const { CfnRotationSchedule } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { CfnRotationSchedule } from '@aws-cdk/aws-secretsmanager';



   A CloudFormation `AWS::SecretsManager::RotationSchedule`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps`\  *(readonly)*


   .. py:attribute:: rotationScheduleSecretArn

      :type: string *(readonly)*

   .. py:class:: RotationRulesProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.SecretsManager;

         .. code-tab:: java

            import software.amazon.awscdk.services.secretsmanager.CfnRotationSchedule.RotationRulesProperty;

         .. code-tab:: javascript

            // CfnRotationSchedule.RotationRulesProperty is an interface

         .. code-tab:: typescript

            import { CfnRotationSchedule.RotationRulesProperty } from '@aws-cdk/aws-secretsmanager';





      .. py:attribute:: automaticallyAfterDays

         `CfnRotationSchedule.RotationRulesProperty.AutomaticallyAfterDays`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:attribute:: referenceToken

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.referenceToken>`

      Return a token that will CloudFormation { Ref } this stack element



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Token`\  *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.IResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnRotationScheduleProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRotationScheduleProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnRotationScheduleProps;

      .. code-tab:: javascript

         // CfnRotationScheduleProps is an interface

      .. code-tab:: typescript

         import { CfnRotationScheduleProps } from '@aws-cdk/aws-secretsmanager';



   Properties for defining a `AWS::SecretsManager::RotationSchedule`





   .. py:attribute:: secretId

      `AWS::SecretsManager::RotationSchedule.SecretId`



      :type: string *(readonly)*


   .. py:attribute:: rotationLambdaArn

      `AWS::SecretsManager::RotationSchedule.RotationLambdaARN`



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: rotationRules

      `AWS::SecretsManager::RotationSchedule.RotationRules`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty`\  *(optional)* *(readonly)*


CfnSecret
^^^^^^^^^

.. py:class:: CfnSecret(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnSecret;

      .. code-tab:: javascript

         const { CfnSecret } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { CfnSecret } from '@aws-cdk/aws-secretsmanager';



   A CloudFormation `AWS::SecretsManager::Secret`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-secretsmanager.CfnSecretProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-secretsmanager.CfnSecretProps`\  *(readonly)*


   .. py:attribute:: secretArn

      :type: string *(readonly)*


   .. py:attribute:: tags

      The `TagManager` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. `Tag` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*

   .. py:class:: GenerateSecretStringProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.SecretsManager;

         .. code-tab:: java

            import software.amazon.awscdk.services.secretsmanager.CfnSecret.GenerateSecretStringProperty;

         .. code-tab:: javascript

            // CfnSecret.GenerateSecretStringProperty is an interface

         .. code-tab:: typescript

            import { CfnSecret.GenerateSecretStringProperty } from '@aws-cdk/aws-secretsmanager';





      .. py:attribute:: excludeCharacters

         `CfnSecret.GenerateSecretStringProperty.ExcludeCharacters`



         :type: string *(optional)* *(readonly)*


      .. py:attribute:: excludeLowercase

         `CfnSecret.GenerateSecretStringProperty.ExcludeLowercase`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*


      .. py:attribute:: excludeNumbers

         `CfnSecret.GenerateSecretStringProperty.ExcludeNumbers`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*


      .. py:attribute:: excludePunctuation

         `CfnSecret.GenerateSecretStringProperty.ExcludePunctuation`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*


      .. py:attribute:: excludeUppercase

         `CfnSecret.GenerateSecretStringProperty.ExcludeUppercase`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*


      .. py:attribute:: generateStringKey

         `CfnSecret.GenerateSecretStringProperty.GenerateStringKey`



         :type: string *(optional)* *(readonly)*


      .. py:attribute:: includeSpace

         `CfnSecret.GenerateSecretStringProperty.IncludeSpace`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*


      .. py:attribute:: passwordLength

         `CfnSecret.GenerateSecretStringProperty.PasswordLength`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*


      .. py:attribute:: requireEachIncludedType

         `CfnSecret.GenerateSecretStringProperty.RequireEachIncludedType`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)* *(readonly)*


      .. py:attribute:: secretStringTemplate

         `CfnSecret.GenerateSecretStringProperty.SecretStringTemplate`



         :type: string *(optional)* *(readonly)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:attribute:: referenceToken

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.referenceToken>`

      Return a token that will CloudFormation { Ref } this stack element



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Token`\  *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.IResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnSecretProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecretProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnSecretProps;

      .. code-tab:: javascript

         // CfnSecretProps is an interface

      .. code-tab:: typescript

         import { CfnSecretProps } from '@aws-cdk/aws-secretsmanager';



   Properties for defining a `AWS::SecretsManager::Secret`





   .. py:attribute:: description

      `AWS::SecretsManager::Secret.Description`



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: generateSecretString

      `AWS::SecretsManager::Secret.GenerateSecretString`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty`\  *(optional)* *(readonly)*


   .. py:attribute:: kmsKeyId

      `AWS::SecretsManager::Secret.KmsKeyId`



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: name

      `AWS::SecretsManager::Secret.Name`



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: secretString

      `AWS::SecretsManager::Secret.SecretString`



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: tags

      `AWS::SecretsManager::Secret.Tags`



      :type: :py:class:`@aws-cdk/cdk.CfnTag`\ [] *(optional)* *(readonly)*


CfnSecretTargetAttachment
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecretTargetAttachment(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnSecretTargetAttachment;

      .. code-tab:: javascript

         const { CfnSecretTargetAttachment } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { CfnSecretTargetAttachment } from '@aws-cdk/aws-secretsmanager';



   A CloudFormation `AWS::SecretsManager::SecretTargetAttachment`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps`\  *(readonly)*


   .. py:attribute:: secretTargetAttachmentSecretArn

      :type: string *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:attribute:: referenceToken

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.referenceToken>`

      Return a token that will CloudFormation { Ref } this stack element



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Token`\  *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.IResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnSecretTargetAttachmentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnSecretTargetAttachmentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.CfnSecretTargetAttachmentProps;

      .. code-tab:: javascript

         // CfnSecretTargetAttachmentProps is an interface

      .. code-tab:: typescript

         import { CfnSecretTargetAttachmentProps } from '@aws-cdk/aws-secretsmanager';



   Properties for defining a `AWS::SecretsManager::SecretTargetAttachment`





   .. py:attribute:: secretId

      `AWS::SecretsManager::SecretTargetAttachment.SecretId`



      :type: string *(readonly)*


   .. py:attribute:: targetId

      `AWS::SecretsManager::SecretTargetAttachment.TargetId`



      :type: string *(readonly)*


   .. py:attribute:: targetType

      `AWS::SecretsManager::SecretTargetAttachment.TargetType`



      :type: string *(readonly)*


ISecret (interface)
^^^^^^^^^^^^^^^^^^^

.. py:class:: ISecret

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.ISecret;

      .. code-tab:: javascript

         // ISecret is an interface

      .. code-tab:: typescript

         import { ISecret } from '@aws-cdk/aws-secretsmanager';



   A secret in AWS Secrets Manager.



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: secretArn

      The ARN of the secret in AWS Secrets Manager.



      :type: string *(readonly)*


   .. py:attribute:: secretValue

      Retrieve the value of the stored secret as a `SecretValue`.



      :type: :py:class:`@aws-cdk/cdk.SecretValue`\  *(readonly)*


   .. py:attribute:: encryptionKey

      The customer-managed encryption key that is used to encrypt this secret, if any. When not specified, the default

      KMS key for the account and region is being used.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


   .. py:method:: addRotationSchedule(id, options) -> @aws-cdk/aws-secretsmanager.RotationSchedule

      Adds a rotation schedule to the secret.



      :param id: 
      :type id: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-secretsmanager.RotationScheduleOptions`\ 
      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.RotationSchedule`\ 
      :abstract: Yes


   .. py:method:: export() -> @aws-cdk/aws-secretsmanager.SecretImportProps

      Exports this secret.



      :return: import props that can be passed back to ``Secret.import``.
      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.SecretImportProps`\ 
      :abstract: Yes


   .. py:method:: grantRead(grantee, [versionStages]) -> @aws-cdk/aws-iam.Grant

      Grants reading the secret value to some role.



      :param grantee: the principal being granted permission.
      :type grantee: :py:class:`@aws-cdk/aws-iam.IGrantable`\ 
      :param versionStages: the version stages the grant is limited to. If not specified, no restriction on the version stages is applied.
      :type versionStages: string[] *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-iam.Grant`\ 
      :abstract: Yes


   .. py:method:: secretJsonValue(key) -> @aws-cdk/cdk.SecretValue

      Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`.



      :param key: 
      :type key: string
      :rtype: :py:class:`@aws-cdk/cdk.SecretValue`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


ISecretAttachmentTarget (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ISecretAttachmentTarget

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.ISecretAttachmentTarget;

      .. code-tab:: javascript

         // ISecretAttachmentTarget is an interface

      .. code-tab:: typescript

         import { ISecretAttachmentTarget } from '@aws-cdk/aws-secretsmanager';



   A secret attachment target.





   .. py:method:: asSecretAttachmentTarget() -> @aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps

      Renders the target specifications.



      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps`\ 
      :abstract: Yes


RotationSchedule
^^^^^^^^^^^^^^^^

.. py:class:: RotationSchedule(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.RotationSchedule;

      .. code-tab:: javascript

         const { RotationSchedule } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { RotationSchedule } from '@aws-cdk/aws-secretsmanager';



   A rotation schedule.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-secretsmanager.RotationScheduleProps`\ 

   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


RotationScheduleOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: RotationScheduleOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.RotationScheduleOptions;

      .. code-tab:: javascript

         // RotationScheduleOptions is an interface

      .. code-tab:: typescript

         import { RotationScheduleOptions } from '@aws-cdk/aws-secretsmanager';



   Options to add a rotation schedule to a secret.





   .. py:attribute:: rotationLambda

      THe Lambda function that can rotate the secret.



      :type: :py:class:`@aws-cdk/aws-lambda.IFunction`\  *(readonly)*


   .. py:attribute:: automaticallyAfterDays

      Specifies the number of days after the previous rotation before

      Secrets Manager triggers the next automatic rotation.



      :type: number *(optional)* *(readonly)*
      :default: 30


RotationScheduleProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: RotationScheduleProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.RotationScheduleProps;

      .. code-tab:: javascript

         // RotationScheduleProps is an interface

      .. code-tab:: typescript

         import { RotationScheduleProps } from '@aws-cdk/aws-secretsmanager';



   Construction properties for a RotationSchedule.



   :extends: :py:class:`~@aws-cdk/aws-secretsmanager.RotationScheduleOptions`\ 


   .. py:attribute:: secret

      The secret to rotate.



      :type: :py:class:`~@aws-cdk/aws-secretsmanager.ISecret`\  *(readonly)*


   .. py:attribute:: rotationLambda

      *Inherited from* :py:attr:`@aws-cdk/aws-secretsmanager.RotationScheduleOptions <@aws-cdk/aws-secretsmanager.RotationScheduleOptions.rotationLambda>`

      THe Lambda function that can rotate the secret.



      :type: :py:class:`@aws-cdk/aws-lambda.IFunction`\  *(readonly)*


   .. py:attribute:: automaticallyAfterDays

      *Inherited from* :py:attr:`@aws-cdk/aws-secretsmanager.RotationScheduleOptions <@aws-cdk/aws-secretsmanager.RotationScheduleOptions.automaticallyAfterDays>`

      Specifies the number of days after the previous rotation before

      Secrets Manager triggers the next automatic rotation.



      :type: number *(optional)* *(readonly)*
      :default: 30


Secret
^^^^^^

.. py:class:: Secret(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.Secret;

      .. code-tab:: javascript

         const { Secret } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { Secret } from '@aws-cdk/aws-secretsmanager';



   Creates a new secret in AWS SecretsManager.



   :extends: :py:class:`~@aws-cdk/aws-secretsmanager.SecretBase`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-secretsmanager.SecretProps`\  *(optional)*

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-secretsmanager.ISecret

      Import an existing secret into the Stack.



      :param scope: the scope of the import.
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: the ID of the imported Secret in the construct tree.
      :type id: string
      :param props: the attributes of the imported secret.
      :type props: :py:class:`~@aws-cdk/aws-secretsmanager.SecretImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.ISecret`\ 


   .. py:method:: addTargetAttachment(id, options) -> @aws-cdk/aws-secretsmanager.AttachedSecret

      Adds a target attachment to the secret.



      :param id: 
      :type id: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-secretsmanager.AttachedSecretOptions`\ 
      :return: an AttachedSecret
      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.AttachedSecret`\ 


   .. py:method:: export() -> @aws-cdk/aws-secretsmanager.SecretImportProps

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase.export`

      Exports this secret.



      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.SecretImportProps`\ 


   .. py:attribute:: secretArn

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase.secretArn`

      The ARN of the secret in AWS Secrets Manager.



      :type: string *(readonly)*


   .. py:attribute:: encryptionKey

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase.encryptionKey`

      The customer-managed encryption key that is used to encrypt this secret, if any. When not specified, the default

      KMS key for the account and region is being used.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


   .. py:method:: addRotationSchedule(id, options) -> @aws-cdk/aws-secretsmanager.RotationSchedule

      *Inherited from* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.addRotationSchedule>`

      Adds a rotation schedule to the secret.



      :param id: 
      :type id: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-secretsmanager.RotationScheduleOptions`\ 
      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.RotationSchedule`\ 


   .. py:method:: grantRead(grantee, [versionStages]) -> @aws-cdk/aws-iam.Grant

      *Inherited from* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.grantRead>`

      Grants reading the secret value to some role.



      :param grantee: 
      :type grantee: :py:class:`@aws-cdk/aws-iam.IGrantable`\ 
      :param versionStages: 
      :type versionStages: string[] *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-iam.Grant`\ 


   .. py:method:: secretJsonValue(jsonField) -> @aws-cdk/cdk.SecretValue

      *Inherited from* :py:meth:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.secretJsonValue>`

      Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`.



      :param jsonField: 
      :type jsonField: string
      :rtype: :py:class:`@aws-cdk/cdk.SecretValue`\ 


   .. py:attribute:: secretValue

      *Inherited from* :py:attr:`@aws-cdk/aws-secretsmanager.SecretBase <@aws-cdk/aws-secretsmanager.SecretBase.secretValue>`

      Retrieve the value of the stored secret as a `SecretValue`.



      :type: :py:class:`@aws-cdk/cdk.SecretValue`\  *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


SecretAttachmentTargetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SecretAttachmentTargetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.SecretAttachmentTargetProps;

      .. code-tab:: javascript

         // SecretAttachmentTargetProps is an interface

      .. code-tab:: typescript

         import { SecretAttachmentTargetProps } from '@aws-cdk/aws-secretsmanager';



   Attachment target specifications.





   .. py:attribute:: targetId

      The id of the target to attach the secret to.



      :type: string *(readonly)*


   .. py:attribute:: targetType

      The type of the target to attach the secret to.



      :type: :py:class:`~@aws-cdk/aws-secretsmanager.AttachmentTargetType`\  *(readonly)*


SecretBase
^^^^^^^^^^

.. py:class:: SecretBase(scope, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.SecretBase;

      .. code-tab:: javascript

         const { SecretBase } = require('@aws-cdk/aws-secretsmanager');

      .. code-tab:: typescript

         import { SecretBase } from '@aws-cdk/aws-secretsmanager';



   The common behavior of Secrets. Users should not use this class directly, and instead use ``Secret``.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-secretsmanager.ISecret`\ 
   :abstract: Yes
   :param scope: The scope in which to define this construct
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: The scoped construct ID. Must be unique amongst siblings. If the ID includes a path separator (`/`), then it will be replaced by double dash `--`.
   :type id: string

   .. py:method:: addRotationSchedule(id, options) -> @aws-cdk/aws-secretsmanager.RotationSchedule

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.addRotationSchedule`

      Adds a rotation schedule to the secret.



      :param id: 
      :type id: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-secretsmanager.RotationScheduleOptions`\ 
      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.RotationSchedule`\ 


   .. py:method:: export() -> @aws-cdk/aws-secretsmanager.SecretImportProps

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.export`

      Exports this secret.



      :rtype: :py:class:`~@aws-cdk/aws-secretsmanager.SecretImportProps`\ 
      :abstract: Yes


   .. py:method:: grantRead(grantee, [versionStages]) -> @aws-cdk/aws-iam.Grant

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.grantRead`

      Grants reading the secret value to some role.



      :param grantee: 
      :type grantee: :py:class:`@aws-cdk/aws-iam.IGrantable`\ 
      :param versionStages: 
      :type versionStages: string[] *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-iam.Grant`\ 


   .. py:method:: secretJsonValue(jsonField) -> @aws-cdk/cdk.SecretValue

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.secretJsonValue`

      Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`.



      :param jsonField: 
      :type jsonField: string
      :rtype: :py:class:`@aws-cdk/cdk.SecretValue`\ 


   .. py:attribute:: secretArn

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.secretArn`

      The ARN of the secret in AWS Secrets Manager.



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: secretValue

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.secretValue`

      Retrieve the value of the stored secret as a `SecretValue`.



      :type: :py:class:`@aws-cdk/cdk.SecretValue`\  *(readonly)*


   .. py:attribute:: encryptionKey

      *Implements* :py:meth:`@aws-cdk/aws-secretsmanager.ISecret.encryptionKey`

      The customer-managed encryption key that is used to encrypt this secret, if any. When not specified, the default

      KMS key for the account and region is being used.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)* *(abstract)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


SecretImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SecretImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.SecretImportProps;

      .. code-tab:: javascript

         // SecretImportProps is an interface

      .. code-tab:: typescript

         import { SecretImportProps } from '@aws-cdk/aws-secretsmanager';



   Attributes required to import an existing secret into the Stack.





   .. py:attribute:: secretArn

      The ARN of the secret in SecretsManager.



      :type: string *(readonly)*


   .. py:attribute:: encryptionKey

      The encryption key that is used to encrypt the secret, unless the default SecretsManager key is used.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


SecretProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SecretProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.SecretProps;

      .. code-tab:: javascript

         // SecretProps is an interface

      .. code-tab:: typescript

         import { SecretProps } from '@aws-cdk/aws-secretsmanager';



   The properties required to create a new secret in AWS Secrets Manager.





   .. py:attribute:: description

      An optional, human-friendly description of the secret.



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: encryptionKey

      The customer-managed encryption key to use for encrypting the secret value.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*
      :default: a default KMS key for the account and region is used.


   .. py:attribute:: generateSecretString

      Configuration for how to generate a secret value.



      :type: :py:class:`~@aws-cdk/aws-secretsmanager.SecretStringGenerator`\  *(optional)* *(readonly)*
      :default: 32 characters with upper-case letters, lower-case letters, punctuation and numbers (at least one from each
category), per the default values of ``SecretStringGenerator``.


   .. py:attribute:: name

      A name for the secret. Note that deleting secrets from SecretsManager does not happen immediately, but after a 7 to

      30 days blackout period. During that period, it is not possible to create another secret that shares the same name.



      :type: string *(optional)* *(readonly)*
      :default: - a name is generated by CloudFormation.


SecretStringGenerator (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SecretStringGenerator

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SecretsManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.secretsmanager.SecretStringGenerator;

      .. code-tab:: javascript

         // SecretStringGenerator is an interface

      .. code-tab:: typescript

         import { SecretStringGenerator } from '@aws-cdk/aws-secretsmanager';



   Configuration to generate secrets such as passwords automatically.





   .. py:attribute:: excludeCharacters

      A string that includes characters that shouldn't be included in the generated password. The string can be a minimum

      of ``0`` and a maximum of ``4096`` characters long.



      :type: string *(optional)* *(readonly)*
      :default: no exclusions


   .. py:attribute:: excludeLowercase

      Specifies that the generated password shouldn't include lowercase letters.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: excludeNumbers

      Specifies that the generated password shouldn't include digits.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: excludePunctuation

      Specifies that the generated password shouldn't include punctuation characters.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: excludeUppercase

      Specifies that the generated password shouldn't include uppercase letters.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: generateStringKey

      The JSON key name that's used to add the generated password to the JSON structure specified by the

      ``secretStringTemplate`` parameter. If you specify ``generateStringKey`` then ``secretStringTemplate``

      must be also be specified.



      :type: string *(optional)* *(readonly)*


   .. py:attribute:: includeSpace

      Specifies that the generated password can include the space character.



      :type: boolean *(optional)* *(readonly)*
      :default: false


   .. py:attribute:: passwordLength

      The desired length of the generated password.



      :type: number *(optional)* *(readonly)*
      :default: 32


   .. py:attribute:: requireEachIncludedType

      Specifies whether the generated password must include at least one of every allowed character type.



      :type: boolean *(optional)* *(readonly)*
      :default: true


   .. py:attribute:: secretStringTemplate

      A properly structured JSON string that the generated password can be added to. The ``generateStringKey`` is

      combined with the generated random string and inserted into the JSON structure that's specified by this parameter.

      The merged JSON string is returned as the completed SecretString of the secret. If you specify ``secretStringTemplate``

      then ``generateStringKey`` must be also be specified.



      :type: string *(optional)* *(readonly)*


