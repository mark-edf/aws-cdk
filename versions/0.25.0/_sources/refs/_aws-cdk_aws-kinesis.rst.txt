.. @jsii-pacmak:meta@ {"fingerprint":"jONMAG+xFaer+10mkc/8eYtEBH9ivNdVAbw8Rbc8UGM="}

@aws-cdk/aws-kinesis
====================

.. mdinclude:: ./__aws-cdk_aws-kinesis.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.Kinesis/0.25.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.Kinesis" Version="0.25.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.Kinesis --version 0.25.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.Kinesis" version="0.25.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/kinesis/0.25.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:kinesis:jar:0.25.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="kinesis" rev="0.25.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>kinesis</artifactId>
           <version>0.25.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:kinesis:0.25.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='kinesis', version='0.25.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-kinesis/v/0.25.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-kinesis@0.25.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-kinesis": "^0.25.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-kinesis@0.25.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-kinesis/v/0.25.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-kinesis@0.25.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-kinesis": "^0.25.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-kinesis@0.25.0



.. py:module:: @aws-cdk/aws-kinesis

CfnStream
^^^^^^^^^

.. py:class:: CfnStream(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.CfnStream;

      .. code-tab:: javascript

         const { CfnStream } = require('@aws-cdk/aws-kinesis');

      .. code-tab:: typescript

         import { CfnStream } from '@aws-cdk/aws-kinesis';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-kinesis.CfnStreamProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-kinesis.CfnStreamProps`\  *(readonly)*


   .. py:attribute:: streamArn

      :type: string *(readonly)*


   .. py:attribute:: streamId

      :type: string *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*

   .. py:class:: StreamEncryptionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Kinesis;

         .. code-tab:: java

            import software.amazon.awscdk.services.kinesis.CfnStream.StreamEncryptionProperty;

         .. code-tab:: javascript

            // CfnStream.StreamEncryptionProperty is an interface

         .. code-tab:: typescript

            import { CfnStream.StreamEncryptionProperty } from '@aws-cdk/aws-kinesis';





      .. py:attribute:: encryptionType

         ``CfnStream.StreamEncryptionProperty.EncryptionType``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-encryptiontype


         :type: string


      .. py:attribute:: keyId

         ``CfnStream.StreamEncryptionProperty.KeyId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-keyid


         :type: string



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnStreamConsumer
^^^^^^^^^^^^^^^^^

.. py:class:: CfnStreamConsumer(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.CfnStreamConsumer;

      .. code-tab:: javascript

         const { CfnStreamConsumer } = require('@aws-cdk/aws-kinesis');

      .. code-tab:: typescript

         import { CfnStreamConsumer } from '@aws-cdk/aws-kinesis';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-kinesis.CfnStreamConsumerProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-kinesis.CfnStreamConsumerProps`\  *(readonly)*


   .. py:attribute:: streamConsumerArn

      :type: string *(readonly)*


   .. py:attribute:: streamConsumerConsumerArn

      :type: string *(readonly)*


   .. py:attribute:: streamConsumerConsumerCreationTimestamp

      :type: string *(readonly)*


   .. py:attribute:: streamConsumerConsumerName

      :type: string *(readonly)*


   .. py:attribute:: streamConsumerConsumerStatus

      :type: string *(readonly)*


   .. py:attribute:: streamConsumerStreamArn

      :type: string *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnStreamConsumerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnStreamConsumerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.CfnStreamConsumerProps;

      .. code-tab:: javascript

         // CfnStreamConsumerProps is an interface

      .. code-tab:: typescript

         import { CfnStreamConsumerProps } from '@aws-cdk/aws-kinesis';





   .. py:attribute:: consumerName

      ``AWS::Kinesis::StreamConsumer.ConsumerName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-consumername


      :type: string


   .. py:attribute:: streamArn

      ``AWS::Kinesis::StreamConsumer.StreamARN``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-streamarn


      :type: string


CfnStreamProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnStreamProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.CfnStreamProps;

      .. code-tab:: javascript

         // CfnStreamProps is an interface

      .. code-tab:: typescript

         import { CfnStreamProps } from '@aws-cdk/aws-kinesis';





   .. py:attribute:: shardCount

      ``AWS::Kinesis::Stream.ShardCount``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount


      :type: number or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: name

      ``AWS::Kinesis::Stream.Name``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name


      :type: string *(optional)*


   .. py:attribute:: retentionPeriodHours

      ``AWS::Kinesis::Stream.RetentionPeriodHours``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: streamEncryption

      ``AWS::Kinesis::Stream.StreamEncryption``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-kinesis.CfnStream.StreamEncryptionProperty`\  *(optional)*


   .. py:attribute:: tags

      ``AWS::Kinesis::Stream.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


IStream (interface)
^^^^^^^^^^^^^^^^^^^

.. py:class:: IStream

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.IStream;

      .. code-tab:: javascript

         // IStream is an interface

      .. code-tab:: typescript

         import { IStream } from '@aws-cdk/aws-kinesis';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 
   :extends: :py:class:`@aws-cdk/aws-logs.ILogSubscriptionDestination`\ 


   .. py:attribute:: streamArn

      The ARN of the stream.



      :type: string *(readonly)*


   .. py:attribute:: streamName

      The name of the stream



      :type: string *(readonly)*


   .. py:attribute:: encryptionKey

      Optional KMS encryption key associated with this stream.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-kinesis.StreamImportProps

      Exports this stream from the stack.



      :rtype: :py:class:`~@aws-cdk/aws-kinesis.StreamImportProps`\ 
      :abstract: Yes


   .. py:method:: grantRead([identity])

      Grant read permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to ues the key to decrypt the

      contents of the stream will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :abstract: Yes


   .. py:method:: grantReadWrite([identity])

      Grants read/write permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to use the key for

      encrypt/decrypt will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :abstract: Yes


   .. py:method:: grantWrite([identity])

      Grant write permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to ues the key to encrypt the

      contents of the stream will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :abstract: Yes


   .. py:method:: logSubscriptionDestination(sourceLogGroup) -> @aws-cdk/aws-logs.LogSubscriptionDestination

      *Inherited from* :py:meth:`@aws-cdk/aws-logs.ILogSubscriptionDestination <@aws-cdk/aws-logs.ILogSubscriptionDestination.logSubscriptionDestination>`

      Return the properties required to send subscription events to this destination.

      

      If necessary, the destination can use the properties of the SubscriptionFilter

      object itself to configure its permissions to allow the subscription to write

      to it.

      

      The destination may reconfigure its own permissions in response to this

      function call.



      :param sourceLogGroup: 
      :type sourceLogGroup: :py:class:`@aws-cdk/aws-logs.ILogGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-logs.LogSubscriptionDestination`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


Stream
^^^^^^

.. py:class:: Stream(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.Stream;

      .. code-tab:: javascript

         const { Stream } = require('@aws-cdk/aws-kinesis');

      .. code-tab:: typescript

         import { Stream } from '@aws-cdk/aws-kinesis';



   A Kinesis stream. Can be encrypted with a KMS key.



   :extends: :py:class:`~@aws-cdk/aws-kinesis.StreamBase`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-kinesis.StreamProps`\  *(optional)*

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-kinesis.IStream

      Creates a Stream construct that represents an external stream.



      :param scope: The parent creating construct (usually `this`).
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: The construct's name.
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-kinesis.StreamImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-kinesis.IStream`\ 


   .. py:method:: export() -> @aws-cdk/aws-kinesis.StreamImportProps

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.StreamBase.export`

      Exports this stream from the stack.



      :rtype: :py:class:`~@aws-cdk/aws-kinesis.StreamImportProps`\ 


   .. py:attribute:: streamArn

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.StreamBase.streamArn`

      The ARN of the stream.



      :type: string *(readonly)*


   .. py:attribute:: streamName

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.StreamBase.streamName`

      The name of the stream



      :type: string *(readonly)*


   .. py:attribute:: encryptionKey

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.StreamBase.encryptionKey`

      Optional KMS encryption key associated with this stream.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


   .. py:method:: grantRead([identity])

      *Inherited from* :py:meth:`@aws-cdk/aws-kinesis.StreamBase <@aws-cdk/aws-kinesis.StreamBase.grantRead>`

      Grant write permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to ues the key to decrypt the

      contents of the stream will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantReadWrite([identity])

      *Inherited from* :py:meth:`@aws-cdk/aws-kinesis.StreamBase <@aws-cdk/aws-kinesis.StreamBase.grantReadWrite>`

      Grants read/write permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to use the key for

      encrypt/decrypt will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantWrite([identity])

      *Inherited from* :py:meth:`@aws-cdk/aws-kinesis.StreamBase <@aws-cdk/aws-kinesis.StreamBase.grantWrite>`

      Grant read permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to ues the key to decrypt the

      contents of the stream will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: logSubscriptionDestination(sourceLogGroup) -> @aws-cdk/aws-logs.LogSubscriptionDestination

      *Inherited from* :py:meth:`@aws-cdk/aws-kinesis.StreamBase <@aws-cdk/aws-kinesis.StreamBase.logSubscriptionDestination>`

      Return the properties required to send subscription events to this destination.

      

      If necessary, the destination can use the properties of the SubscriptionFilter

      object itself to configure its permissions to allow the subscription to write

      to it.

      

      The destination may reconfigure its own permissions in response to this

      function call.



      :param sourceLogGroup: 
      :type sourceLogGroup: :py:class:`@aws-cdk/aws-logs.ILogGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-logs.LogSubscriptionDestination`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


StreamBase
^^^^^^^^^^

.. py:class:: StreamBase(scope, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.StreamBase;

      .. code-tab:: javascript

         const { StreamBase } = require('@aws-cdk/aws-kinesis');

      .. code-tab:: typescript

         import { StreamBase } from '@aws-cdk/aws-kinesis';



   Represents a Kinesis Stream.

   

   Streams can be either defined within this stack:

   

      new Stream(this, 'MyStream', { props });

   

   Or imported from an existing stream:

   

      Stream.import(this, 'MyImportedStream', { streamArn: ... });

   

   You can also export a stream and import it into another stack:

   

      const ref = myStream.export();

      Stream.import(this, 'MyImportedStream', ref);



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-kinesis.IStream`\ 
   :abstract: Yes
   :param scope: The scope in which to define this construct
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: The scoped construct ID. Must be unique amongst siblings. If the ID includes a path separator (`/`), then it will be replaced by double dash `--`.
   :type id: string

   .. py:method:: export() -> @aws-cdk/aws-kinesis.StreamImportProps

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.IStream.export`

      Exports this stream from the stack.



      :rtype: :py:class:`~@aws-cdk/aws-kinesis.StreamImportProps`\ 
      :abstract: Yes


   .. py:method:: grantRead([identity])

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.IStream.grantRead`

      Grant write permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to ues the key to decrypt the

      contents of the stream will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantReadWrite([identity])

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.IStream.grantReadWrite`

      Grants read/write permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to use the key for

      encrypt/decrypt will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantWrite([identity])

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.IStream.grantWrite`

      Grant read permissions for this stream and its contents to an IAM

      principal (Role/Group/User).

      

      If an encryption key is used, permission to ues the key to decrypt the

      contents of the stream will also be granted.



      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: logSubscriptionDestination(sourceLogGroup) -> @aws-cdk/aws-logs.LogSubscriptionDestination

      *Implements* :py:meth:`@aws-cdk/aws-logs.ILogSubscriptionDestination.logSubscriptionDestination`

      Return the properties required to send subscription events to this destination.

      

      If necessary, the destination can use the properties of the SubscriptionFilter

      object itself to configure its permissions to allow the subscription to write

      to it.

      

      The destination may reconfigure its own permissions in response to this

      function call.



      :param sourceLogGroup: 
      :type sourceLogGroup: :py:class:`@aws-cdk/aws-logs.ILogGroup`\ 
      :rtype: :py:class:`@aws-cdk/aws-logs.LogSubscriptionDestination`\ 


   .. py:attribute:: streamArn

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.IStream.streamArn`

      The ARN of the stream.



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: streamName

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.IStream.streamName`

      The name of the stream



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: encryptionKey

      *Implements* :py:meth:`@aws-cdk/aws-kinesis.IStream.encryptionKey`

      Optional KMS encryption key associated with this stream.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)* *(abstract)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


StreamEncryption (enum)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StreamEncryption

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.StreamEncryption;

      .. code-tab:: javascript

         const { StreamEncryption } = require('@aws-cdk/aws-kinesis');

      .. code-tab:: typescript

         import { StreamEncryption } from '@aws-cdk/aws-kinesis';



   What kind of server-side encryption to apply to this stream



   .. py:data:: Unencrypted

   Records in the stream are not encrypted.



   .. py:data:: Kms

   Server-side encryption with a KMS key managed by the user.

   If `encryptionKey` is specified, this key will be used, otherwise, one will be defined.




StreamImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StreamImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.StreamImportProps;

      .. code-tab:: javascript

         // StreamImportProps is an interface

      .. code-tab:: typescript

         import { StreamImportProps } from '@aws-cdk/aws-kinesis';



   A reference to a stream. The easiest way to instantiate is to call

   `stream.export()`. Then, the consumer can use `Stream.import(this, ref)` and

   get a `Stream`.





   .. py:attribute:: streamArn

      The ARN of the stream.



      :type: string


   .. py:attribute:: encryptionKey

      The KMS key securing the contents of the stream if encryption is enabled.



      :type: :py:class:`@aws-cdk/aws-kms.EncryptionKeyImportProps`\  *(optional)*


StreamProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StreamProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Kinesis;

      .. code-tab:: java

         import software.amazon.awscdk.services.kinesis.StreamProps;

      .. code-tab:: javascript

         // StreamProps is an interface

      .. code-tab:: typescript

         import { StreamProps } from '@aws-cdk/aws-kinesis';





   .. py:attribute:: encryption

      The kind of server-side encryption to apply to this stream.

      

      If you choose KMS, you can specify a KMS key via `encryptionKey`. If

      encryption key is not specified, a key will automatically be created.



      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamEncryption`\  *(optional)*
      :default: Unencrypted


   .. py:attribute:: encryptionKey

      External KMS key to use for stream encryption.

      

      The 'encryption' property must be set to "Kms".



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)*
      :default: If encryption is set to "Kms" and this property is undefined, a
new KMS key will be created and associated with this stream.


   .. py:attribute:: retentionPeriodHours

      The number of hours for the data records that are stored in shards to remain accessible.



      :type: number *(optional)*
      :default: 24


   .. py:attribute:: shardCount

      The number of shards for the stream.



      :type: number *(optional)*
      :default: 1


   .. py:attribute:: streamName

      Enforces a particular physical stream name.



      :type: string *(optional)*
      :default: <generated>


