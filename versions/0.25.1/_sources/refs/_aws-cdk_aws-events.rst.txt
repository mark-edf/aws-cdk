.. @jsii-pacmak:meta@ {"fingerprint":"q9k25J3UQDPXNRVkT9qV4P8qXP+sk3LvCIdBj/FkbFw="}

@aws-cdk/aws-events
===================

.. mdinclude:: ./__aws-cdk_aws-events.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.Events/0.25.1>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.Events" Version="0.25.1" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.Events --version 0.25.1

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.Events" version="0.25.1" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/events/0.25.1/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:events:jar:0.25.1'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="events" rev="0.25.1"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>events</artifactId>
           <version>0.25.1</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:events:0.25.1'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='events', version='0.25.1')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-events/v/0.25.1>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-events@0.25.1

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-events": "^0.25.1"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-events@0.25.1


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-events/v/0.25.1>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-events@0.25.1

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-events": "^0.25.1"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-events@0.25.1



.. py:module:: @aws-cdk/aws-events

CfnEventBusPolicy
^^^^^^^^^^^^^^^^^

.. py:class:: CfnEventBusPolicy(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.CfnEventBusPolicy;

      .. code-tab:: javascript

         const { CfnEventBusPolicy } = require('@aws-cdk/aws-events');

      .. code-tab:: typescript

         import { CfnEventBusPolicy } from '@aws-cdk/aws-events';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-events.CfnEventBusPolicyProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: eventBusPolicyId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-events.CfnEventBusPolicyProps`\  *(readonly)*

   .. py:class:: ConditionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnEventBusPolicy.ConditionProperty;

         .. code-tab:: javascript

            // CfnEventBusPolicy.ConditionProperty is an interface

         .. code-tab:: typescript

            import { CfnEventBusPolicy.ConditionProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: key

         ``CfnEventBusPolicy.ConditionProperty.Key``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-eventbuspolicy-condition.html#cfn-events-eventbuspolicy-condition-key


         :type: string *(optional)*


      .. py:attribute:: type

         ``CfnEventBusPolicy.ConditionProperty.Type``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-eventbuspolicy-condition.html#cfn-events-eventbuspolicy-condition-type


         :type: string *(optional)*


      .. py:attribute:: value

         ``CfnEventBusPolicy.ConditionProperty.Value``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-eventbuspolicy-condition.html#cfn-events-eventbuspolicy-condition-value


         :type: string *(optional)*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnEventBusPolicyProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnEventBusPolicyProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.CfnEventBusPolicyProps;

      .. code-tab:: javascript

         // CfnEventBusPolicyProps is an interface

      .. code-tab:: typescript

         import { CfnEventBusPolicyProps } from '@aws-cdk/aws-events';





   .. py:attribute:: action

      ``AWS::Events::EventBusPolicy.Action``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-action


      :type: string


   .. py:attribute:: principal

      ``AWS::Events::EventBusPolicy.Principal``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-principal


      :type: string


   .. py:attribute:: statementId

      ``AWS::Events::EventBusPolicy.StatementId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-statementid


      :type: string


   .. py:attribute:: condition

      ``AWS::Events::EventBusPolicy.Condition``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-condition


      :type: :py:class:`~@aws-cdk/aws-events.CfnEventBusPolicy.ConditionProperty`\  or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnRule
^^^^^^^

.. py:class:: CfnRule(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.CfnRule;

      .. code-tab:: javascript

         const { CfnRule } = require('@aws-cdk/aws-events');

      .. code-tab:: typescript

         import { CfnRule } from '@aws-cdk/aws-events';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-events.CfnRuleProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-events.CfnRuleProps`\  *(readonly)*


   .. py:attribute:: ruleArn

      :type: string *(readonly)*


   .. py:attribute:: ruleId

      :type: string *(readonly)*

   .. py:class:: EcsParametersProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnRule.EcsParametersProperty;

         .. code-tab:: javascript

            // CfnRule.EcsParametersProperty is an interface

         .. code-tab:: typescript

            import { CfnRule.EcsParametersProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: taskDefinitionArn

         ``CfnRule.EcsParametersProperty.TaskDefinitionArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-ecsparameters.html#cfn-events-rule-ecsparameters-taskdefinitionarn


         :type: string


      .. py:attribute:: taskCount

         ``CfnRule.EcsParametersProperty.TaskCount``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-ecsparameters.html#cfn-events-rule-ecsparameters-taskcount


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: InputTransformerProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnRule.InputTransformerProperty;

         .. code-tab:: javascript

            // CfnRule.InputTransformerProperty is an interface

         .. code-tab:: typescript

            import { CfnRule.InputTransformerProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: inputTemplate

         ``CfnRule.InputTransformerProperty.InputTemplate``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-inputtransformer.html#cfn-events-rule-inputtransformer-inputtemplate


         :type: string


      .. py:attribute:: inputPathsMap

         ``CfnRule.InputTransformerProperty.InputPathsMap``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-inputtransformer.html#cfn-events-rule-inputtransformer-inputpathsmap


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*


   .. py:class:: KinesisParametersProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnRule.KinesisParametersProperty;

         .. code-tab:: javascript

            // CfnRule.KinesisParametersProperty is an interface

         .. code-tab:: typescript

            import { CfnRule.KinesisParametersProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: partitionKeyPath

         ``CfnRule.KinesisParametersProperty.PartitionKeyPath``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-kinesisparameters.html#cfn-events-rule-kinesisparameters-partitionkeypath


         :type: string


   .. py:class:: RunCommandParametersProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnRule.RunCommandParametersProperty;

         .. code-tab:: javascript

            // CfnRule.RunCommandParametersProperty is an interface

         .. code-tab:: typescript

            import { CfnRule.RunCommandParametersProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: runCommandTargets

         ``CfnRule.RunCommandParametersProperty.RunCommandTargets``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandparameters.html#cfn-events-rule-runcommandparameters-runcommandtargets


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-events.CfnRule.RunCommandTargetProperty`\ )[]


   .. py:class:: RunCommandTargetProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnRule.RunCommandTargetProperty;

         .. code-tab:: javascript

            // CfnRule.RunCommandTargetProperty is an interface

         .. code-tab:: typescript

            import { CfnRule.RunCommandTargetProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: key

         ``CfnRule.RunCommandTargetProperty.Key``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandtarget.html#cfn-events-rule-runcommandtarget-key


         :type: string


      .. py:attribute:: values

         ``CfnRule.RunCommandTargetProperty.Values``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandtarget.html#cfn-events-rule-runcommandtarget-values


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


   .. py:class:: SqsParametersProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnRule.SqsParametersProperty;

         .. code-tab:: javascript

            // CfnRule.SqsParametersProperty is an interface

         .. code-tab:: typescript

            import { CfnRule.SqsParametersProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: messageGroupId

         ``CfnRule.SqsParametersProperty.MessageGroupId``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-sqsparameters.html#cfn-events-rule-sqsparameters-messagegroupid


         :type: string


   .. py:class:: TargetProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.Events;

         .. code-tab:: java

            import software.amazon.awscdk.services.events.CfnRule.TargetProperty;

         .. code-tab:: javascript

            // CfnRule.TargetProperty is an interface

         .. code-tab:: typescript

            import { CfnRule.TargetProperty } from '@aws-cdk/aws-events';





      .. py:attribute:: arn

         ``CfnRule.TargetProperty.Arn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-arn


         :type: string


      .. py:attribute:: id

         ``CfnRule.TargetProperty.Id``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-id


         :type: string


      .. py:attribute:: ecsParameters

         ``CfnRule.TargetProperty.EcsParameters``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-ecsparameters


         :type: :py:class:`~@aws-cdk/aws-events.CfnRule.EcsParametersProperty`\  or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: input

         ``CfnRule.TargetProperty.Input``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-input


         :type: string *(optional)*


      .. py:attribute:: inputPath

         ``CfnRule.TargetProperty.InputPath``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-inputpath


         :type: string *(optional)*


      .. py:attribute:: inputTransformer

         ``CfnRule.TargetProperty.InputTransformer``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-inputtransformer


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-events.CfnRule.InputTransformerProperty`\  *(optional)*


      .. py:attribute:: kinesisParameters

         ``CfnRule.TargetProperty.KinesisParameters``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-kinesisparameters


         :type: :py:class:`~@aws-cdk/aws-events.CfnRule.KinesisParametersProperty`\  or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: roleArn

         ``CfnRule.TargetProperty.RoleArn``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-rolearn


         :type: string *(optional)*


      .. py:attribute:: runCommandParameters

         ``CfnRule.TargetProperty.RunCommandParameters``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-runcommandparameters


         :type: :py:class:`~@aws-cdk/aws-events.CfnRule.RunCommandParametersProperty`\  or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: sqsParameters

         ``CfnRule.TargetProperty.SqsParameters``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-sqsparameters


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-events.CfnRule.SqsParametersProperty`\  *(optional)*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnRuleProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRuleProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.CfnRuleProps;

      .. code-tab:: javascript

         // CfnRuleProps is an interface

      .. code-tab:: typescript

         import { CfnRuleProps } from '@aws-cdk/aws-events';





   .. py:attribute:: description

      ``AWS::Events::Rule.Description``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-description


      :type: string *(optional)*


   .. py:attribute:: eventPattern

      ``AWS::Events::Rule.EventPattern``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-eventpattern


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: name

      ``AWS::Events::Rule.Name``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-name


      :type: string *(optional)*


   .. py:attribute:: roleArn

      ``AWS::Events::Rule.RoleArn``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-rolearn


      :type: string *(optional)*


   .. py:attribute:: scheduleExpression

      ``AWS::Events::Rule.ScheduleExpression``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-scheduleexpression


      :type: string *(optional)*


   .. py:attribute:: state

      ``AWS::Events::Rule.State``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-state


      :type: string *(optional)*


   .. py:attribute:: targets

      ``AWS::Events::Rule.Targets``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-targets


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-events.CfnRule.TargetProperty`\ )[] *(optional)*


EventPattern (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: EventPattern

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.EventPattern;

      .. code-tab:: javascript

         // EventPattern is an interface

      .. code-tab:: typescript

         import { EventPattern } from '@aws-cdk/aws-events';



   Events in Amazon CloudWatch Events are represented as JSON objects. For more

   information about JSON objects, see RFC 7159.

   

   Rules use event patterns to select events and route them to targets. A

   pattern either matches an event or it doesn't. Event patterns are represented

   as JSON objects with a structure that is similar to that of events, for

   example:

   

   It is important to remember the following about event pattern matching:

   

   - For a pattern to match an event, the event must contain all the field names

      listed in the pattern. The field names must appear in the event with the

      same nesting structure.

   

   - Other fields of the event not mentioned in the pattern are ignored;

      effectively, there is a ``"*": "*"`` wildcard for fields not mentioned.

   

   - The matching is exact (character-by-character), without case-folding or any

      other string normalization.

   

   - The values being matched follow JSON rules: Strings enclosed in quotes,

      numbers, and the unquoted keywords true, false, and null.

   

   - Number matching is at the string representation level. For example, 300,

      300.0, and 3.0e2 are not considered equal.





   .. py:attribute:: account

      The 12-digit number identifying an AWS account.



      :type: string[] *(optional)*


   .. py:attribute:: detail

      A JSON object, whose content is at the discretion of the service

      originating the event.



      :type: any *(optional)*


   .. py:attribute:: detailType

      Identifies, in combination with the source field, the fields and values

      that appear in the detail field.

      

      Represents the "detail-type" event field.



      :type: string[] *(optional)*


   .. py:attribute:: id

      A unique value is generated for every event. This can be helpful in

      tracing events as they move through rules to targets, and are processed.



      :type: string[] *(optional)*


   .. py:attribute:: region

      Identifies the AWS region where the event originated.



      :type: string[] *(optional)*


   .. py:attribute:: resources

      This JSON array contains ARNs that identify resources that are involved

      in the event. Inclusion of these ARNs is at the discretion of the

      service.

      

      For example, Amazon EC2 instance state-changes include Amazon EC2

      instance ARNs, Auto Scaling events include ARNs for both instances and

      Auto Scaling groups, but API calls with AWS CloudTrail do not include

      resource ARNs.



      :type: string[] *(optional)*


   .. py:attribute:: source

      Identifies the service that sourced the event. All events sourced from

      within AWS begin with "aws." Customer-generated events can have any value

      here, as long as it doesn't begin with "aws." We recommend the use of

      Java package-name style reverse domain-name strings.

      

      To find the correct value for source for an AWS service, see the table in

      AWS Service Namespaces. For example, the source value for Amazon

      CloudFront is aws.cloudfront.



      :type: string[] *(optional)*


   .. py:attribute:: time

      The event timestamp, which can be specified by the service originating

      the event. If the event spans a time interval, the service might choose

      to report the start time, so this value can be noticeably before the time

      the event is actually received.



      :type: string[] *(optional)*


   .. py:attribute:: version

      By default, this is set to 0 (zero) in all events.



      :type: string[] *(optional)*


EventRule
^^^^^^^^^

.. py:class:: EventRule(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.EventRule;

      .. code-tab:: javascript

         const { EventRule } = require('@aws-cdk/aws-events');

      .. code-tab:: typescript

         import { EventRule } from '@aws-cdk/aws-events';



   Defines a CloudWatch Event Rule in this stack.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-events.IEventRule`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-events.EventRuleProps`\  *(optional)*

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-events.IEventRule

      Imports a rule by ARN into this stack.



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-events.EventRuleImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-events.IEventRule`\ 


   .. py:method:: addEventPattern([eventPattern])

      Adds an event pattern filter to this rule. If a pattern was already specified,

      these values are merged into the existing pattern.

      

      For example, if the rule already contains the pattern:

      

          {

            "resources": [ "r1" ],

            "detail": {

              "hello": [ 1 ]

            }

          }

      

      And `addEventPattern` is called with the pattern:

      

          {

            "resources": [ "r2" ],

            "detail": {

              "foo": [ "bar" ]

            }

          }

      

      The resulting event pattern will be:

      

          {

            "resources": [ "r1", "r2" ],

            "detail": {

              "hello": [ 1 ],

              "foo": [ "bar" ]

            }

          }



      :param eventPattern: 
      :type eventPattern: :py:class:`~@aws-cdk/aws-events.EventPattern`\  *(optional)*


   .. py:method:: addTarget([target, [inputOptions]])

      Adds a target to the rule. The abstract class RuleTarget can be extended to define new

      targets.

      

      No-op if target is undefined.



      :param target: 
      :type target: :py:class:`~@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param inputOptions: 
      :type inputOptions: :py:class:`~@aws-cdk/aws-events.TargetInputTemplate`\  *(optional)*


   .. py:method:: export() -> @aws-cdk/aws-events.EventRuleImportProps

      *Implements* :py:meth:`@aws-cdk/aws-events.IEventRule.export`

      Exports this rule resource from this stack and returns an import token.



      :rtype: :py:class:`~@aws-cdk/aws-events.EventRuleImportProps`\ 


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :rtype: string[]


   .. py:attribute:: ruleArn

      *Implements* :py:meth:`@aws-cdk/aws-events.IEventRule.ruleArn`

      The value of the event rule Amazon Resource Name (ARN), such as

      arn:aws:events:us-east-2:123456789012:rule/example.



      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


EventRuleImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: EventRuleImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.EventRuleImportProps;

      .. code-tab:: javascript

         // EventRuleImportProps is an interface

      .. code-tab:: typescript

         import { EventRuleImportProps } from '@aws-cdk/aws-events';





   .. py:attribute:: eventRuleArn

      The value of the event rule Amazon Resource Name (ARN), such as

      arn:aws:events:us-east-2:123456789012:rule/example.



      :type: string


EventRuleProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: EventRuleProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.EventRuleProps;

      .. code-tab:: javascript

         // EventRuleProps is an interface

      .. code-tab:: typescript

         import { EventRuleProps } from '@aws-cdk/aws-events';





   .. py:attribute:: description

      A description of the rule's purpose.



      :type: string *(optional)*


   .. py:attribute:: enabled

      Indicates whether the rule is enabled.



      :type: boolean *(optional)*
      :default: Rule is enabled


   .. py:attribute:: eventPattern

      Describes which events CloudWatch Events routes to the specified target.

      These routed events are matched events. For more information, see Events

      and Event Patterns in the Amazon CloudWatch User Guide.



      :type: :py:class:`~@aws-cdk/aws-events.EventPattern`\  *(optional)*


   .. py:attribute:: ruleName

      A name for the rule. If you don't specify a name, AWS CloudFormation

      generates a unique physical ID and uses that ID for the rule name. For

      more information, see Name Type.



      :type: string *(optional)*


   .. py:attribute:: scheduleExpression

      The schedule or rate (frequency) that determines when CloudWatch Events

      runs the rule. For more information, see Schedule Expression Syntax for

      Rules in the Amazon CloudWatch User Guide.



      :type: string *(optional)*


   .. py:attribute:: targets

      Targets to invoke when this rule matches an event.

      

      Input will be the full matched event. If you wish to specify custom

      target input, use `addTarget(target[, inputOptions])`.



      :type: :py:class:`~@aws-cdk/aws-events.IEventRuleTarget`\ [] *(optional)*


EventRuleTargetProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: EventRuleTargetProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.EventRuleTargetProps;

      .. code-tab:: javascript

         // EventRuleTargetProps is an interface

      .. code-tab:: typescript

         import { EventRuleTargetProps } from '@aws-cdk/aws-events';





   .. py:attribute:: arn

      The Amazon Resource Name (ARN) of the target.



      :type: string


   .. py:attribute:: id

      A unique, user-defined identifier for the target. Acceptable values

      include alphanumeric characters, periods (.), hyphens (-), and

      underscores (_).



      :type: string


   .. py:attribute:: ecsParameters

      The Amazon ECS task definition and task count to use, if the event target

      is an Amazon ECS task.



      :type: :py:class:`~@aws-cdk/aws-events.CfnRule.EcsParametersProperty`\  *(optional)*


   .. py:attribute:: kinesisParameters

      Settings that control shard assignment, when the target is a Kinesis

      stream. If you don't include this parameter, eventId is used as the

      partition key.



      :type: :py:class:`~@aws-cdk/aws-events.CfnRule.KinesisParametersProperty`\  *(optional)*


   .. py:attribute:: roleArn

      The Amazon Resource Name (ARN) of the AWS Identity and Access Management

      (IAM) role to use for this target when the rule is triggered. If one rule

      triggers multiple targets, you can use a different IAM role for each

      target.



      :type: string *(optional)*


   .. py:attribute:: runCommandParameters

      Parameters used when the rule invokes Amazon EC2 Systems Manager Run

      Command.



      :type: :py:class:`~@aws-cdk/aws-events.CfnRule.RunCommandParametersProperty`\  *(optional)*


IEventRule (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IEventRule

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.IEventRule;

      .. code-tab:: javascript

         // IEventRule is an interface

      .. code-tab:: typescript

         import { IEventRule } from '@aws-cdk/aws-events';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: ruleArn

      The value of the event rule Amazon Resource Name (ARN), such as

      arn:aws:events:us-east-2:123456789012:rule/example.



      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-events.EventRuleImportProps

      Exports this rule resource from this stack and returns an import token.



      :rtype: :py:class:`~@aws-cdk/aws-events.EventRuleImportProps`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


IEventRuleTarget (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IEventRuleTarget

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.IEventRuleTarget;

      .. code-tab:: javascript

         // IEventRuleTarget is an interface

      .. code-tab:: typescript

         import { IEventRuleTarget } from '@aws-cdk/aws-events';



   An abstract target for EventRules.





   .. py:method:: asEventRuleTarget(ruleArn, ruleUniqueId) -> @aws-cdk/aws-events.EventRuleTargetProps

      Returns the rule target specification.

      NOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`.



      :param ruleArn: The ARN of the CloudWatch Event Rule that would trigger this target.
      :type ruleArn: string
      :param ruleUniqueId: A unique ID for this rule. Can be used to implement idempotency.
      :type ruleUniqueId: string
      :rtype: :py:class:`~@aws-cdk/aws-events.EventRuleTargetProps`\ 
      :abstract: Yes


TargetInputTemplate (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: TargetInputTemplate

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Events;

      .. code-tab:: java

         import software.amazon.awscdk.services.events.TargetInputTemplate;

      .. code-tab:: javascript

         // TargetInputTemplate is an interface

      .. code-tab:: typescript

         import { TargetInputTemplate } from '@aws-cdk/aws-events';



   Specifies settings that provide custom input to an Amazon CloudWatch Events

   rule target based on certain event data.





   .. py:attribute:: jsonTemplate

      Input template where you can use the values of the keys from

      inputPathsMap to customize the data sent to the target. Enclose each

      InputPathsMaps value in brackets: <value>

      

      This option is mutually exclusive with `textTemplate`.



      :type: any *(optional)*


   .. py:attribute:: pathsMap

      Map of JSON paths to be extracted from the event. These are key-value

      pairs, where each value is a JSON path. You must use JSON dot notation,

      not bracket notation.



      :type: string => string *(optional)*


   .. py:attribute:: textTemplate

      Input template where you can use the values of the keys from

      inputPathsMap to customize the data sent to the target. Enclose each

      InputPathsMaps value in brackets: <value>

      

      The value passed here will be double-quoted to indicate it's a string value.

      This option is mutually exclusive with `jsonTemplate`.



      :type: string *(optional)*


