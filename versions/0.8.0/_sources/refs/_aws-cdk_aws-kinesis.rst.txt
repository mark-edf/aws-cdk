.. @jsii-pacmak:meta@ {"fingerprint":"5cI1TVuywE0o3pREYSOMUCvMLNzPNVQhPKjJXuxFekc="}

@aws-cdk/aws-kinesis
====================

.. mdinclude:: ./__aws-cdk_aws-kinesis.README.md

Reference
---------

.. py:module:: @aws-cdk/aws-kinesis

Stream
^^^^^^

.. py:class:: Stream(parent, name, [props])

   A Kinesis stream. Can be encrypted with a KMS key.


   :extends: :py:class:`~@aws-cdk/aws-kinesis.StreamRef`
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-kinesis.StreamProps` or undefined

   .. py:attribute:: streamArn

      The ARN of the stream.


      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamArn` *(readonly)*


   .. py:attribute:: streamName

      The name of the stream


      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamName` *(readonly)*


   .. py:attribute:: encryptionKey

      Optional KMS encryption key associated with this stream.


      :type: :py:class:`@aws-cdk/aws-kms.EncryptionKeyRef` or undefined *(readonly)*


StreamArn
^^^^^^^^^

.. py:class:: StreamArn([valueOrFunction])

   :extends: :py:class:`@aws-cdk/cdk.Arn`
   :param valueOrFunction: 
   :type valueOrFunction: any or undefined

StreamEncryption (enum)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StreamEncryption

   .. py:data:: Unencrypted

   .. py:data:: Kms


StreamName
^^^^^^^^^^

.. py:class:: StreamName([valueOrFunction])

   The name of the stream.


   :extends: :py:class:`@aws-cdk/cdk.Token`
   :param valueOrFunction: 
   :type valueOrFunction: any or undefined

StreamProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StreamProps



   .. py:attribute:: streamName

      Enforces a particular physical stream name.


      :type: string or undefined


   .. py:attribute:: retentionPeriodHours

      The number of hours for the data records that are stored in shards to remain accessible.


      :type: number or undefined


   .. py:attribute:: shardCount

      The number of shards for the stream.


      :type: number or undefined


   .. py:attribute:: encryption

      The kind of server-side encryption to apply to this stream.  If you choose KMS, you can specify a KMS key via `encryptionKey`. If encryption key is not specified, a key will automatically be created.


      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamEncryption` or undefined


   .. py:attribute:: encryptionKey

      External KMS key to use for stream encryption.  The 'encryption' property must be set to "Kms".


      :type: :py:class:`@aws-cdk/aws-kms.EncryptionKeyRef` or undefined


StreamRef
^^^^^^^^^

.. py:class:: StreamRef(parent, name)

   Represents a Kinesis Stream.  Streams can be either defined within this stack:       new Stream(this, 'MyStream', { props });  Or imported from an existing stream:       StreamRef.import(this, 'MyImportedStream', { streamArn: ... });  You can also export a stream and import it into another stack:       const ref = myStream.export();      StreamRef.import(this, 'MyImportedStream', ref);


   :extends: :py:class:`@aws-cdk/cdk.Construct`
   :implements: :py:class:`@aws-cdk/aws-logs.ILogSubscriptionDestination`
   :abstract: Yes
   :param parent: The parent construct
   :type parent: :py:class:`@aws-cdk/cdk.Construct`
   :param name: 
   :type name: string

   .. py:staticmethod:: import(parent, name, props) -> @aws-cdk/aws-kinesis.StreamRef

      Creates a Stream construct that represents an external stream.


      :param parent: The parent creating construct (usually `this`).
      :type parent: :py:class:`@aws-cdk/cdk.Construct`
      :param name: The construct's name.
      :type name: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-kinesis.StreamRefProps`
      :rtype: :py:class:`~@aws-cdk/aws-kinesis.StreamRef`


   .. py:method:: export() -> @aws-cdk/aws-kinesis.StreamRefProps

      Exports this stream from the stack.


      :rtype: :py:class:`~@aws-cdk/aws-kinesis.StreamRefProps`


   .. py:method:: grantRead([identity])

      Grant write permissions for this stream and its contents to an IAM principal (Role/Group/User).  If an encryption key is used, permission to ues the key to decrypt the contents of the stream will also be granted.


      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IIdentityResource` or undefined


   .. py:method:: grantWrite([identity])

      Grant read permissions for this stream and its contents to an IAM principal (Role/Group/User).  If an encryption key is used, permission to ues the key to decrypt the contents of the stream will also be granted.


      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IIdentityResource` or undefined


   .. py:method:: grantReadWrite([identity])

      Grants read/write permissions for this stream and its contents to an IAM principal (Role/Group/User).  If an encryption key is used, permission to use the key for encrypt/decrypt will also be granted.


      :param identity: 
      :type identity: :py:class:`@aws-cdk/aws-iam.IIdentityResource` or undefined


   .. py:method:: logSubscriptionDestination(sourceLogGroup) -> @aws-cdk/aws-logs.LogSubscriptionDestination

      Return the properties required to send subscription events to this destination.  If necessary, the destination can use the properties of the SubscriptionFilter object itself to configure its permissions to allow the subscription to write to it.  The destination may reconfigure its own permissions in response to this function call.


      :param sourceLogGroup: 
      :type sourceLogGroup: :py:class:`@aws-cdk/aws-logs.LogGroup`
      :rtype: :py:class:`@aws-cdk/aws-logs.LogSubscriptionDestination`


   .. py:attribute:: streamArn

      The ARN of the stream.


      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamArn` *(readonly)* *(abstract)*


   .. py:attribute:: streamName

      The name of the stream


      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamName` *(readonly)* *(abstract)*


   .. py:attribute:: encryptionKey

      Optional KMS encryption key associated with this stream.


      :type: :py:class:`@aws-cdk/aws-kms.EncryptionKeyRef` or undefined *(readonly)* *(abstract)*


StreamRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StreamRefProps

   A reference to a stream. The easiest way to instantiate is to call `stream.export()`. Then, the consumer can use `Stream.import(this, ref)` and get a `Stream`.




   .. py:attribute:: streamArn

      The ARN of the stream.


      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamArn`


   .. py:attribute:: encryptionKey

      The KMS key securing the contents of the stream if encryption is enabled.


      :type: :py:class:`@aws-cdk/aws-kms.EncryptionKeyRefProps` or undefined



cloudformation
^^^^^^^^^^^^^^
.. py:module:: @aws-cdk/aws-kinesis.cloudformation

StreamResource
~~~~~~~~~~~~~~

.. py:class:: StreamResource(parent, name, properties)

   :extends: :py:class:`@aws-cdk/cdk.Resource`
   :param parent: the ``cdk.Construct`` this ``StreamResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``StreamResource``
   :type properties: :py:class:`~@aws-cdk/aws-kinesis.cloudformation.StreamResourceProps`

   .. py:method:: renderProperties() -> string => any

      :rtype: any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: streamArn

      :type: :py:class:`~@aws-cdk/aws-kinesis.StreamArn` *(readonly)*

   .. py:class:: StreamEncryptionProperty



      .. py:attribute:: encryptionType

         ``StreamResource.StreamEncryptionProperty.EncryptionType``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-encryptiontype


         :type: string or :py:class:`@aws-cdk/cdk.Token`


      .. py:attribute:: keyId

         ``StreamResource.StreamEncryptionProperty.KeyId``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-keyid


         :type: string or :py:class:`@aws-cdk/cdk.Token`



StreamResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: StreamResourceProps



   .. py:attribute:: shardCount

      ``AWS::Kinesis::Stream.ShardCount``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount


      :type: number or :py:class:`@aws-cdk/cdk.Token`


   .. py:attribute:: streamName

      ``AWS::Kinesis::Stream.Name``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name


      :type: string or :py:class:`@aws-cdk/cdk.Token` or undefined


   .. py:attribute:: retentionPeriodHours

      ``AWS::Kinesis::Stream.RetentionPeriodHours``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours


      :type: number or :py:class:`@aws-cdk/cdk.Token` or undefined


   .. py:attribute:: streamEncryption

      ``AWS::Kinesis::Stream.StreamEncryption``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption


      :type: :py:class:`@aws-cdk/cdk.Token` or :py:class:`~@aws-cdk/aws-kinesis.cloudformation.StreamResource.StreamEncryptionProperty` or undefined


   .. py:attribute:: tags

      ``AWS::Kinesis::Stream.Tags``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags


      :type: :py:class:`@aws-cdk/cdk.Token` or :py:class:`@aws-cdk/cdk.Token` or :py:class:`@aws-cdk/cdk.Tag` or undefined



.. py:currentmodule:: @aws-cdk/aws-kinesis

