.. @jsii-pacmak:meta@ {"fingerprint":"JegoMWZSQqjcoGrCu+2EjcqYbK5/PD52d1cPxhrZIkg="}

@aws-cdk/aws-neptune
====================

.. mdinclude:: ./__aws-cdk_aws-neptune.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.Neptune/0.10.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.Neptune" Version="0.10.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.Neptune --version 0.10.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.Neptune" version="0.10.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/neptune/0.10.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:neptune:jar:0.10.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="neptune" rev="0.10.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>neptune</artifactId>
           <version>0.10.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:neptune:0.10.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='neptune', version='0.10.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-neptune/v/0.10.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-neptune@0.10.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-neptune": "^0.10.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-neptune@0.10.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-neptune/v/0.10.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-neptune@0.10.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-neptune": "^0.10.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-neptune@0.10.0



.. py:module:: @aws-cdk/aws-neptune

NeptuneDatabase
^^^^^^^^^^^^^^^

.. py:class:: NeptuneDatabase(parent, name, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Neptune;

      .. code-tab:: java

         import software.amazon.awscdk.services.neptune.NeptuneDatabase;

      .. code-tab:: javascript

         const { NeptuneDatabase } = require('@aws-cdk/aws-neptune');

      .. code-tab:: typescript

         import { NeptuneDatabase } from '@aws-cdk/aws-neptune';



   Neptune Graph Database cluster  Creates a new Neptune database cluster with a given number of replicas.


   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: 
   :type name: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-neptune.NeptuneDatabaseProps`\ 

   .. py:attribute:: clusterEndpoint

      The endpoint to use for read/write operations


      :type: :py:class:`@aws-cdk/aws-rds.Endpoint`\  *(readonly)*


   .. py:attribute:: clusterIdentifier

      Identifier of the cluster


      :type: string *(readonly)*


   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:attribute:: instanceEndpoints

      Endpoints which address each individual replica.


      :type: :py:class:`@aws-cdk/aws-rds.Endpoint`\ [] *(readonly)*


   .. py:attribute:: instanceIdentifiers

      Identifiers of the replicas


      :type: string[] *(readonly)*


   .. py:attribute:: readerEndpoint

      Endpoint to use for load-balanced read-only operations.


      :type: :py:class:`@aws-cdk/aws-rds.Endpoint`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


NeptuneDatabaseProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: NeptuneDatabaseProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.Neptune;

      .. code-tab:: java

         import software.amazon.awscdk.services.neptune.NeptuneDatabaseProps;

      .. code-tab:: javascript

         // NeptuneDatabaseProps is an interface

      .. code-tab:: typescript

         import { NeptuneDatabaseProps } from '@aws-cdk/aws-neptune';



   Properties for a Neptune Graph Database Cluster




   .. py:attribute:: instanceProps

      Settings for the individual instances that are launched


      :type: :py:class:`@aws-cdk/aws-rds.InstanceProps`\  *(abstract)*


   .. py:attribute:: masterUser

      Username and password for the administrative user


      :type: :py:class:`@aws-cdk/aws-rds.Login`\  *(abstract)*


   .. py:attribute:: clusterIdentifier

      An optional identifier for the cluster  If not given, a name is generated.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: defaultDatabaseName

      Name of a database which is automatically created inside the cluster  If not given, no database is created.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: instanceIdentifierBase

      Base identifier for instances  Every replica is named by appending the replica number to this string, 1-based.  If not given, the clusterIdentifier is used with the word "Instance" appended.  If clusterIdentifier is also not given, the identifier is automatically generated.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: instances

      How many replicas/instances to create  Has to be at least 1. Default is 2.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: kmsKeyArn

      ARN of KMS key if you want to enable storage encryption


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: parameterGroup

      Parameter group with Neptune settings


      :type: :py:class:`@aws-cdk/aws-rds.ClusterParameterGroupRef`\  or ``undefined`` *(abstract)*


   .. py:attribute:: port

      What port to listen on


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: preferredMaintenanceWindow

      A daily time range in 24-hours UTC format in which backups preferably execute.  Must be at least 30 minutes long.  Example: '01:00-02:00'  If not given, an window is randomly.


      :type: string or ``undefined`` *(abstract)*


