.. @jsii-pacmak:meta@ {"fingerprint":"JsCvs80WYkrhfAMLE2A0qryoKK29VLDMqgwjnGad2BI="}

@aws-cdk/aws-sqs
================

.. mdinclude:: ./__aws-cdk_aws-sqs.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.SQS/0.22.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.SQS" Version="0.22.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.SQS --version 0.22.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.SQS" version="0.22.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/sqs/0.22.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:sqs:jar:0.22.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="sqs" rev="0.22.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>sqs</artifactId>
           <version>0.22.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:sqs:0.22.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='sqs', version='0.22.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-sqs/v/0.22.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-sqs@0.22.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-sqs": "^0.22.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-sqs@0.22.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-sqs/v/0.22.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-sqs@0.22.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-sqs": "^0.22.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-sqs@0.22.0



.. py:module:: @aws-cdk/aws-sqs

CfnQueue
^^^^^^^^

.. py:class:: CfnQueue(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.CfnQueue;

      .. code-tab:: javascript

         const { CfnQueue } = require('@aws-cdk/aws-sqs');

      .. code-tab:: typescript

         import { CfnQueue } from '@aws-cdk/aws-sqs';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-sqs.CfnQueueProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-sqs.CfnQueueProps`\  *(readonly)*


   .. py:attribute:: queueArn

      :type: string *(readonly)*


   .. py:attribute:: queueName

      :type: string *(readonly)*


   .. py:attribute:: queueUrl

      :type: string *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnQueuePolicy
^^^^^^^^^^^^^^

.. py:class:: CfnQueuePolicy(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.CfnQueuePolicy;

      .. code-tab:: javascript

         const { CfnQueuePolicy } = require('@aws-cdk/aws-sqs');

      .. code-tab:: typescript

         import { CfnQueuePolicy } from '@aws-cdk/aws-sqs';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-sqs.CfnQueuePolicyProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-sqs.CfnQueuePolicyProps`\  *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.



      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions)

      that should be added when a resource "depends on" this construct.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnQueuePolicyProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnQueuePolicyProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.CfnQueuePolicyProps;

      .. code-tab:: javascript

         // CfnQueuePolicyProps is an interface

      .. code-tab:: typescript

         import { CfnQueuePolicyProps } from '@aws-cdk/aws-sqs';





   .. py:attribute:: policyDocument

      ``AWS::SQS::QueuePolicy.PolicyDocument``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html#cfn-sqs-queuepolicy-policydoc


      :type: json or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: queues

      ``AWS::SQS::QueuePolicy.Queues``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html#cfn-sqs-queuepolicy-queues


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[]


CfnQueueProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnQueueProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.CfnQueueProps;

      .. code-tab:: javascript

         // CfnQueueProps is an interface

      .. code-tab:: typescript

         import { CfnQueueProps } from '@aws-cdk/aws-sqs';





   .. py:attribute:: contentBasedDeduplication

      ``AWS::SQS::Queue.ContentBasedDeduplication``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-contentbaseddeduplication


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: delaySeconds

      ``AWS::SQS::Queue.DelaySeconds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-delayseconds


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: fifoQueue

      ``AWS::SQS::Queue.FifoQueue``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-fifoqueue


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: kmsDataKeyReusePeriodSeconds

      ``AWS::SQS::Queue.KmsDataKeyReusePeriodSeconds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-kmsdatakeyreuseperiodseconds


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: kmsMasterKeyId

      ``AWS::SQS::Queue.KmsMasterKeyId``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-kmsmasterkeyid


      :type: string *(optional)*


   .. py:attribute:: maximumMessageSize

      ``AWS::SQS::Queue.MaximumMessageSize``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-maxmesgsize


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: messageRetentionPeriod

      ``AWS::SQS::Queue.MessageRetentionPeriod``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-msgretentionperiod


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: queueName

      ``AWS::SQS::Queue.QueueName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-name


      :type: string *(optional)*


   .. py:attribute:: receiveMessageWaitTimeSeconds

      ``AWS::SQS::Queue.ReceiveMessageWaitTimeSeconds``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-receivemsgwaittime


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: redrivePolicy

      ``AWS::SQS::Queue.RedrivePolicy``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-redrive


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: tags

      ``AWS::SQS::Queue.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#cfn-sqs-queue-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.Tag`\ )[] *(optional)*


   .. py:attribute:: visibilityTimeout

      ``AWS::SQS::Queue.VisibilityTimeout``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-visiblitytimeout


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


DeadLetterQueue (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: DeadLetterQueue

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.DeadLetterQueue;

      .. code-tab:: javascript

         // DeadLetterQueue is an interface

      .. code-tab:: typescript

         import { DeadLetterQueue } from '@aws-cdk/aws-sqs';



   Dead letter queue settings





   .. py:attribute:: maxReceiveCount

      The number of times a message can be unsuccesfully dequeued before being moved to the dead-letter queue.



      :type: number


   .. py:attribute:: queue

      The dead-letter queue to which Amazon SQS moves messages after the value of maxReceiveCount is exceeded.



      :type: :py:class:`~@aws-cdk/aws-sqs.IQueue`\ 


IQueue (interface)
^^^^^^^^^^^^^^^^^^

.. py:class:: IQueue

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.IQueue;

      .. code-tab:: javascript

         // IQueue is an interface

      .. code-tab:: typescript

         import { IQueue } from '@aws-cdk/aws-sqs';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 
   :extends: :py:class:`@aws-cdk/aws-s3-notifications.IBucketNotificationDestination`\ 
   :extends: :py:class:`@aws-cdk/aws-autoscaling-api.ILifecycleHookTarget`\ 


   .. py:attribute:: queueArn

      The ARN of this queue



      :type: string *(readonly)*


   .. py:attribute:: queueUrl

      The URL of this queue



      :type: string *(readonly)*


   .. py:attribute:: encryptionMasterKey

      If this queue is server-side encrypted, this is the KMS encryption key.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


   .. py:method:: addToResourcePolicy(statement)

      Adds a statement to the IAM resource policy associated with this queue.

      

      If this queue was created in this stack (`new Queue`), a queue policy

      will be automatically created upon the first call to `addToPolicy`. If

      the queue is improted (`Queue.import`), then this is a no-op.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 
      :abstract: Yes


   .. py:method:: export() -> @aws-cdk/aws-sqs.QueueImportProps

      Export a queue



      :rtype: :py:class:`~@aws-cdk/aws-sqs.QueueImportProps`\ 
      :abstract: Yes


   .. py:method:: grant(identity, *queueActions)

      Grant the actions defined in queueActions to the identity Principal given

      on this SQS queue resource.



      :param identity: Principal to grant right to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :param \*queueActions: The actions to grant
      :type \*queueActions: string
      :abstract: Yes


   .. py:method:: grantConsumeMessages([identity])

      Grant permissions to consume messages from a queue

      

      This will grant the following permissions:

      

         - sqs:ChangeMessageVisibility

         - sqs:ChangeMessageVisibilityBatch

         - sqs:DeleteMessage

         - sqs:ReceiveMessage

         - sqs:DeleteMessageBatch

         - sqs:GetQueueAttributes

         - sqs:GetQueueUrl



      :param identity: Principal to grant consume rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :abstract: Yes


   .. py:method:: grantPurge([identity])

      Grant an IAM principal permissions to purge all messages from the queue.

      

      This will grant the following permissions:

      

        - sqs:PurgeQueue

        - sqs:GetQueueAttributes

        - sqs:GetQueueUrl



      :param identity: Principal to grant send rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :abstract: Yes


   .. py:method:: grantSendMessages([identity])

      Grant access to send messages to a queue to the given identity.

      

      This will grant the following permissions:

      

        - sqs:SendMessage

        - sqs:SendMessageBatch

        - sqs:GetQueueAttributes

        - sqs:GetQueueUrl



      :param identity: Principal to grant send rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :abstract: Yes


   .. py:method:: asLifecycleHookTarget(lifecycleHook) -> @aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-autoscaling-api.ILifecycleHookTarget <@aws-cdk/aws-autoscaling-api.ILifecycleHookTarget.asLifecycleHookTarget>`

      Called when this object is used as the target of a lifecycle hook



      :param lifecycleHook: 
      :type lifecycleHook: :py:class:`@aws-cdk/aws-autoscaling-api.ILifecycleHook`\ 
      :rtype: :py:class:`@aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps`\ 
      :abstract: Yes


   .. py:method:: asBucketNotificationDestination(bucketArn, bucketId) -> @aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps

      *Inherited from* :py:meth:`@aws-cdk/aws-s3-notifications.IBucketNotificationDestination <@aws-cdk/aws-s3-notifications.IBucketNotificationDestination.asBucketNotificationDestination>`

      Registers this resource to receive notifications for the specified

      bucket. This method will only be called once for each destination/bucket

      pair and the result will be cached, so there is no need to implement

      idempotency in each destination.



      :param bucketArn: The ARN of the bucket
      :type bucketArn: string
      :param bucketId: A unique ID of this bucket in the stack
      :type bucketId: string
      :rtype: :py:class:`@aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


Queue
^^^^^

.. py:class:: Queue(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.Queue;

      .. code-tab:: javascript

         const { Queue } = require('@aws-cdk/aws-sqs');

      .. code-tab:: typescript

         import { Queue } from '@aws-cdk/aws-sqs';



   A new Amazon SQS queue



   :extends: :py:class:`~@aws-cdk/aws-sqs.QueueBase`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-sqs.QueueProps`\  *(optional)*

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-sqs.IQueue

      Import an existing queue



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-sqs.QueueImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-sqs.IQueue`\ 


   .. py:method:: export() -> @aws-cdk/aws-sqs.QueueImportProps

      *Implements* :py:meth:`@aws-cdk/aws-sqs.QueueBase.export`

      Export a queue



      :rtype: :py:class:`~@aws-cdk/aws-sqs.QueueImportProps`\ 


   .. py:attribute:: autoCreatePolicy

      *Implements* :py:meth:`@aws-cdk/aws-sqs.QueueBase.autoCreatePolicy`

      Controls automatic creation of policy objects.

      

      Set by subclasses.



      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: queueArn

      *Implements* :py:meth:`@aws-cdk/aws-sqs.QueueBase.queueArn`

      The ARN of this queue



      :type: string *(readonly)*


   .. py:attribute:: queueName

      The name of this queue



      :type: string *(readonly)*


   .. py:attribute:: queueUrl

      *Implements* :py:meth:`@aws-cdk/aws-sqs.QueueBase.queueUrl`

      The URL of this queue



      :type: string *(readonly)*


   .. py:attribute:: encryptionMasterKey

      *Implements* :py:meth:`@aws-cdk/aws-sqs.QueueBase.encryptionMasterKey`

      If this queue is encrypted, this is the KMS key.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)*


   .. py:method:: addToResourcePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-sqs.QueueBase <@aws-cdk/aws-sqs.QueueBase.addToResourcePolicy>`

      Adds a statement to the IAM resource policy associated with this queue.

      

      If this queue was created in this stack (`new Queue`), a queue policy

      will be automatically created upon the first call to `addToPolicy`. If

      the queue is improted (`Queue.import`), then this is a no-op.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: asBucketNotificationDestination(bucketArn, bucketId) -> @aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps

      *Inherited from* :py:meth:`@aws-cdk/aws-sqs.QueueBase <@aws-cdk/aws-sqs.QueueBase.asBucketNotificationDestination>`

      Allows using SQS queues as destinations for bucket notifications.

      Use `bucket.onEvent(event, queue)` to subscribe.



      :param bucketArn: The ARN of the notifying bucket.
      :type bucketArn: string
      :param bucketId: A unique ID for the notifying bucket.
      :type bucketId: string
      :rtype: :py:class:`@aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps`\ 


   .. py:method:: asLifecycleHookTarget(lifecycleHook) -> @aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps

      *Inherited from* :py:meth:`@aws-cdk/aws-sqs.QueueBase <@aws-cdk/aws-sqs.QueueBase.asLifecycleHookTarget>`

      Allow using SQS queues as lifecycle hook targets



      :param lifecycleHook: 
      :type lifecycleHook: :py:class:`@aws-cdk/aws-autoscaling-api.ILifecycleHook`\ 
      :rtype: :py:class:`@aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps`\ 


   .. py:method:: grant(identity, *queueActions)

      *Inherited from* :py:meth:`@aws-cdk/aws-sqs.QueueBase <@aws-cdk/aws-sqs.QueueBase.grant>`

      Grant the actions defined in queueActions to the identity Principal given

      on this SQS queue resource.



      :param identity: Principal to grant right to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :param \*queueActions: The actions to grant
      :type \*queueActions: string


   .. py:method:: grantConsumeMessages([identity])

      *Inherited from* :py:meth:`@aws-cdk/aws-sqs.QueueBase <@aws-cdk/aws-sqs.QueueBase.grantConsumeMessages>`

      Grant permissions to consume messages from a queue

      

      This will grant the following permissions:

      

         - sqs:ChangeMessageVisibility

         - sqs:ChangeMessageVisibilityBatch

         - sqs:DeleteMessage

         - sqs:ReceiveMessage

         - sqs:DeleteMessageBatch

         - sqs:GetQueueAttributes

         - sqs:GetQueueUrl



      :param identity: Principal to grant consume rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantPurge([identity])

      *Inherited from* :py:meth:`@aws-cdk/aws-sqs.QueueBase <@aws-cdk/aws-sqs.QueueBase.grantPurge>`

      Grant an IAM principal permissions to purge all messages from the queue.

      

      This will grant the following permissions:

      

        - sqs:PurgeQueue

        - sqs:GetQueueAttributes

        - sqs:GetQueueUrl



      :param identity: Principal to grant send rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantSendMessages([identity])

      *Inherited from* :py:meth:`@aws-cdk/aws-sqs.QueueBase <@aws-cdk/aws-sqs.QueueBase.grantSendMessages>`

      Grant access to send messages to a queue to the given identity.

      

      This will grant the following permissions:

      

        - sqs:SendMessage

        - sqs:SendMessageBatch

        - sqs:GetQueueAttributes

        - sqs:GetQueueUrl



      :param identity: Principal to grant send rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


QueueBase
^^^^^^^^^

.. py:class:: QueueBase(scope, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.QueueBase;

      .. code-tab:: javascript

         const { QueueBase } = require('@aws-cdk/aws-sqs');

      .. code-tab:: typescript

         import { QueueBase } from '@aws-cdk/aws-sqs';



   Reference to a new or existing Amazon SQS queue



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-sqs.IQueue`\ 
   :abstract: Yes
   :param scope: The scope in which to define this construct
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: The scoped construct ID. Must be unique amongst siblings. If the ID includes a path separator (`/`), then it will be replaced by double dash `--`.
   :type id: string

   .. py:method:: addToResourcePolicy(statement)

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.addToResourcePolicy`

      Adds a statement to the IAM resource policy associated with this queue.

      

      If this queue was created in this stack (`new Queue`), a queue policy

      will be automatically created upon the first call to `addToPolicy`. If

      the queue is improted (`Queue.import`), then this is a no-op.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: asBucketNotificationDestination(bucketArn, bucketId) -> @aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps

      *Implements* :py:meth:`@aws-cdk/aws-s3-notifications.IBucketNotificationDestination.asBucketNotificationDestination`

      Allows using SQS queues as destinations for bucket notifications.

      Use `bucket.onEvent(event, queue)` to subscribe.



      :param bucketArn: The ARN of the notifying bucket.
      :type bucketArn: string
      :param bucketId: A unique ID for the notifying bucket.
      :type bucketId: string
      :rtype: :py:class:`@aws-cdk/aws-s3-notifications.BucketNotificationDestinationProps`\ 


   .. py:method:: asLifecycleHookTarget(lifecycleHook) -> @aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps

      *Implements* :py:meth:`@aws-cdk/aws-autoscaling-api.ILifecycleHookTarget.asLifecycleHookTarget`

      Allow using SQS queues as lifecycle hook targets



      :param lifecycleHook: 
      :type lifecycleHook: :py:class:`@aws-cdk/aws-autoscaling-api.ILifecycleHook`\ 
      :rtype: :py:class:`@aws-cdk/aws-autoscaling-api.LifecycleHookTargetProps`\ 


   .. py:method:: export() -> @aws-cdk/aws-sqs.QueueImportProps

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.export`

      Export a queue



      :rtype: :py:class:`~@aws-cdk/aws-sqs.QueueImportProps`\ 
      :abstract: Yes


   .. py:method:: grant(identity, *queueActions)

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.grant`

      Grant the actions defined in queueActions to the identity Principal given

      on this SQS queue resource.



      :param identity: Principal to grant right to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*
      :param \*queueActions: The actions to grant
      :type \*queueActions: string


   .. py:method:: grantConsumeMessages([identity])

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.grantConsumeMessages`

      Grant permissions to consume messages from a queue

      

      This will grant the following permissions:

      

         - sqs:ChangeMessageVisibility

         - sqs:ChangeMessageVisibilityBatch

         - sqs:DeleteMessage

         - sqs:ReceiveMessage

         - sqs:DeleteMessageBatch

         - sqs:GetQueueAttributes

         - sqs:GetQueueUrl



      :param identity: Principal to grant consume rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantPurge([identity])

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.grantPurge`

      Grant an IAM principal permissions to purge all messages from the queue.

      

      This will grant the following permissions:

      

        - sqs:PurgeQueue

        - sqs:GetQueueAttributes

        - sqs:GetQueueUrl



      :param identity: Principal to grant send rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:method:: grantSendMessages([identity])

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.grantSendMessages`

      Grant access to send messages to a queue to the given identity.

      

      This will grant the following permissions:

      

        - sqs:SendMessage

        - sqs:SendMessageBatch

        - sqs:GetQueueAttributes

        - sqs:GetQueueUrl



      :param identity: Principal to grant send rights to
      :type identity: :py:class:`@aws-cdk/aws-iam.IPrincipal`\  *(optional)*


   .. py:attribute:: autoCreatePolicy

      Controls automatic creation of policy objects.

      

      Set by subclasses.



      *Protected property*

      :type: boolean *(readonly)* *(abstract)*


   .. py:attribute:: queueArn

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.queueArn`

      The ARN of this queue



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: queueUrl

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.queueUrl`

      The URL of this queue



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: encryptionMasterKey

      *Implements* :py:meth:`@aws-cdk/aws-sqs.IQueue.encryptionMasterKey`

      If this queue is server-side encrypted, this is the KMS encryption key.



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)* *(readonly)* *(abstract)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


QueueEncryption (enum)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: QueueEncryption

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.QueueEncryption;

      .. code-tab:: javascript

         const { QueueEncryption } = require('@aws-cdk/aws-sqs');

      .. code-tab:: typescript

         import { QueueEncryption } from '@aws-cdk/aws-sqs';



   What kind of encryption to apply to this queue



   .. py:data:: Unencrypted

   Messages in the queue are not encrypted



   .. py:data:: KmsManaged

   Server-side KMS encryption with a master key managed by SQS.



   .. py:data:: Kms

   Server-side encryption with a KMS key managed by the user.

   

   If `encryptionKey` is specified, this key will be used, otherwise, one will be defined.




QueueImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: QueueImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.QueueImportProps;

      .. code-tab:: javascript

         // QueueImportProps is an interface

      .. code-tab:: typescript

         import { QueueImportProps } from '@aws-cdk/aws-sqs';



   Reference to a queue





   .. py:attribute:: queueArn

      The ARN of the queue.



      :type: string


   .. py:attribute:: queueUrl

      The URL of the queue.



      :type: string


   .. py:attribute:: keyArn

      KMS encryption key, if this queue is server-side encrypted by a KMS key.



      :type: string *(optional)*


   .. py:attribute:: queueName

      The name of the queue.



      :type: string *(optional)*
      :default: if queue name is not specified, the name will be derived from the queue ARN


QueuePolicy
^^^^^^^^^^^

.. py:class:: QueuePolicy(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.QueuePolicy;

      .. code-tab:: javascript

         const { QueuePolicy } = require('@aws-cdk/aws-sqs');

      .. code-tab:: typescript

         import { QueuePolicy } from '@aws-cdk/aws-sqs';



   Applies a policy to SQS queues.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-sqs.QueuePolicyProps`\ 

   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      Allows adding QueuePolicy as a dependency.



      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: document

      The IAM policy document for this policy.



      :type: :py:class:`@aws-cdk/aws-iam.PolicyDocument`\  *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


QueuePolicyProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: QueuePolicyProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.QueuePolicyProps;

      .. code-tab:: javascript

         // QueuePolicyProps is an interface

      .. code-tab:: typescript

         import { QueuePolicyProps } from '@aws-cdk/aws-sqs';





   .. py:attribute:: queues

      The set of queues this policy applies to.



      :type: :py:class:`~@aws-cdk/aws-sqs.IQueue`\ []


QueueProps (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: QueueProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.SQS;

      .. code-tab:: java

         import software.amazon.awscdk.services.sqs.QueueProps;

      .. code-tab:: javascript

         // QueueProps is an interface

      .. code-tab:: typescript

         import { QueueProps } from '@aws-cdk/aws-sqs';



   Properties for creating a new Queue





   .. py:attribute:: contentBasedDeduplication

      Specifies whether to enable content-based deduplication.

      

      During the deduplication interval (5 minutes), Amazon SQS treats

      messages that are sent with identical content (excluding attributes) as

      duplicates and delivers only one copy of the message.

      

      If you don't enable content-based deduplication and you want to deduplicate

      messages, provide an explicit deduplication ID in your SendMessage() call.

      

      (Only applies to FIFO queues.)



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: dataKeyReuseSec

      The length of time that Amazon SQS reuses a data key before calling KMS again.

      

      The value must be an integer between 60 (1 minute) and 86,400 (24

      hours). The default is 300 (5 minutes).



      :type: number *(optional)*
      :default: 300 (5 minutes)


   .. py:attribute:: deadLetterQueue

      Send messages to this queue if they were unsuccessfully dequeued a number of times.



      :type: :py:class:`~@aws-cdk/aws-sqs.DeadLetterQueue`\  *(optional)*
      :default: no dead-letter queue


   .. py:attribute:: deliveryDelaySec

      The time in seconds that the delivery of all messages in the queue is delayed.

      

      You can specify an integer value of 0 to 900 (15 minutes). The default

      value is 0.



      :type: number *(optional)*
      :default: 0


   .. py:attribute:: encryption

      Whether the contents of the queue are encrypted, and by what type of key.

      

      Be aware that encryption is not available in all regions, please see the docs

      for current availability details.



      :type: :py:class:`~@aws-cdk/aws-sqs.QueueEncryption`\  *(optional)*
      :default: Unencrypted


   .. py:attribute:: encryptionMasterKey

      External KMS master key to use for queue encryption.

      

      Individual messages will be encrypted using data keys. The data keys in

      turn will be encrypted using this key, and reused for a maximum of

      `dataKeyReuseSecs` seconds.

      

      The 'encryption' property must be either not specified or set to "Kms".

      An error will be emitted if encryption is set to "Unencrypted" or

      "KmsManaged".



      :type: :py:class:`@aws-cdk/aws-kms.IEncryptionKey`\  *(optional)*
      :default: If encryption is set to KMS and not specified, a key will be created.


   .. py:attribute:: fifo

      Whether this a first-in-first-out (FIFO) queue.



      :type: boolean *(optional)*
      :default: false, unless queueName ends in '.fifo' or 'contentBasedDeduplication' is true.


   .. py:attribute:: maxMessageSizeBytes

      The limit of how many bytes that a message can contain before Amazon SQS rejects it.

      

      You can specify an integer value from 1024 bytes (1 KiB) to 262144 bytes

      (256 KiB). The default value is 262144 (256 KiB).



      :type: number *(optional)*
      :default: 256KiB


   .. py:attribute:: queueName

      A name for the queue.

      

      If specified and this is a FIFO queue, must end in the string '.fifo'.



      :type: string *(optional)*
      :default: CloudFormation-generated name


   .. py:attribute:: receiveMessageWaitTimeSec

      Default wait time for ReceiveMessage calls.

      

      Does not wait if set to 0, otherwise waits this amount of seconds

      by default for messages to arrive.

      

      For more information, see Amazon SQS Long Poll.



      :type: number *(optional)*
      :default: 0


   .. py:attribute:: retentionPeriodSec

      The number of seconds that Amazon SQS retains a message.

      

      You can specify an integer value from 60 seconds (1 minute) to 1209600

      seconds (14 days). The default value is 345600 seconds (4 days).



      :type: number *(optional)*
      :default: 345600 seconds (4 days)


   .. py:attribute:: visibilityTimeoutSec

      Timeout of processing a single message.

      

      After dequeuing, the processor has this much time to handle the message

      and delete it from the queue before it becomes visible again for dequeueing

      by another processor.

      

      Values must be from 0 to 43200 seconds (12 hours). If you don't specify

      a value, AWS CloudFormation uses the default value of 30 seconds.



      :type: number *(optional)*
      :default: 30


