.. @jsii-pacmak:meta@ {"fingerprint":"WyG+J3W//IsctaX9vD99ZPgHCukYm6pdG14ITL18qW0="}

@aws-cdk/aws-cloudformation
===========================

.. mdinclude:: ./__aws-cdk_aws-cloudformation.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.CloudFormation/0.25.2>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.CloudFormation" Version="0.25.2" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.CloudFormation --version 0.25.2

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.CloudFormation" version="0.25.2" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/cloudformation/0.25.2/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:cloudformation:jar:0.25.2'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="cloudformation" rev="0.25.2"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>cloudformation</artifactId>
           <version>0.25.2</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:cloudformation:0.25.2'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='cloudformation', version='0.25.2')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-cloudformation/v/0.25.2>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-cloudformation@0.25.2

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-cloudformation": "^0.25.2"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-cloudformation@0.25.2


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-cloudformation/v/0.25.2>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-cloudformation@0.25.2

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-cloudformation": "^0.25.2"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-cloudformation@0.25.2



.. py:module:: @aws-cdk/aws-cloudformation

CfnCustomResource
^^^^^^^^^^^^^^^^^

.. py:class:: CfnCustomResource(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnCustomResource;

      .. code-tab:: javascript

         const { CfnCustomResource } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { CfnCustomResource } from '@aws-cdk/aws-cloudformation';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.CfnCustomResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-cloudformation.CfnCustomResourceProps`\  *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnCustomResourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnCustomResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnCustomResourceProps;

      .. code-tab:: javascript

         // CfnCustomResourceProps is an interface

      .. code-tab:: typescript

         import { CfnCustomResourceProps } from '@aws-cdk/aws-cloudformation';





   .. py:attribute:: serviceToken

      ``AWS::CloudFormation::CustomResource.ServiceToken``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#cfn-customresource-servicetoken


      :type: string


CfnMacro
^^^^^^^^

.. py:class:: CfnMacro(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnMacro;

      .. code-tab:: javascript

         const { CfnMacro } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { CfnMacro } from '@aws-cdk/aws-cloudformation';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.CfnMacroProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: macroName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-cloudformation.CfnMacroProps`\  *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnMacroProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnMacroProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnMacroProps;

      .. code-tab:: javascript

         // CfnMacroProps is an interface

      .. code-tab:: typescript

         import { CfnMacroProps } from '@aws-cdk/aws-cloudformation';





   .. py:attribute:: functionName

      ``AWS::CloudFormation::Macro.FunctionName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-functionname


      :type: string


   .. py:attribute:: name

      ``AWS::CloudFormation::Macro.Name``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-name


      :type: string


   .. py:attribute:: description

      ``AWS::CloudFormation::Macro.Description``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-description


      :type: string *(optional)*


   .. py:attribute:: logGroupName

      ``AWS::CloudFormation::Macro.LogGroupName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-loggroupname


      :type: string *(optional)*


   .. py:attribute:: logRoleArn

      ``AWS::CloudFormation::Macro.LogRoleARN``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-logrolearn


      :type: string *(optional)*


CfnStack
^^^^^^^^

.. py:class:: CfnStack(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnStack;

      .. code-tab:: javascript

         const { CfnStack } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { CfnStack } from '@aws-cdk/aws-cloudformation';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.CfnStackProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-cloudformation.CfnStackProps`\  *(readonly)*


   .. py:attribute:: stackId

      :type: string *(readonly)*


   .. py:attribute:: tags

      The ``TagManager`` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. ``Tag`` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnStackProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnStackProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnStackProps;

      .. code-tab:: javascript

         // CfnStackProps is an interface

      .. code-tab:: typescript

         import { CfnStackProps } from '@aws-cdk/aws-cloudformation';





   .. py:attribute:: templateUrl

      ``AWS::CloudFormation::Stack.TemplateURL``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-templateurl


      :type: string


   .. py:attribute:: notificationArns

      ``AWS::CloudFormation::Stack.NotificationARNs``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-notificationarns


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: parameters

      ``AWS::CloudFormation::Stack.Parameters``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-parameters


      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*


   .. py:attribute:: tags

      ``AWS::CloudFormation::Stack.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.CfnTag`\ )[] *(optional)*


   .. py:attribute:: timeoutInMinutes

      ``AWS::CloudFormation::Stack.TimeoutInMinutes``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-timeoutinminutes


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnWaitCondition
^^^^^^^^^^^^^^^^

.. py:class:: CfnWaitCondition(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnWaitCondition;

      .. code-tab:: javascript

         const { CfnWaitCondition } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { CfnWaitCondition } from '@aws-cdk/aws-cloudformation';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.CfnWaitConditionProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-cloudformation.CfnWaitConditionProps`\  *(readonly)*


   .. py:attribute:: waitConditionData

      :type: :py:class:`@aws-cdk/cdk.Token`\  *(readonly)*


   .. py:attribute:: waitConditionName

      :type: string *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnWaitConditionHandle
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnWaitConditionHandle(scope, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnWaitConditionHandle;

      .. code-tab:: javascript

         const { CfnWaitConditionHandle } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { CfnWaitConditionHandle } from '@aws-cdk/aws-cloudformation';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string

   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: waitConditionHandleUrl

      :type: string *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: renderProperties(properties) -> string => any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.renderProperties>`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CfnWaitConditionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnWaitConditionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CfnWaitConditionProps;

      .. code-tab:: javascript

         // CfnWaitConditionProps is an interface

      .. code-tab:: typescript

         import { CfnWaitConditionProps } from '@aws-cdk/aws-cloudformation';





   .. py:attribute:: count

      ``AWS::CloudFormation::WaitCondition.Count``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-count


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: handle

      ``AWS::CloudFormation::WaitCondition.Handle``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-handle


      :type: string *(optional)*


   .. py:attribute:: timeout

      ``AWS::CloudFormation::WaitCondition.Timeout``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-timeout


      :type: string *(optional)*


CloudFormationCapabilities (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CloudFormationCapabilities

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CloudFormationCapabilities;

      .. code-tab:: javascript

         const { CloudFormationCapabilities } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { CloudFormationCapabilities } from '@aws-cdk/aws-cloudformation';



   Capabilities that affect whether CloudFormation is allowed to change IAM resources



   .. py:data:: None

   No IAM Capabilities

   

   Pass this capability if you wish to block the creation IAM resources.

   https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities


   .. py:data:: AnonymousIAM

   Capability to create anonymous IAM resources

   

   Pass this capability if you're only creating anonymous resources.

   https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities


   .. py:data:: NamedIAM

   Capability to create named IAM resources.

   

   Pass this capability if you're creating IAM resources that have physical

   names.

   

   `CloudFormationCapabilities.NamedIAM` implies `CloudFormationCapabilities.IAM`; you don't have to pass both.

   https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities



CustomResource
^^^^^^^^^^^^^^

.. py:class:: CustomResource(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CustomResource;

      .. code-tab:: javascript

         const { CustomResource } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { CustomResource } from '@aws-cdk/aws-cloudformation';



   Custom resource that is implemented using a Lambda

   

   As a custom resource author, you should be publishing a subclass of this class

   that hides the choice of provider, and accepts a strongly-typed properties

   object with the properties your provider accepts.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.CfnCustomResource`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.CustomResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/aws-cloudformation.CfnCustomResource.renderProperties`

      Override renderProperties to mix in the user-defined properties



      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: propertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.CfnCustomResource <@aws-cdk/aws-cloudformation.CfnCustomResource.propertyOverrides>`

      :type: :py:class:`~@aws-cdk/aws-cloudformation.CfnCustomResourceProps`\  *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


CustomResourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CustomResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.CustomResourceProps;

      .. code-tab:: javascript

         // CustomResourceProps is an interface

      .. code-tab:: typescript

         import { CustomResourceProps } from '@aws-cdk/aws-cloudformation';



   Properties to provide a Lambda-backed custom resource





   .. py:attribute:: lambdaProvider

      The Lambda provider that implements this custom resource.

      

      We recommend using a lambda.SingletonFunction for this.

      

      Optional, exactly one of lamdaProvider or topicProvider must be set.



      :type: :py:class:`@aws-cdk/aws-lambda.IFunction`\  *(optional)*


   .. py:attribute:: properties

      Properties to pass to the Lambda



      :type: string => any *(optional)*


   .. py:attribute:: resourceType

      For custom resources, you can specify AWS::CloudFormation::CustomResource

      (the default) as the resource type, or you can specify your own resource

      type name. For example, you can use "Custom::MyCustomResourceTypeName".

      

      Custom resource type names must begin with "Custom::" and can include

      alphanumeric characters and the following characters: _@-. You can specify

      a custom resource type name up to a maximum length of 60 characters. You

      cannot change the type during an update.

      

      Using your own resource type names helps you quickly differentiate the

      types of custom resources in your stack. For example, if you had two custom

      resources that conduct two different ping tests, you could name their type

      as Custom::PingTester to make them easily identifiable as ping testers

      (instead of using AWS::CloudFormation::CustomResource).



      :type: string *(optional)*


   .. py:attribute:: topicProvider

      The SNS Topic for the provider that implements this custom resource.

      

      Optional, exactly one of lamdaProvider or topicProvider must be set.



      :type: :py:class:`@aws-cdk/aws-sns.ITopic`\  *(optional)*


PipelineCloudFormationAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCloudFormationAction(props, [configuration])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCloudFormationAction;

      .. code-tab:: javascript

         const { PipelineCloudFormationAction } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { PipelineCloudFormationAction } from '@aws-cdk/aws-cloudformation';



   Base class for Actions that execute CloudFormation



   :extends: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 
   :abstract: Yes
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps`\ 
   :param configuration: 
   :type configuration: any *(optional)*

   .. py:attribute:: outputArtifact

      Output artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  *(optional)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline-api.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline-api.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:method:: bind(stage, scope)

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.bind>`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param stage: the stage this action has been added to (includes a reference to the pipeline as well)
      :type stage: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\ 
      :param scope: the scope construct for this action, can be used by the action implementation to create any resources it needs to work correctly
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :abstract: Yes


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


PipelineCloudFormationActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCloudFormationActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCloudFormationActionProps;

      .. code-tab:: javascript

         // PipelineCloudFormationActionProps is an interface

      .. code-tab:: typescript

         import { PipelineCloudFormationActionProps } from '@aws-cdk/aws-cloudformation';



   Properties common to all CloudFormation actions



   :extends: :py:class:`@aws-cdk/aws-codepipeline-api.CommonActionProps`\ 


   .. py:attribute:: stackName

      The name of the stack to apply this action to



      :type: string


   .. py:attribute:: outputArtifactName

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)*
      :default: No output artifact generated


   .. py:attribute:: region

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)*
      :default: 1


PipelineCloudFormationDeployAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCloudFormationDeployAction(props, configuration)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCloudFormationDeployAction;

      .. code-tab:: javascript

         const { PipelineCloudFormationDeployAction } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { PipelineCloudFormationDeployAction } from '@aws-cdk/aws-cloudformation';



   Base class for all CloudFormation actions that execute or stage deployments.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationAction`\ 
   :abstract: Yes
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps`\ 
   :param configuration: 
   :type configuration: any

   .. py:method:: addToDeploymentRolePolicy(statement)

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:method:: bind(stage, scope)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline-api.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param stage: 
      :type stage: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\ 
      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:attribute:: deploymentRole

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationAction.outputArtifact>`

      Output artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  *(optional)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline-api.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline-api.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


PipelineCloudFormationDeployActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCloudFormationDeployActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCloudFormationDeployActionProps;

      .. code-tab:: javascript

         // PipelineCloudFormationDeployActionProps is an interface

      .. code-tab:: typescript

         import { PipelineCloudFormationDeployActionProps } from '@aws-cdk/aws-cloudformation';



   Properties common to CloudFormation actions that stage deployments



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps`\ 


   .. py:attribute:: adminPermissions

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean


   .. py:attribute:: capabilities

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`~@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ArtifactPath`\  *(optional)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)*
      :default: 1


PipelineCreateReplaceChangeSetAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCreateReplaceChangeSetAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCreateReplaceChangeSetAction;

      .. code-tab:: javascript

         const { PipelineCreateReplaceChangeSetAction } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { PipelineCreateReplaceChangeSetAction } from '@aws-cdk/aws-cloudformation';



   CodePipeline action to prepare a change set.

   

   Creates the change set if it doesn't exist based on the stack name and template that you submit.

   If the change set exists, AWS CloudFormation deletes it, and then creates a new one.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCreateReplaceChangeSetActionProps`\ 

   .. py:method:: bind(stage, scope)

      *Overrides* :py:meth:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param stage: 
      :type stage: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\ 
      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationAction.outputArtifact>`

      Output artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  *(optional)*


   .. py:method:: addToDeploymentRolePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.addToDeploymentRolePolicy>`

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.deploymentRole>`

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline-api.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline-api.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


PipelineCreateReplaceChangeSetActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCreateReplaceChangeSetActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCreateReplaceChangeSetActionProps;

      .. code-tab:: javascript

         // PipelineCreateReplaceChangeSetActionProps is an interface

      .. code-tab:: typescript

         import { PipelineCreateReplaceChangeSetActionProps } from '@aws-cdk/aws-cloudformation';



   Properties for the PipelineCreateReplaceChangeSetAction.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps`\ 


   .. py:attribute:: changeSetName

      Name of the change set to create or update.



      :type: string


   .. py:attribute:: templatePath

      Input artifact with the ChangeSet's CloudFormation template



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ArtifactPath`\ 


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*


   .. py:attribute:: adminPermissions

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.adminPermissions>`

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean


   .. py:attribute:: capabilities

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.capabilities>`

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`~@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.deploymentRole>`

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.parameterOverrides>`

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.templateConfiguration>`

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ArtifactPath`\  *(optional)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)*
      :default: 1


PipelineCreateUpdateStackAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCreateUpdateStackAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCreateUpdateStackAction;

      .. code-tab:: javascript

         const { PipelineCreateUpdateStackAction } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { PipelineCreateUpdateStackAction } from '@aws-cdk/aws-cloudformation';



   CodePipeline action to deploy a stack.

   

   Creates the stack if the specified stack doesn't exist. If the stack exists,

   AWS CloudFormation updates the stack. Use this action to update existing

   stacks.

   

   AWS CodePipeline won't replace the stack, and will fail deployment if the

   stack is in a failed state. Use `ReplaceOnFailure` for an action that

   will delete and recreate the stack to try and recover from failed states.

   

   Use this action to automatically replace failed stacks without recovering or

   troubleshooting them. You would typically choose this mode for testing.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCreateUpdateStackActionProps`\ 

   .. py:method:: bind(stage, scope)

      *Overrides* :py:meth:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param stage: 
      :type stage: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\ 
      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationAction.outputArtifact>`

      Output artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  *(optional)*


   .. py:method:: addToDeploymentRolePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.addToDeploymentRolePolicy>`

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.deploymentRole>`

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline-api.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline-api.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


PipelineCreateUpdateStackActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineCreateUpdateStackActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineCreateUpdateStackActionProps;

      .. code-tab:: javascript

         // PipelineCreateUpdateStackActionProps is an interface

      .. code-tab:: typescript

         import { PipelineCreateUpdateStackActionProps } from '@aws-cdk/aws-cloudformation';



   Properties for the PipelineCreateUpdateStackAction.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps`\ 


   .. py:attribute:: templatePath

      Input artifact with the CloudFormation template to deploy



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ArtifactPath`\ 


   .. py:attribute:: replaceOnFailure

      Replace the stack if it's in a failed state.

      

      If this is set to true and the stack is in a failed state (one of

      ROLLBACK_COMPLETE, ROLLBACK_FAILED, CREATE_FAILED, DELETE_FAILED, or

      UPDATE_ROLLBACK_FAILED), AWS CloudFormation deletes the stack and then

      creates a new stack.

      

      If this is not set to true and the stack is in a failed state,

      the deployment fails.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*


   .. py:attribute:: adminPermissions

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.adminPermissions>`

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean


   .. py:attribute:: capabilities

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.capabilities>`

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`~@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.deploymentRole>`

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.parameterOverrides>`

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.templateConfiguration>`

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ArtifactPath`\  *(optional)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)*
      :default: 1


PipelineDeleteStackAction
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineDeleteStackAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineDeleteStackAction;

      .. code-tab:: javascript

         const { PipelineDeleteStackAction } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { PipelineDeleteStackAction } from '@aws-cdk/aws-cloudformation';



   CodePipeline action to delete a stack.

   

   Deletes a stack. If you specify a stack that doesn't exist, the action completes successfully

   without deleting a stack.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.PipelineDeleteStackActionProps`\ 

   .. py:method:: bind(stage, scope)

      *Overrides* :py:meth:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param stage: 
      :type stage: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\ 
      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationAction.outputArtifact>`

      Output artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  *(optional)*


   .. py:method:: addToDeploymentRolePolicy(statement)

      *Inherited from* :py:meth:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.addToDeploymentRolePolicy>`

      Add statement to the service role assumed by CloudFormation while executing this action.



      :param statement: 
      :type statement: :py:class:`@aws-cdk/aws-iam.PolicyStatement`\ 


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployAction.deploymentRole>`

      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(readonly)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline-api.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline-api.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


PipelineDeleteStackActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineDeleteStackActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineDeleteStackActionProps;

      .. code-tab:: javascript

         // PipelineDeleteStackActionProps is an interface

      .. code-tab:: typescript

         import { PipelineDeleteStackActionProps } from '@aws-cdk/aws-cloudformation';



   Properties for the PipelineDeleteStackAction.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps`\ 


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*


   .. py:attribute:: adminPermissions

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.adminPermissions>`

      Whether to grant full permissions to CloudFormation while deploying this template.

      

      Setting this to `true` affects the defaults for `role` and `capabilities`, if you

      don't specify any alternatives.

      

      The default role that will be created for you will have full (i.e., `*`)

      permissions on all resources, and the deployment will have named IAM

      capabilities (i.e., able to create all IAM resources).

      

      This is a shorthand that you can use if you fully trust the templates that

      are deployed in this pipeline. If you want more fine-grained permissions,

      use `addToRolePolicy` and `capabilities` to control what the CloudFormation

      deployment is allowed to do.



      :type: boolean


   .. py:attribute:: capabilities

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.capabilities>`

      Acknowledge certain changes made as part of deployment

      

      For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation

      might create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`

      if your stack template contains AWS Identity and Access Management (IAM) resources. For more

      information see the link below.



      :type: :py:class:`~@aws-cdk/aws-cloudformation.CloudFormationCapabilities`\  *(optional)*
      :default: None, unless `adminPermissions` is true


   .. py:attribute:: deploymentRole

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.deploymentRole>`

      IAM role to assume when deploying changes.

      

      If not specified, a fresh role is created. The role is created with zero

      permissions unless `adminPermissions` is true, in which case the role will have

      full permissions.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*
      :default: A fresh role with full or no permissions (depending on the value of `adminPermissions`).


   .. py:attribute:: parameterOverrides

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.parameterOverrides>`

      Additional template parameters.

      

      Template parameters specified here take precedence over template parameters

      found in the artifact specified by the `templateConfiguration` property.

      

      We recommend that you use the template configuration file to specify

      most of your parameter values. Use parameter overrides to specify only

      dynamic parameter values (values that are unknown until you run the

      pipeline).

      

      All parameter names must be present in the stack template.

      

      Note: the entire object cannot be more than 1kB.



      :type: string => any *(optional)*
      :default: No overrides


   .. py:attribute:: templateConfiguration

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationDeployActionProps.templateConfiguration>`

      Input artifact to use for template parameters values and stack policy.

      

      The template configuration file should contain a JSON object that should look like this:

      `{ "Parameters": {...}, "Tags": {...}, "StackPolicy": {... }}`. For more information,

      see [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).

      

      Note that if you include sensitive information, such as passwords, restrict access to this

      file.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ArtifactPath`\  *(optional)*
      :default: No template configuration based on input artifacts


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)*
      :default: 1


PipelineExecuteChangeSetAction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineExecuteChangeSetAction(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineExecuteChangeSetAction;

      .. code-tab:: javascript

         const { PipelineExecuteChangeSetAction } = require('@aws-cdk/aws-cloudformation');

      .. code-tab:: typescript

         import { PipelineExecuteChangeSetAction } from '@aws-cdk/aws-cloudformation';



   CodePipeline action to execute a prepared change set.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationAction`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-cloudformation.PipelineExecuteChangeSetActionProps`\ 

   .. py:method:: bind(stage, _scope)

      *Implements* :py:meth:`@aws-cdk/aws-codepipeline-api.Action.bind`

      The method called when an Action is attached to a Pipeline.

      This method is guaranteed to be called only once for each Action instance.



      *Protected method*

      :param stage: 
      :type stage: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\ 
      :param _scope: 
      :type _scope: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:attribute:: outputArtifact

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationAction <@aws-cdk/aws-cloudformation.PipelineCloudFormationAction.outputArtifact>`

      Output artifact containing the CloudFormation call response

      

      Only present if configured by passing `outputFileName`.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  *(optional)*


   .. py:method:: addInputArtifact(artifact) -> @aws-cdk/aws-codepipeline-api.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 


   .. py:method:: addOutputArtifact(name) -> @aws-cdk/aws-codepipeline-api.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  *(optional)*
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  *(optional)*
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.validate>`

      *Protected method*

      :rtype: string[]


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.actionName>`

      :type: string *(readonly)*


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.category>`

      The category of the action.

      The category defines which action type the owner

      (the entity that performs the action) performs.



      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.provider>`

      The service provider that the action calls.



      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.runOrder>`

      The order in which AWS CodePipeline runs this action.

      For more information, see the AWS CodePipeline User Guide.

      

      https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: number *(readonly)*


   .. py:attribute:: scope

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.scope>`

      Retrieves the Construct scope of this Action.

      Only available after the Action has been added to a Stage,

      and that Stage to a Pipeline.



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Construct`\  *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action.

      For more information, see the AWS CodePipeline User Guide.

      

      http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements



      :type: any *(optional)* *(readonly)*


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)* *(readonly)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)* *(readonly)*


PipelineExecuteChangeSetActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineExecuteChangeSetActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CloudFormation;

      .. code-tab:: java

         import software.amazon.awscdk.services.cloudformation.PipelineExecuteChangeSetActionProps;

      .. code-tab:: javascript

         // PipelineExecuteChangeSetActionProps is an interface

      .. code-tab:: typescript

         import { PipelineExecuteChangeSetActionProps } from '@aws-cdk/aws-cloudformation';



   Properties for the PipelineExecuteChangeSetAction.



   :extends: :py:class:`~@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps`\ 


   .. py:attribute:: changeSetName

      Name of the change set to execute.



      :type: string


   .. py:attribute:: stackName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.stackName>`

      The name of the stack to apply this action to



      :type: string


   .. py:attribute:: outputArtifactName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputArtifactName>`

      The name of the output artifact to generate

      

      Only applied if `outputFileName` is set as well.



      :type: string *(optional)*
      :default: Automatically generated artifact name.


   .. py:attribute:: outputFileName

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.outputFileName>`

      A name for the filename in the output artifact to store the AWS CloudFormation call's result.

      

      The file will contain the result of the call to AWS CloudFormation (for example

      the call to UpdateStack or CreateChangeSet).

      

      AWS CodePipeline adds the file to the output artifact after performing

      the specified action.



      :type: string *(optional)*
      :default: No output artifact generated


   .. py:attribute:: region

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.region>`

      The AWS region the given Action resides in.

      Note that a cross-region Pipeline requires replication buckets to function correctly.

      You can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.

      If you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,

      that you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.



      :type: string *(optional)*
      :default: the Action resides in the same region as the Pipeline


   .. py:attribute:: role

      *Inherited from* :py:attr:`@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps <@aws-cdk/aws-cloudformation.PipelineCloudFormationActionProps.role>`

      The service role that is assumed during execution of action.

      This role is not mandatory, however more advanced configuration

      may require specifying it.



      :type: :py:class:`@aws-cdk/aws-iam.IRole`\  *(optional)*


   .. py:attribute:: actionName

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.actionName>`

      The physical, human-readable name of the Action.

      Not that Action names must be unique within a single Stage.



      :type: string


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.runOrder>`

      The runOrder property for this Action.

      RunOrder determines the relative order in which multiple Actions in the same Stage execute.



      :type: number *(optional)*
      :default: 1


