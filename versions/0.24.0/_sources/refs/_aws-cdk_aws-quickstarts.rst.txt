.. @jsii-pacmak:meta@ {"fingerprint":"E1UkjLILs1Y2tqEGcV+zrbRGpKRZ/FWeqQ1+2loQb5Y="}

@aws-cdk/aws-quickstarts
========================

.. mdinclude:: ./__aws-cdk_aws-quickstarts.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.QuickStarts/0.24.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.QuickStarts" Version="0.24.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.QuickStarts --version 0.24.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.QuickStarts" version="0.24.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/quickstarts/0.24.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:quickstarts:jar:0.24.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="quickstarts" rev="0.24.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>quickstarts</artifactId>
           <version>0.24.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:quickstarts:0.24.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='quickstarts', version='0.24.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-quickstarts/v/0.24.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-quickstarts@0.24.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-quickstarts": "^0.24.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-quickstarts@0.24.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-quickstarts/v/0.24.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-quickstarts@0.24.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-quickstarts": "^0.24.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-quickstarts@0.24.0



.. py:module:: @aws-cdk/aws-quickstarts

RemoteDesktopGateway
^^^^^^^^^^^^^^^^^^^^

.. py:class:: RemoteDesktopGateway(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.QuickStarts;

      .. code-tab:: java

         import software.amazon.awscdk.services.quickstarts.RemoteDesktopGateway;

      .. code-tab:: javascript

         const { RemoteDesktopGateway } = require('@aws-cdk/aws-quickstarts');

      .. code-tab:: typescript

         import { RemoteDesktopGateway } from '@aws-cdk/aws-quickstarts';



   Embed the Remote Desktop Gateway AWS QuickStart



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-quickstarts.RemoteDesktopGatewayProps`\ 

   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


RemoteDesktopGatewayProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: RemoteDesktopGatewayProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.QuickStarts;

      .. code-tab:: java

         import software.amazon.awscdk.services.quickstarts.RemoteDesktopGatewayProps;

      .. code-tab:: javascript

         // RemoteDesktopGatewayProps is an interface

      .. code-tab:: typescript

         import { RemoteDesktopGatewayProps } from '@aws-cdk/aws-quickstarts';





   .. py:attribute:: adminPassword

      :type: string


   .. py:attribute:: keyPairName

      :type: string


   .. py:attribute:: rdgwCIDR

      :type: string


   .. py:attribute:: vpc

      :type: :py:class:`@aws-cdk/aws-ec2.IVpcNetwork`\ 


   .. py:attribute:: adminUser

      :type: string *(optional)*


   .. py:attribute:: domainDNSName

      :type: string *(optional)*


   .. py:attribute:: numberOfRDGWHosts

      :type: number *(optional)*


   .. py:attribute:: qss3BucketName

      :type: string *(optional)*


   .. py:attribute:: qss3KeyPrefix

      :type: string *(optional)*


   .. py:attribute:: rdgwInstanceType

      :type: string *(optional)*


SqlServer
^^^^^^^^^

.. py:class:: SqlServer(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.QuickStarts;

      .. code-tab:: java

         import software.amazon.awscdk.services.quickstarts.SqlServer;

      .. code-tab:: javascript

         const { SqlServer } = require('@aws-cdk/aws-quickstarts');

      .. code-tab:: typescript

         import { SqlServer } from '@aws-cdk/aws-quickstarts';



   An instance of Microsoft SQL server with associated security groups



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/aws-ec2.IConnectable`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-quickstarts.SqlServerProps`\ 

   .. py:attribute:: connections

      *Implements* :py:meth:`@aws-cdk/aws-ec2.IConnectable.connections`

      :type: :py:class:`@aws-cdk/aws-ec2.Connections`\  *(readonly)*


   .. py:method:: apply(aspect)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.apply>`

      Applies the aspect to this Constructs node



      :param aspect: 
      :type aspect: :py:class:`@aws-cdk/cdk.IAspect`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


SqlServerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: SqlServerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.QuickStarts;

      .. code-tab:: java

         import software.amazon.awscdk.services.quickstarts.SqlServerProps;

      .. code-tab:: javascript

         // SqlServerProps is an interface

      .. code-tab:: typescript

         import { SqlServerProps } from '@aws-cdk/aws-quickstarts';





   .. py:attribute:: masterPassword

      :type: string


   .. py:attribute:: masterUsername

      :type: string


   .. py:attribute:: vpc

      :type: :py:class:`@aws-cdk/aws-ec2.IVpcNetwork`\ 


   .. py:attribute:: allocatedStorage

      :type: number *(optional)*


   .. py:attribute:: engine

      :type: string *(optional)*


   .. py:attribute:: engineVersion

      :type: string *(optional)*


   .. py:attribute:: instanceClass

      :type: string *(optional)*


   .. py:attribute:: licenseModel

      :type: string *(optional)*


