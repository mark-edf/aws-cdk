.. @jsii-pacmak:meta@ {"fingerprint":"mmZxgcJNbFqg59Mm+dzOg2h0It97nSdJmEp1DoC45y0="}

@aws-cdk/aws-apigateway
=======================

.. mdinclude:: ./__aws-cdk_aws-apigateway.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.APIGateway/0.15.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.APIGateway" Version="0.15.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.APIGateway --version 0.15.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.APIGateway" version="0.15.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/apigateway/0.15.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:apigateway:jar:0.15.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="apigateway" rev="0.15.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>apigateway</artifactId>
           <version>0.15.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:apigateway:0.15.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='apigateway', version='0.15.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-apigateway/v/0.15.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-apigateway@0.15.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-apigateway": "^0.15.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-apigateway@0.15.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-apigateway/v/0.15.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-apigateway@0.15.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-apigateway": "^0.15.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-apigateway@0.15.0



.. py:module:: @aws-cdk/aws-apigateway

ApiKeySourceType (enum)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApiKeySourceType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ApiKeySourceType;

      .. code-tab:: javascript

         const { ApiKeySourceType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ApiKeySourceType } from '@aws-cdk/aws-apigateway';



   .. py:data:: Header

   To read the API key from the `X-API-Key` header of a request.


   .. py:data:: Authorizer

   To read the API key from the `UsageIdentifierKey` from a custom authorizer.



AuthorizationType (enum)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AuthorizationType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.AuthorizationType;

      .. code-tab:: javascript

         const { AuthorizationType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { AuthorizationType } from '@aws-cdk/aws-apigateway';



   .. py:data:: None

   Open access.


   .. py:data:: IAM

   Use AWS IAM permissions.


   .. py:data:: Custom

   Use a custom authorizer.


   .. py:data:: Cognito

   Use an AWS Cognito user pool.



AwsIntegration
^^^^^^^^^^^^^^

.. py:class:: AwsIntegration(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.AwsIntegration;

      .. code-tab:: javascript

         const { AwsIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { AwsIntegration } from '@aws-cdk/aws-apigateway';



   This type of integration lets an API expose AWS service actions. It is intended for calling all AWS service actions, but is not recommended for calling a Lambda function, because the Lambda custom integration is a legacy technology.


   :extends: :py:class:`~@aws-cdk/aws-apigateway.Integration`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.AwsIntegrationProps`\ 

   .. py:method:: bind(_method)

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.bind>`

      Can be overridden by subclasses to allow the integration to interact with the method being integrated, access the REST API object, method ARNs, etc.


      :param _method: 
      :type _method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


AwsIntegrationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AwsIntegrationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.AwsIntegrationProps;

      .. code-tab:: javascript

         // AwsIntegrationProps is an interface

      .. code-tab:: typescript

         import { AwsIntegrationProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: service

      The name of the integrated AWS service (e.g. `s3`)


      :type: string *(abstract)*


   .. py:attribute:: action

      The AWS action to perform in the integration.  Use `actionParams` to specify key-value params for the action.  Mutually exclusive with `path`.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: actionParameters

      Parameters for the action.  `action` must be set, and `path` must be undefined. The action params will be URL encoded.


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: options

      Integration options, such as content handling, request/response mapping, etc.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  or ``undefined`` *(abstract)*


   .. py:attribute:: path

      The path to use for path-base APIs.  For example, for S3 GET, you can set path to `bucket/key`. For lambda, you can set path to `2015-03-31/functions/${function-arn}/invocations`  Mutually exclusive with the `action` options.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: proxy

      Use AWS_PROXY integration.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: subdomain

      A designated subdomain supported by certain AWS service for fast host-name lookup.


      :type: string or ``undefined`` *(abstract)*


ContentHandling (enum)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ContentHandling

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ContentHandling;

      .. code-tab:: javascript

         const { ContentHandling } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ContentHandling } from '@aws-cdk/aws-apigateway';



   .. py:data:: ConvertToBinary

   Converts a request payload from a base64-encoded string to a binary blob.


   .. py:data:: ConvertToText

   Converts a request payload from a binary blob to a base64-encoded string.



Deployment
^^^^^^^^^^

.. py:class:: Deployment(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Deployment;

      .. code-tab:: javascript

         const { Deployment } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Deployment } from '@aws-cdk/aws-apigateway';



   A Deployment of a REST API.  An immutable representation of a RestApi resource that can be called by users using Stages. A deployment must be associated with a Stage for it to be callable over the Internet.  Normally, you don't need to define deployments manually. The RestApi construct manages a Deployment resource that represents the latest model. It can be accessed through `restApi.latestDeployment` (unless `deploy: false` is set when defining the `RestApi`).  If you manually define this resource, you will need to know that since deployments are immutable, as long as the resource's logical ID doesn't change, the deployment will represent the snapshot in time in which the resource was created. This means that if you modify the RestApi model (i.e. add methods or resources), these changes will not be reflected unless a new deployment resource is created.  To achieve this behavior, the method `addToLogicalId(data)` can be used to augment the logical ID generated for the deployment resource such that it will include arbitrary data. This is done automatically for the `restApi.latestDeployment` deployment.  Furthermore, since a deployment does not reference any of the REST API resources and methods, CloudFormation will likely provision it before these resources are created, which means that it will represent a "half-baked" model. Use the `addDependency(dep)` method to circumvent that. This is done automatically for the `restApi.latestDeployment` deployment.


   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.DeploymentProps`\ 

   .. py:method:: addDependency(dep)

      Adds a dependency for this deployment. Should be called by all resources and methods so they are provisioned before this Deployment.


      :param dep: 
      :type dep: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addToLogicalId([data])

      Adds a component to the hash that determines this Deployment resource's logical ID.  This should be called by constructs of the API Gateway model that want to invalidate the deployment when their settings change. The component will be resolve()ed during synthesis so tokens are welcome.


      :param data: 
      :type data: any or ``undefined``


   .. py:attribute:: api

      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApiRef`\  *(readonly)*


   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      Allows taking a dependency on this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: deploymentId

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


DeploymentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: DeploymentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.DeploymentProps;

      .. code-tab:: javascript

         // DeploymentProps is an interface

      .. code-tab:: typescript

         import { DeploymentProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: api

      The Rest API to deploy.


      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApiRef`\  *(abstract)*


   .. py:attribute:: description

      A description of the purpose of the API Gateway deployment.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: retainDeployments

      When an API Gateway model is updated, a new deployment will automatically be created. If this is true (default), the old API Gateway Deployment resource will not be deleted. This will allow manually reverting back to a previous deployment in case for example


      :type: boolean or ``undefined`` *(abstract)*


EndpointType (enum)
^^^^^^^^^^^^^^^^^^^

.. py:class:: EndpointType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.EndpointType;

      .. code-tab:: javascript

         const { EndpointType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { EndpointType } from '@aws-cdk/aws-apigateway';



   .. py:data:: Edge

   For an edge-optimized API and its custom domain name.


   .. py:data:: Regional

   For a regional API and its custom domain name.


   .. py:data:: Private

   For a private API and its custom domain name.



HttpIntegration
^^^^^^^^^^^^^^^

.. py:class:: HttpIntegration(url, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.HttpIntegration;

      .. code-tab:: javascript

         const { HttpIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { HttpIntegration } from '@aws-cdk/aws-apigateway';



   You can integrate an API method with an HTTP endpoint using the HTTP proxy integration or the HTTP custom integration,.  With the proxy integration, the setup is simple. You only need to set the HTTP method and the HTTP endpoint URI, according to the backend requirements, if you are not concerned with content encoding or caching.  With the custom integration, the setup is more involved. In addition to the proxy integration setup steps, you need to specify how the incoming request data is mapped to the integration request and how the resulting integration response data is mapped to the method response.


   :extends: :py:class:`~@aws-cdk/aws-apigateway.Integration`\ 
   :param url: 
   :type url: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.HttpIntegrationProps`\  or ``undefined``

   .. py:method:: bind(_method)

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.bind>`

      Can be overridden by subclasses to allow the integration to interact with the method being integrated, access the REST API object, method ARNs, etc.


      :param _method: 
      :type _method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


HttpIntegrationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: HttpIntegrationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.HttpIntegrationProps;

      .. code-tab:: javascript

         // HttpIntegrationProps is an interface

      .. code-tab:: typescript

         import { HttpIntegrationProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: httpMethod

      HTTP method to use when invoking the backend URL.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: options

      Integration options, such as request/resopnse mapping, content handling, etc.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  or ``undefined`` *(abstract)*


   .. py:attribute:: proxy

      Determines whether to use proxy integration or custom integration.


      :type: boolean or ``undefined`` *(abstract)*


IRestApiResource (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IRestApiResource

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IRestApiResource;

      .. code-tab:: javascript

         // IRestApiResource is an interface

      .. code-tab:: typescript

         import { IRestApiResource } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: resourceApi

      The rest API that this resource is part of.  The reason we need the RestApi object itself and not just the ID is because the model is being tracked by the top-level RestApi object for the purpose of calculating it's hash to determine the ID of the deployment. This allows us to automatically update the deployment when the model of the REST API changes.


      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)* *(abstract)*


   .. py:attribute:: resourceId

      The ID of the resource.


      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: resourcePath

      The full path of this resuorce.


      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: defaultIntegration

      An integration to use as a default for all methods created within this API unless an integration is specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(readonly)* *(abstract)*


   .. py:attribute:: defaultMethodOptions

      Method options to use as a default for all methods created within this API unless custom options are specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(readonly)* *(abstract)*


   .. py:method:: addMethod(httpMethod, [target, [options]]) -> @aws-cdk/aws-apigateway.Method

      Defines a new method for this resource.


      :param httpMethod: The HTTP method
      :type httpMethod: string
      :param target: The target backend integration for this method
      :type target: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined``
      :param options: Method options, such as authentication.
      :type options: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined``
      :return: The newly created `Method` object.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 
      :abstract: Yes


   .. py:method:: addProxy([options]) -> @aws-cdk/aws-apigateway.ProxyResource

      Adds a greedy proxy resource ("{proxy+}") and an ANY method to this route.


      :param options: Default integration and method options.
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  or ``undefined``
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.ProxyResource`\ 
      :abstract: Yes


   .. py:method:: addResource(pathPart, [options]) -> @aws-cdk/aws-apigateway.Resource

      Defines a new child resource where this resource is the parent.


      :param pathPart: The path part for the child resource
      :type pathPart: string
      :param options: Resource options
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  or ``undefined``
      :return: A Resource object
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 
      :abstract: Yes


Integration
^^^^^^^^^^^

.. py:class:: Integration(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Integration;

      .. code-tab:: javascript

         const { Integration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Integration } from '@aws-cdk/aws-apigateway';



   Base class for backend integrations for an API Gateway method.  Use one of the concrete classes such as `MockIntegration`, `AwsIntegration`, `LambdaIntegration` or implement on your own by specifying the set of props.


   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\ 

   .. py:method:: bind(_method)

      Can be overridden by subclasses to allow the integration to interact with the method being integrated, access the REST API object, method ARNs, etc.


      :param _method: 
      :type _method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


IntegrationOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationOptions;

      .. code-tab:: javascript

         // IntegrationOptions is an interface

      .. code-tab:: typescript

         import { IntegrationOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: cacheKeyParameters

      A list of request parameters whose values are to be cached. It determines request parameters that will make it into the cache key.


      :type: string[] or ``undefined`` *(abstract)*


   .. py:attribute:: cacheNamespace

      An API-specific tag group of related cached parameters.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: contentHandling

      Specifies how to handle request payload content type conversions.


      :type: :py:class:`~@aws-cdk/aws-apigateway.ContentHandling`\  or ``undefined`` *(abstract)*


   .. py:attribute:: credentialsPassthrough

      Requires that the caller's identity be passed through from the request.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: credentialsRole

      An IAM role that API Gateway assumes.  Mutually exclusive with `credentialsPassThrough`.


      :type: :py:class:`@aws-cdk/aws-iam.Role`\  or ``undefined`` *(abstract)*


   .. py:attribute:: integrationResponses

      The response that API Gateway provides after a method's backend completes processing a request. API Gateway intercepts the response from the backend so that you can control how API Gateway surfaces backend responses. For example, you can map the backend status codes to codes that you define.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationResponse`\ [] or ``undefined`` *(abstract)*


   .. py:attribute:: passthroughBehavior

      Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.


      :type: :py:class:`~@aws-cdk/aws-apigateway.PassthroughBehavior`\  or ``undefined`` *(abstract)*


   .. py:attribute:: requestParameters

      The request parameters that API Gateway sends with the backend request. Specify request parameters as key-value pairs (string-to-string mappings), with a destination as the key and a source as the value.  Specify the destination by using the following pattern integration.request.location.name, where location is querystring, path, or header, and name is a valid, unique parameter name.  The source must be an existing method request parameter or a static value. You must enclose static values in single quotation marks and pre-encode these values based on their destination in the request.


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: requestTemplates

      A map of Apache Velocity templates that are applied on the request payload. The template that API Gateway uses is based on the value of the Content-Type header that's sent by the client. The content type value is the key, and the template is the value (specified as a string), such as the following snippet:     { "application/json": "{\n  \"statusCode\": \"200\"\n}" }


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: selectionPattern

      The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.


      :type: string or ``undefined`` *(abstract)*


IntegrationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationProps;

      .. code-tab:: javascript

         // IntegrationProps is an interface

      .. code-tab:: typescript

         import { IntegrationProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: type

      Specifies an API method integration type.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationType`\  *(abstract)*


   .. py:attribute:: integrationHttpMethod

      The integration's HTTP method type. Required unless you use a MOCK integration.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: options

      Integration options.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  or ``undefined`` *(abstract)*


   .. py:attribute:: uri

      The Uniform Resource Identifier (URI) for the integration.  - If you specify HTTP for the `type` property, specify the API endpoint URL. - If you specify MOCK for the `type` property, don't specify this property. - If you specify AWS for the `type` property, specify an AWS service that    follows this form: `arn:aws:apigateway:region:subdomain.service|service:path|action/service_api.`    For example, a Lambda function URI follows this form:    arn:aws:apigateway:region:lambda:path/path. The path is usually in the    form /2015-03-31/functions/LambdaFunctionARN/invocations.


      :type: any or ``undefined`` *(abstract)*


IntegrationResponse (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationResponse

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationResponse;

      .. code-tab:: javascript

         // IntegrationResponse is an interface

      .. code-tab:: typescript

         import { IntegrationResponse } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: statusCode

      The status code that API Gateway uses to map the integration response to a MethodResponse status code.


      :type: string *(abstract)*


   .. py:attribute:: contentHandling

      Specifies how to handle request payload content type conversions.


      :type: :py:class:`~@aws-cdk/aws-apigateway.ContentHandling`\  or ``undefined`` *(abstract)*


   .. py:attribute:: responseParameters

      The response parameters from the backend response that API Gateway sends to the method response.  Use the destination as the key and the source as the value:  - The destination must be an existing response parameter in the    MethodResponse property. - The source must be an existing method request parameter or a static    value. You must enclose static values in single quotation marks and    pre-encode these values based on the destination specified in the    request.


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: responseTemplates

      The templates that are used to transform the integration response body. Specify templates as key-value pairs, with a content type as the key and a template as the value.


      :type: string => string or ``undefined`` *(abstract)*


IntegrationType (enum)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationType;

      .. code-tab:: javascript

         const { IntegrationType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { IntegrationType } from '@aws-cdk/aws-apigateway';



   .. py:data:: Aws

   For integrating the API method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration.


   .. py:data:: AwsProxy

   For integrating the API method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as the Lambda proxy integration


   .. py:data:: Http

   For integrating the API method request with an HTTP endpoint, including a private HTTP endpoint within a VPC. This integration is also referred to as the HTTP custom integration.


   .. py:data:: HttpProxy

   For integrating the API method request with an HTTP endpoint, including a private HTTP endpoint within a VPC, with the client request passed through as-is. This is also referred to as the HTTP proxy integration


   .. py:data:: Mock

   For integrating the API method request with API Gateway as a "loop-back" endpoint without invoking any backend.



LambdaIntegration
^^^^^^^^^^^^^^^^^

.. py:class:: LambdaIntegration(handler, [options])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaIntegration;

      .. code-tab:: javascript

         const { LambdaIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { LambdaIntegration } from '@aws-cdk/aws-apigateway';



   Integrates an AWS Lambda function to an API Gateway method.


   :extends: :py:class:`~@aws-cdk/aws-apigateway.AwsIntegration`\ 
   :param handler: 
   :type handler: :py:class:`@aws-cdk/aws-lambda.FunctionRef`\ 
   :param options: 
   :type options: :py:class:`~@aws-cdk/aws-apigateway.LambdaIntegrationOptions`\  or ``undefined``

   .. py:method:: bind(method)

      *Overrides* :py:meth:`@aws-cdk/aws-apigateway.Integration.bind`

      Can be overridden by subclasses to allow the integration to interact with the method being integrated, access the REST API object, method ARNs, etc.


      :param method: 
      :type method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


LambdaIntegrationOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LambdaIntegrationOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaIntegrationOptions;

      .. code-tab:: javascript

         // LambdaIntegrationOptions is an interface

      .. code-tab:: typescript

         import { LambdaIntegrationOptions } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\ 


   .. py:attribute:: allowTestInvoke

      Allow invoking method from AWS Console UI (for testing purposes).  This will add another permission to the AWS Lambda resource policy which will allow the `test-invoke-stage` stage to invoke this handler. If this is set to `false`, the function will only be usable from the deployment endpoint.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: proxy

      Use proxy integration or normal (request/response mapping) integration.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: cacheKeyParameters

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.cacheKeyParameters>`

      A list of request parameters whose values are to be cached. It determines request parameters that will make it into the cache key.


      :type: string[] or ``undefined`` *(abstract)*


   .. py:attribute:: cacheNamespace

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.cacheNamespace>`

      An API-specific tag group of related cached parameters.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: contentHandling

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.contentHandling>`

      Specifies how to handle request payload content type conversions.


      :type: :py:class:`~@aws-cdk/aws-apigateway.ContentHandling`\  or ``undefined`` *(abstract)*


   .. py:attribute:: credentialsPassthrough

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.credentialsPassthrough>`

      Requires that the caller's identity be passed through from the request.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: credentialsRole

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.credentialsRole>`

      An IAM role that API Gateway assumes.  Mutually exclusive with `credentialsPassThrough`.


      :type: :py:class:`@aws-cdk/aws-iam.Role`\  or ``undefined`` *(abstract)*


   .. py:attribute:: integrationResponses

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.integrationResponses>`

      The response that API Gateway provides after a method's backend completes processing a request. API Gateway intercepts the response from the backend so that you can control how API Gateway surfaces backend responses. For example, you can map the backend status codes to codes that you define.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationResponse`\ [] or ``undefined`` *(abstract)*


   .. py:attribute:: passthroughBehavior

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.passthroughBehavior>`

      Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.


      :type: :py:class:`~@aws-cdk/aws-apigateway.PassthroughBehavior`\  or ``undefined`` *(abstract)*


   .. py:attribute:: requestParameters

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.requestParameters>`

      The request parameters that API Gateway sends with the backend request. Specify request parameters as key-value pairs (string-to-string mappings), with a destination as the key and a source as the value.  Specify the destination by using the following pattern integration.request.location.name, where location is querystring, path, or header, and name is a valid, unique parameter name.  The source must be an existing method request parameter or a static value. You must enclose static values in single quotation marks and pre-encode these values based on their destination in the request.


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: requestTemplates

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.requestTemplates>`

      A map of Apache Velocity templates that are applied on the request payload. The template that API Gateway uses is based on the value of the Content-Type header that's sent by the client. The content type value is the key, and the template is the value (specified as a string), such as the following snippet:     { "application/json": "{\n  \"statusCode\": \"200\"\n}" }


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: selectionPattern

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.selectionPattern>`

      The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.


      :type: string or ``undefined`` *(abstract)*


LambdaRestApi
^^^^^^^^^^^^^

.. py:class:: LambdaRestApi(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaRestApi;

      .. code-tab:: javascript

         const { LambdaRestApi } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { LambdaRestApi } from '@aws-cdk/aws-apigateway';



   Defines an API Gateway REST API with AWS Lambda proxy integration.  Use the `proxyPath` property to define a greedy proxy ("{proxy+}") and "ANY" method from the specified path. If not defined, you will need to explicity add resources and methods to the API.


   :extends: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.LambdaRestApiProps`\ 

   .. py:method:: executeApiArn([method, [path, [stage]]]) -> string

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.executeApiArn>`

      :param method: The method (default `*`)
      :type method: string or ``undefined``
      :param path: The resource path. Must start with '/' (default `*`)
      :type path: string or ``undefined``
      :param stage: The stage (default `*`)
      :type stage: string or ``undefined``
      :return: The "execute-api" ARN.
      :rtype: string


   .. py:method:: urlForPath([path]) -> string

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.urlForPath>`

      Returns the URL for an HTTP path.  Fails if `deploymentStage` is not set either by `deploy` or explicitly.


      :param path: 
      :type path: string or ``undefined``
      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.validate>`

      Performs validation of the REST API.


      :rtype: string[]


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.dependencyElements>`

      Allows taking a dependency on this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: restApiId

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.restApiId>`

      The ID of this API Gateway RestApi.


      :type: string *(readonly)*


   .. py:attribute:: root

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.root>`

      Represents the root resource ("/") of this API. Use it to define the API model:      api.root.addMethod('ANY', redirectToHomePage); // "ANY /"     api.root.addResource('friends').addMethod('GET', getFriendsHandler); // "GET /friends"


      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(readonly)*


   .. py:attribute:: url

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.url>`

      The deployed root URL of this REST API.


      :type: string *(readonly)*


   .. py:attribute:: deploymentStage

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.deploymentStage>`

      API Gateway stage that points to the latest deployment (if defined).  If `deploy` is disabled, you will need to explicitly assign this value in order to set up integrations.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Stage`\  or ``undefined``


   .. py:attribute:: latestDeployment

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.latestDeployment>`

      API Gateway deployment that represents the latest changes of the API. This resource will be automatically updated every time the REST API model changes. This will be undefined if `deploy` is false.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Deployment`\  or ``undefined``


   .. py:method:: export() -> @aws-cdk/aws-apigateway.RestApiRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApiRef <@aws-cdk/aws-apigateway.RestApiRef.export>`

      Exports a REST API resource from this stack.


      :return: REST API props that can be imported to another stack.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.RestApiRefProps`\ 


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


LambdaRestApiProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LambdaRestApiProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaRestApiProps;

      .. code-tab:: javascript

         // LambdaRestApiProps is an interface

      .. code-tab:: typescript

         import { LambdaRestApiProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: handler

      The default Lambda function that handles all requests from this API.  This handler will be used as a the default integration for all methods in this API, unless specified otherwise in `addMethod`.


      :type: :py:class:`@aws-cdk/aws-lambda.Function`\  *(abstract)*


   .. py:attribute:: options

      Further customization of the REST API.


      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApiProps`\  or ``undefined`` *(abstract)*


   .. py:attribute:: proxy

      If true, route all requests to the Lambda Function  If set to false, you will need to explicitly define the API model using `addResource` and `addMethod` (or `addProxy`).


      :type: boolean or ``undefined`` *(abstract)*


Method
^^^^^^

.. py:class:: Method(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Method;

      .. code-tab:: javascript

         const { Method } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Method } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.MethodProps`\ 

   .. py:attribute:: httpMethod

      :type: string *(readonly)*


   .. py:attribute:: methodArn

      Returns an execute-api ARN for this method:     arn:aws:execute-api:{region}:{account}:{restApiId}/{stage}/{method}/{path}  NOTE: {stage} will refer to the `restApi.deploymentStage`, which will automatically set if auto-deploy is enabled.


      :type: string *(readonly)*


   .. py:attribute:: methodId

      :type: string *(readonly)*


   .. py:attribute:: resource

      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(readonly)*


   .. py:attribute:: restApi

      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)*


   .. py:attribute:: testMethodArn

      Returns an execute-api ARN for this method's "test-invoke-stage" stage. This stage is used by the AWS Console UI when testing the method.


      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


MethodDeploymentOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodDeploymentOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodDeploymentOptions;

      .. code-tab:: javascript

         // MethodDeploymentOptions is an interface

      .. code-tab:: typescript

         import { MethodDeploymentOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: cacheDataEncrypted

      Indicates whether the cached responses are encrypted.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: cacheTtlSeconds

      Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: cachingEnabled

      Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: dataTraceEnabled

      Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: loggingLevel

      Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodLoggingLevel`\  or ``undefined`` *(abstract)*


   .. py:attribute:: metricsEnabled

      Specifies whether Amazon CloudWatch metrics are enabled for this method.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: throttlingBurstLimit

      Specifies the throttling burst limit.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: throttlingRateLimit

      Specifies the throttling rate limit.


      :type: number or ``undefined`` *(abstract)*


MethodLoggingLevel (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodLoggingLevel

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodLoggingLevel;

      .. code-tab:: javascript

         const { MethodLoggingLevel } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { MethodLoggingLevel } from '@aws-cdk/aws-apigateway';



   .. py:data:: Off

   .. py:data:: Error

   .. py:data:: Info


MethodOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodOptions;

      .. code-tab:: javascript

         // MethodOptions is an interface

      .. code-tab:: typescript

         import { MethodOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: apiKeyRequired

      Indicates whether the method requires clients to submit a valid API key.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: authorizationType

      Method authorization.


      :type: :py:class:`~@aws-cdk/aws-apigateway.AuthorizationType`\  or ``undefined`` *(abstract)*


   .. py:attribute:: authorizerId

      If `authorizationType` is `Custom`, this specifies the ID of the method authorizer resource.  NOTE: in the future this will be replaced with an `AuthorizerRef` construct.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: operationName

      A friendly operation name for the method. For example, you can assign the OperationName of ListPets for the GET /pets method.


      :type: string or ``undefined`` *(abstract)*


MethodProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodProps;

      .. code-tab:: javascript

         // MethodProps is an interface

      .. code-tab:: typescript

         import { MethodProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: httpMethod

      The HTTP method ("GET", "POST", "PUT", ...) that clients use to call this method.


      :type: string *(abstract)*


   .. py:attribute:: resource

      The resource this method is associated with. For root resource methods, specify the `RestApi` object.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(abstract)*


   .. py:attribute:: integration

      The backend system that the method calls when it receives a request.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(abstract)*


   .. py:attribute:: options

      Method options.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(abstract)*


MockIntegration
^^^^^^^^^^^^^^^

.. py:class:: MockIntegration([options])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MockIntegration;

      .. code-tab:: javascript

         const { MockIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { MockIntegration } from '@aws-cdk/aws-apigateway';



   This type of integration lets API Gateway return a response without sending the request further to the backend. This is useful for API testing because it can be used to test the integration set up without incurring charges for using the backend and to enable collaborative development of an API. In collaborative development, a team can isolate their development effort by setting up simulations of API components owned by other teams by using the MOCK integrations. It is also used to return CORS-related headers to ensure that the API method permits CORS access. In fact, the API Gateway console integrates the OPTIONS method to support CORS with a mock integration. Gateway responses are other examples of mock integrations.


   :extends: :py:class:`~@aws-cdk/aws-apigateway.Integration`\ 
   :param options: 
   :type options: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  or ``undefined``

   .. py:method:: bind(_method)

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.bind>`

      Can be overridden by subclasses to allow the integration to interact with the method being integrated, access the REST API object, method ARNs, etc.


      :param _method: 
      :type _method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


PassthroughBehavior (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PassthroughBehavior

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.PassthroughBehavior;

      .. code-tab:: javascript

         const { PassthroughBehavior } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { PassthroughBehavior } from '@aws-cdk/aws-apigateway';



   .. py:data:: WhenNoMatch

   Passes the request body for unmapped content types through to the integration back end without transformation.


   .. py:data:: Never

   Rejects unmapped content types with an HTTP 415 'Unsupported Media Type' response


   .. py:data:: WhenNoTemplates

   Allows pass-through when the integration has NO content types mapped to templates. However if there is at least one content type defined, unmapped content types will be rejected with the same 415 response.



ProxyResource
^^^^^^^^^^^^^

.. py:class:: ProxyResource(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ProxyResource;

      .. code-tab:: javascript

         const { ProxyResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ProxyResource } from '@aws-cdk/aws-apigateway';



   Defines a {proxy+} greedy resource and an ANY method on a route.


   :extends: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.ProxyResourceProps`\ 

   .. py:method:: addMethod(httpMethod, [integration, [options]]) -> @aws-cdk/aws-apigateway.Method

      *Overrides* :py:meth:`@aws-cdk/aws-apigateway.Resource.addMethod`

      Defines a new method for this resource.


      :param httpMethod: 
      :type httpMethod: string
      :param integration: 
      :type integration: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined``
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined``
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: anyMethod

      If `props.anyMethod` is `true`, this will be the reference to the 'ANY' method associated with this proxy resource.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Method`\  or ``undefined`` *(readonly)*


   .. py:method:: addProxy([options]) -> @aws-cdk/aws-apigateway.ProxyResource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.addProxy>`

      Adds a greedy proxy resource ("{proxy+}") and an ANY method to this route.


      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  or ``undefined``
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.ProxyResource`\ 


   .. py:method:: addResource(pathPart, [options]) -> @aws-cdk/aws-apigateway.Resource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.addResource>`

      Defines a new child resource where this resource is the parent.


      :param pathPart: 
      :type pathPart: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  or ``undefined``
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:attribute:: resourceApi

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.resourceApi>`

      The rest API that this resource is part of.  The reason we need the RestApi object itself and not just the ID is because the model is being tracked by the top-level RestApi object for the purpose of calculating it's hash to determine the ID of the deployment. This allows us to automatically update the deployment when the model of the REST API changes.


      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)*


   .. py:attribute:: resourceId

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.resourceId>`

      The ID of the resource.


      :type: string *(readonly)*


   .. py:attribute:: resourcePath

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.resourcePath>`

      The full path of this resuorce.


      :type: string *(readonly)*


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.defaultIntegration>`

      An integration to use as a default for all methods created within this API unless an integration is specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(readonly)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.defaultMethodOptions>`

      Method options to use as a default for all methods created within this API unless custom options are specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ProxyResourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ProxyResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ProxyResourceProps;

      .. code-tab:: javascript

         // ProxyResourceProps is an interface

      .. code-tab:: typescript

         import { ProxyResourceProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\ 


   .. py:attribute:: parent

      The parent resource of this resource. You can either pass another `Resource` object or a `RestApi` object here.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(abstract)*


   .. py:attribute:: anyMethod

      Adds an "ANY" method to this resource. If set to `false`, you will have to explicitly add methods to this resource after it's created.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultIntegration>`

      An integration to use as a default for all methods created within this API unless an integration is specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(readonly)* *(abstract)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultMethodOptions>`

      Method options to use as a default for all methods created within this API unless custom options are specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(readonly)* *(abstract)*


Resource
^^^^^^^^

.. py:class:: Resource(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Resource;

      .. code-tab:: javascript

         const { Resource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Resource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.ResourceProps`\ 

   .. py:method:: addMethod(httpMethod, [integration, [options]]) -> @aws-cdk/aws-apigateway.Method

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.addMethod`

      Defines a new method for this resource.


      :param httpMethod: 
      :type httpMethod: string
      :param integration: 
      :type integration: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined``
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined``
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:method:: addProxy([options]) -> @aws-cdk/aws-apigateway.ProxyResource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.addProxy`

      Adds a greedy proxy resource ("{proxy+}") and an ANY method to this route.


      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  or ``undefined``
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.ProxyResource`\ 


   .. py:method:: addResource(pathPart, [options]) -> @aws-cdk/aws-apigateway.Resource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.addResource`

      Defines a new child resource where this resource is the parent.


      :param pathPart: 
      :type pathPart: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  or ``undefined``
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:attribute:: resourceApi

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.resourceApi`

      The rest API that this resource is part of.  The reason we need the RestApi object itself and not just the ID is because the model is being tracked by the top-level RestApi object for the purpose of calculating it's hash to determine the ID of the deployment. This allows us to automatically update the deployment when the model of the REST API changes.


      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)*


   .. py:attribute:: resourceId

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.resourceId`

      The ID of the resource.


      :type: string *(readonly)*


   .. py:attribute:: resourcePath

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.resourcePath`

      The full path of this resuorce.


      :type: string *(readonly)*


   .. py:attribute:: defaultIntegration

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.defaultIntegration`

      An integration to use as a default for all methods created within this API unless an integration is specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(readonly)*


   .. py:attribute:: defaultMethodOptions

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.defaultMethodOptions`

      Method options to use as a default for all methods created within this API unless custom options are specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ResourceOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ResourceOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ResourceOptions;

      .. code-tab:: javascript

         // ResourceOptions is an interface

      .. code-tab:: typescript

         import { ResourceOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: defaultIntegration

      An integration to use as a default for all methods created within this API unless an integration is specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(readonly)* *(abstract)*


   .. py:attribute:: defaultMethodOptions

      Method options to use as a default for all methods created within this API unless custom options are specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(readonly)* *(abstract)*


ResourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ResourceProps;

      .. code-tab:: javascript

         // ResourceProps is an interface

      .. code-tab:: typescript

         import { ResourceProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\ 


   .. py:attribute:: parent

      The parent resource of this resource. You can either pass another `Resource` object or a `RestApi` object here.


      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(abstract)*


   .. py:attribute:: pathPart

      A path name for the resource.


      :type: string *(abstract)*


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultIntegration>`

      An integration to use as a default for all methods created within this API unless an integration is specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(readonly)* *(abstract)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultMethodOptions>`

      Method options to use as a default for all methods created within this API unless custom options are specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(readonly)* *(abstract)*


RestApi
^^^^^^^

.. py:class:: RestApi(parent, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApi;

      .. code-tab:: javascript

         const { RestApi } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { RestApi } from '@aws-cdk/aws-apigateway';



   Represents a REST API in Amazon API Gateway.  Use `addResource` and `addMethod` to configure the API model.  By default, the API will automatically be deployed and accessible from a public endpoint.


   :extends: :py:class:`~@aws-cdk/aws-apigateway.RestApiRef`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.RestApiProps`\  or ``undefined``

   .. py:method:: executeApiArn([method, [path, [stage]]]) -> string

      :param method: The method (default `*`)
      :type method: string or ``undefined``
      :param path: The resource path. Must start with '/' (default `*`)
      :type path: string or ``undefined``
      :param stage: The stage (default `*`)
      :type stage: string or ``undefined``
      :return: The "execute-api" ARN.
      :rtype: string


   .. py:method:: urlForPath([path]) -> string

      Returns the URL for an HTTP path.  Fails if `deploymentStage` is not set either by `deploy` or explicitly.


      :param path: 
      :type path: string or ``undefined``
      :rtype: string


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      Performs validation of the REST API.


      :rtype: string[]


   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      Allows taking a dependency on this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: restApiId

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.RestApiRef.restApiId`

      The ID of this API Gateway RestApi.


      :type: string *(readonly)*


   .. py:attribute:: root

      Represents the root resource ("/") of this API. Use it to define the API model:      api.root.addMethod('ANY', redirectToHomePage); // "ANY /"     api.root.addResource('friends').addMethod('GET', getFriendsHandler); // "GET /friends"


      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(readonly)*


   .. py:attribute:: url

      The deployed root URL of this REST API.


      :type: string *(readonly)*


   .. py:attribute:: deploymentStage

      API Gateway stage that points to the latest deployment (if defined).  If `deploy` is disabled, you will need to explicitly assign this value in order to set up integrations.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Stage`\  or ``undefined``


   .. py:attribute:: latestDeployment

      API Gateway deployment that represents the latest changes of the API. This resource will be automatically updated every time the REST API model changes. This will be undefined if `deploy` is false.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Deployment`\  or ``undefined``


   .. py:method:: export() -> @aws-cdk/aws-apigateway.RestApiRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApiRef <@aws-cdk/aws-apigateway.RestApiRef.export>`

      Exports a REST API resource from this stack.


      :return: REST API props that can be imported to another stack.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.RestApiRefProps`\ 


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


RestApiProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: RestApiProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApiProps;

      .. code-tab:: javascript

         // RestApiProps is an interface

      .. code-tab:: typescript

         import { RestApiProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\ 


   .. py:attribute:: apiKeySourceType

      The source of the API key for metering requests according to a usage plan.


      :type: :py:class:`~@aws-cdk/aws-apigateway.ApiKeySourceType`\  or ``undefined`` *(abstract)*


   .. py:attribute:: binaryMediaTypes

      The list of binary media mine-types that are supported by the RestApi resource, such as "image/png" or "application/octet-stream"


      :type: string[] or ``undefined`` *(abstract)*


   .. py:attribute:: cloneFrom

      The ID of the API Gateway RestApi resource that you want to clone.


      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApiRef`\  or ``undefined`` *(abstract)*


   .. py:attribute:: cloudWatchRole

      Automatically configure an AWS CloudWatch role for API Gateway.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: deploy

      Indicates if a Deployment should be automatically created for this API, and recreated when the API model (resources, methods) changes.  Since API Gateway deployments are immutable, When this option is enabled (by default), an AWS::ApiGateway::Deployment resource will automatically created with a logical ID that hashes the API model (methods, resources and options). This means that when the model changes, the logical ID of this CloudFormation resource will change, and a new deployment will be created.  If this is set, `latestDeployment` will refer to the `Deployment` object and `deploymentStage` will refer to a `Stage` that points to this deployment. To customize the stage options, use the `deployStageOptions` property.  A CloudFormation Output will also be defined with the root URL endpoint of this REST API.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: deployOptions

      Options for the API Gateway stage that will always point to the latest deployment when `deploy` is enabled. If `deploy` is disabled, this value cannot be set.


      :type: :py:class:`~@aws-cdk/aws-apigateway.StageOptions`\  or ``undefined`` *(abstract)*


   .. py:attribute:: description

      A description of the purpose of this API Gateway RestApi resource.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: endpointTypes

      A list of the endpoint types of the API. Use this property when creating an API.


      :type: :py:class:`~@aws-cdk/aws-apigateway.EndpointType`\ [] or ``undefined`` *(abstract)*


   .. py:attribute:: failOnWarnings

      Indicates whether to roll back the resource if a warning occurs while API Gateway is creating the RestApi resource.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: minimumCompressionSize

      A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (when undefined) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: parameters

      Custom header parameters for the request.


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: policy

      A policy document that contains the permissions for this RestApi


      :type: :py:class:`@aws-cdk/aws-iam.PolicyDocument`\  or ``undefined`` *(abstract)*


   .. py:attribute:: restApiName

      A name for the API Gateway RestApi resource.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: retainDeployments

      Retains old deployment resources when the API changes. This allows manually reverting stages to point to old deployments via the AWS Console.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultIntegration>`

      An integration to use as a default for all methods created within this API unless an integration is specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  or ``undefined`` *(readonly)* *(abstract)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultMethodOptions>`

      Method options to use as a default for all methods created within this API unless custom options are specified.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  or ``undefined`` *(readonly)* *(abstract)*


RestApiRef
^^^^^^^^^^

.. py:class:: RestApiRef(parent, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApiRef;

      .. code-tab:: javascript

         const { RestApiRef } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { RestApiRef } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :abstract: Yes
   :param parent: The parent construct
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-apigateway.RestApiRef

      Imports an existing REST API resource.


      :param parent: Parent construct
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: Construct ID
      :type id: string
      :param props: Imported rest API properties
      :type props: :py:class:`~@aws-cdk/aws-apigateway.RestApiRefProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.RestApiRef`\ 


   .. py:method:: export() -> @aws-cdk/aws-apigateway.RestApiRefProps

      Exports a REST API resource from this stack.


      :return: REST API props that can be imported to another stack.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.RestApiRefProps`\ 


   .. py:attribute:: restApiId

      The ID of this API Gateway RestApi.


      :type: string *(readonly)* *(abstract)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


RestApiRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: RestApiRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApiRefProps;

      .. code-tab:: javascript

         // RestApiRefProps is an interface

      .. code-tab:: typescript

         import { RestApiRefProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: restApiId

      The REST API ID of an existing REST API resource.


      :type: string *(abstract)*


RestApiUrl
^^^^^^^^^^

.. py:class:: RestApiUrl([valueOrFunction, [displayName]])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApiUrl;

      .. code-tab:: javascript

         const { RestApiUrl } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { RestApiUrl } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 
   :param valueOrFunction: What this token will evaluate to, literal or function.
   :type valueOrFunction: any or ``undefined``
   :param displayName: A human-readable display hint for this Token
   :type displayName: string or ``undefined``

   .. py:method:: concat([left, [right]]) -> @aws-cdk/cdk.Token

      *Inherited from* :py:meth:`@aws-cdk/cdk.CloudFormationToken <@aws-cdk/cdk.CloudFormationToken.concat>`

      Return a concated version of this Token in a string context  The default implementation of this combines strings, but specialized implements of Token can return a more appropriate value.


      :param left: 
      :type left: any or ``undefined``
      :param right: 
      :type right: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:method:: resolve() -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.resolve>`

      :return: The resolved value for this token.
      :rtype: any or ``undefined``


   .. py:method:: toJSON() -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toJSON>`

      Turn this Token into JSON  This gets called by JSON.stringify(). We want to prohibit this, because it's not possible to do this properly, so we just throw an error here.


      :rtype: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.toString>`

      Return a reversible string representation of this token  If the Token is initialized with a literal, the stringified value of the literal is returned. Otherwise, a special quoted string representation of the Token is returned that can be embedded into other strings.  Strings with quoted Tokens in them can be restored back into complex values with the Tokens restored by calling `resolve()` on the string.


      :rtype: string


   .. py:attribute:: displayName

      *Inherited from* :py:attr:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.displayName>`

      A human-readable display hint for this Token


      :type: string or ``undefined`` *(readonly)*


   .. py:attribute:: valueOrFunction

      *Inherited from* :py:attr:`@aws-cdk/cdk.Token <@aws-cdk/cdk.Token.valueOrFunction>`

      What this token will evaluate to, literal or function.


      :type: any or ``undefined`` *(readonly)*


Stage
^^^^^

.. py:class:: Stage(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Stage;

      .. code-tab:: javascript

         const { Stage } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Stage } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`@aws-cdk/cdk.IDependable`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.StageProps`\ 

   .. py:method:: urlForPath([path]) -> string

      Returns the invoke URL for a certain path.


      :param path: The resource path
      :type path: string or ``undefined``
      :rtype: string


   .. py:attribute:: dependencyElements

      *Implements* :py:meth:`@aws-cdk/cdk.IDependable.dependencyElements`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: stageName

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


StageOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StageOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.StageOptions;

      .. code-tab:: javascript

         // StageOptions is an interface

      .. code-tab:: typescript

         import { StageOptions } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.MethodDeploymentOptions`\ 


   .. py:attribute:: cacheClusterEnabled

      Indicates whether cache clustering is enabled for the stage.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: cacheClusterSize

      The stage's cache cluster size.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: clientCertificateId

      The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: description

      A description of the purpose of the stage.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: documentationVersion

      The version identifier of the API documentation snapshot.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: methodOptions

      Method deployment options for specific resources/methods. These will override common options defined in `StageOptions#methodOptions`.


      :type: string => :py:class:`~@aws-cdk/aws-apigateway.MethodDeploymentOptions`\  or ``undefined`` *(abstract)*


   .. py:attribute:: stageName

      The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: variables

      A map that defines the stage variables. Variable names must consist of alphanumeric characters, and the values must match the following regular expression: [A-Za-z0-9-._~:/?#&amp;=,]+.


      :type: string => string or ``undefined`` *(abstract)*


   .. py:attribute:: cacheDataEncrypted

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheDataEncrypted>`

      Indicates whether the cached responses are encrypted.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: cacheTtlSeconds

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheTtlSeconds>`

      Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: cachingEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cachingEnabled>`

      Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: dataTraceEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.dataTraceEnabled>`

      Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: loggingLevel

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.loggingLevel>`

      Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodLoggingLevel`\  or ``undefined`` *(abstract)*


   .. py:attribute:: metricsEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.metricsEnabled>`

      Specifies whether Amazon CloudWatch metrics are enabled for this method.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: throttlingBurstLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingBurstLimit>`

      Specifies the throttling burst limit.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: throttlingRateLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingRateLimit>`

      Specifies the throttling rate limit.


      :type: number or ``undefined`` *(abstract)*


StageProps (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StageProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.StageProps;

      .. code-tab:: javascript

         // StageProps is an interface

      .. code-tab:: typescript

         import { StageProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.StageOptions`\ 


   .. py:attribute:: deployment

      The deployment that this stage points to.


      :type: :py:class:`~@aws-cdk/aws-apigateway.Deployment`\  *(abstract)*


   .. py:attribute:: cacheDataEncrypted

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheDataEncrypted>`

      Indicates whether the cached responses are encrypted.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: cacheTtlSeconds

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheTtlSeconds>`

      Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: cachingEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cachingEnabled>`

      Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: dataTraceEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.dataTraceEnabled>`

      Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: loggingLevel

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.loggingLevel>`

      Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs.


      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodLoggingLevel`\  or ``undefined`` *(abstract)*


   .. py:attribute:: metricsEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.metricsEnabled>`

      Specifies whether Amazon CloudWatch metrics are enabled for this method.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: throttlingBurstLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingBurstLimit>`

      Specifies the throttling burst limit.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: throttlingRateLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingRateLimit>`

      Specifies the throttling rate limit.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: cacheClusterEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.cacheClusterEnabled>`

      Indicates whether cache clustering is enabled for the stage.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: cacheClusterSize

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.cacheClusterSize>`

      The stage's cache cluster size.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: clientCertificateId

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.clientCertificateId>`

      The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: description

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.description>`

      A description of the purpose of the stage.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: documentationVersion

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.documentationVersion>`

      The version identifier of the API documentation snapshot.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: methodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.methodOptions>`

      Method deployment options for specific resources/methods. These will override common options defined in `StageOptions#methodOptions`.


      :type: string => :py:class:`~@aws-cdk/aws-apigateway.MethodDeploymentOptions`\  or ``undefined`` *(abstract)*


   .. py:attribute:: stageName

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.stageName>`

      The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: variables

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.variables>`

      A map that defines the stage variables. Variable names must consist of alphanumeric characters, and the values must match the following regular expression: [A-Za-z0-9-._~:/?#&amp;=,]+.


      :type: string => string or ``undefined`` *(abstract)*



cloudformation
^^^^^^^^^^^^^^
.. py:module:: @aws-cdk/aws-apigateway.cloudformation

AccountResource
~~~~~~~~~~~~~~~

.. py:class:: AccountResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.AccountResource;

      .. code-tab:: javascript

         const { cloudformation.AccountResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.AccountResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``AccountResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``AccountResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.AccountResourceProps`\  or ``undefined``

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: accountId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.AccountResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


AccountResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: AccountResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.AccountResourceProps;

      .. code-tab:: javascript

         // cloudformation.AccountResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.AccountResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: cloudWatchRoleArn

      ``AWS::ApiGateway::Account.CloudWatchRoleArn``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html#cfn-apigateway-account-cloudwatchrolearn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


ApiKeyResource
~~~~~~~~~~~~~~

.. py:class:: ApiKeyResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.ApiKeyResource;

      .. code-tab:: javascript

         const { cloudformation.ApiKeyResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.ApiKeyResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ApiKeyResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ApiKeyResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ApiKeyResourceProps`\  or ``undefined``

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: apiKeyId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ApiKeyResourceProps`\  *(readonly)*

   .. py:class:: StageKeyProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.ApiKeyResource.StageKeyProperty;

         .. code-tab:: javascript

            // cloudformation.ApiKeyResource.StageKeyProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.ApiKeyResource.StageKeyProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: restApiId

         ``ApiKeyResource.StageKeyProperty.RestApiId``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-apikey-stagekey.html#cfn-apigateway-apikey-stagekey-restapiid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: stageName

         ``ApiKeyResource.StageKeyProperty.StageName``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-apikey-stagekey.html#cfn-apigateway-apikey-stagekey-stagename


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ApiKeyResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ApiKeyResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.ApiKeyResourceProps;

      .. code-tab:: javascript

         // cloudformation.ApiKeyResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ApiKeyResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: customerId

      ``AWS::ApiGateway::ApiKey.CustomerId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-customerid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::ApiKey.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: enabled

      ``AWS::ApiGateway::ApiKey.Enabled``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-enabled


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: generateDistinctId

      ``AWS::ApiGateway::ApiKey.GenerateDistinctId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-generatedistinctid


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: name

      ``AWS::ApiGateway::ApiKey.Name``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: stageKeys

      ``AWS::ApiGateway::ApiKey.StageKeys``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-stagekeys


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ApiKeyResource.StageKeyProperty`\ )[] or ``undefined`` *(abstract)*


AuthorizerResource
~~~~~~~~~~~~~~~~~~

.. py:class:: AuthorizerResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.AuthorizerResource;

      .. code-tab:: javascript

         const { cloudformation.AuthorizerResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.AuthorizerResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``AuthorizerResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``AuthorizerResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.AuthorizerResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: authorizerId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.AuthorizerResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


AuthorizerResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: AuthorizerResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.AuthorizerResourceProps;

      .. code-tab:: javascript

         // cloudformation.AuthorizerResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.AuthorizerResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: restApiId

      ``AWS::ApiGateway::Authorizer.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: authorizerCredentials

      ``AWS::ApiGateway::Authorizer.AuthorizerCredentials``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizercredentials


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: authorizerResultTtlInSeconds

      ``AWS::ApiGateway::Authorizer.AuthorizerResultTtlInSeconds``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizerresultttlinseconds


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: authorizerUri

      ``AWS::ApiGateway::Authorizer.AuthorizerUri``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizeruri


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: authType

      ``AWS::ApiGateway::Authorizer.AuthType``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authtype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: identitySource

      ``AWS::ApiGateway::Authorizer.IdentitySource``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identitysource


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: identityValidationExpression

      ``AWS::ApiGateway::Authorizer.IdentityValidationExpression``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identityvalidationexpression


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: name

      ``AWS::ApiGateway::Authorizer.Name``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: providerArns

      ``AWS::ApiGateway::Authorizer.ProviderARNs``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-providerarns


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: type

      ``AWS::ApiGateway::Authorizer.Type``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-type


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


BasePathMappingResource
~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: BasePathMappingResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.BasePathMappingResource;

      .. code-tab:: javascript

         const { cloudformation.BasePathMappingResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.BasePathMappingResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``BasePathMappingResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``BasePathMappingResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.BasePathMappingResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: basePathMappingId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.BasePathMappingResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


BasePathMappingResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: BasePathMappingResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.BasePathMappingResourceProps;

      .. code-tab:: javascript

         // cloudformation.BasePathMappingResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.BasePathMappingResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: domainName

      ``AWS::ApiGateway::BasePathMapping.DomainName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-domainname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: basePath

      ``AWS::ApiGateway::BasePathMapping.BasePath``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-basepath


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: restApiId

      ``AWS::ApiGateway::BasePathMapping.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: stage

      ``AWS::ApiGateway::BasePathMapping.Stage``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-stage


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


ClientCertificateResource
~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ClientCertificateResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.ClientCertificateResource;

      .. code-tab:: javascript

         const { cloudformation.ClientCertificateResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.ClientCertificateResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ClientCertificateResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ClientCertificateResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ClientCertificateResourceProps`\  or ``undefined``

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: clientCertificateName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ClientCertificateResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ClientCertificateResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ClientCertificateResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.ClientCertificateResourceProps;

      .. code-tab:: javascript

         // cloudformation.ClientCertificateResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ClientCertificateResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: description

      ``AWS::ApiGateway::ClientCertificate.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html#cfn-apigateway-clientcertificate-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


DeploymentResource
~~~~~~~~~~~~~~~~~~

.. py:class:: DeploymentResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DeploymentResource;

      .. code-tab:: javascript

         const { cloudformation.DeploymentResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.DeploymentResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``DeploymentResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``DeploymentResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DeploymentResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: deploymentId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DeploymentResourceProps`\  *(readonly)*

   .. py:class:: AccessLogSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.DeploymentResource.AccessLogSettingProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentResource.AccessLogSettingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentResource.AccessLogSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: destinationArn

         ``DeploymentResource.AccessLogSettingProperty.DestinationArn``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-accesslogsetting.html#cfn-apigateway-deployment-accesslogsetting-destinationarn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: format

         ``DeploymentResource.AccessLogSettingProperty.Format``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-accesslogsetting.html#cfn-apigateway-deployment-accesslogsetting-format


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: CanarySettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.DeploymentResource.CanarySettingProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentResource.CanarySettingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentResource.CanarySettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: percentTraffic

         ``DeploymentResource.CanarySettingProperty.PercentTraffic``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-canarysetting.html#cfn-apigateway-deployment-canarysetting-percenttraffic


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: stageVariableOverrides

         ``DeploymentResource.CanarySettingProperty.StageVariableOverrides``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-canarysetting.html#cfn-apigateway-deployment-canarysetting-stagevariableoverrides


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: useStageCache

         ``DeploymentResource.CanarySettingProperty.UseStageCache``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-canarysetting.html#cfn-apigateway-deployment-canarysetting-usestagecache


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: DeploymentCanarySettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.DeploymentResource.DeploymentCanarySettingsProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentResource.DeploymentCanarySettingsProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentResource.DeploymentCanarySettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: percentTraffic

         ``DeploymentResource.DeploymentCanarySettingsProperty.PercentTraffic``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-deploymentcanarysettings.html#cfn-apigateway-deployment-deploymentcanarysettings-percenttraffic


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: stageVariableOverrides

         ``DeploymentResource.DeploymentCanarySettingsProperty.StageVariableOverrides``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-deploymentcanarysettings.html#cfn-apigateway-deployment-deploymentcanarysettings-stagevariableoverrides


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: useStageCache

         ``DeploymentResource.DeploymentCanarySettingsProperty.UseStageCache``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-deploymentcanarysettings.html#cfn-apigateway-deployment-deploymentcanarysettings-usestagecache


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: MethodSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.DeploymentResource.MethodSettingProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentResource.MethodSettingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentResource.MethodSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: cacheDataEncrypted

         ``DeploymentResource.MethodSettingProperty.CacheDataEncrypted``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-cachedataencrypted


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cacheTtlInSeconds

         ``DeploymentResource.MethodSettingProperty.CacheTtlInSeconds``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-cachettlinseconds


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cachingEnabled

         ``DeploymentResource.MethodSettingProperty.CachingEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-cachingenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: dataTraceEnabled

         ``DeploymentResource.MethodSettingProperty.DataTraceEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-datatraceenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: httpMethod

         ``DeploymentResource.MethodSettingProperty.HttpMethod``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-httpmethod


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: loggingLevel

         ``DeploymentResource.MethodSettingProperty.LoggingLevel``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-logginglevel


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: metricsEnabled

         ``DeploymentResource.MethodSettingProperty.MetricsEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-metricsenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: resourcePath

         ``DeploymentResource.MethodSettingProperty.ResourcePath``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-resourcepath


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: throttlingBurstLimit

         ``DeploymentResource.MethodSettingProperty.ThrottlingBurstLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-throttlingburstlimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: throttlingRateLimit

         ``DeploymentResource.MethodSettingProperty.ThrottlingRateLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription-methodsetting.html#cfn-apigateway-deployment-stagedescription-methodsetting-throttlingratelimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: StageDescriptionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.DeploymentResource.StageDescriptionProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentResource.StageDescriptionProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentResource.StageDescriptionProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: accessLogSetting

         ``DeploymentResource.StageDescriptionProperty.AccessLogSetting``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-accesslogsetting


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DeploymentResource.AccessLogSettingProperty`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cacheClusterEnabled

         ``DeploymentResource.StageDescriptionProperty.CacheClusterEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-cacheclusterenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cacheClusterSize

         ``DeploymentResource.StageDescriptionProperty.CacheClusterSize``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-cacheclustersize


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cacheDataEncrypted

         ``DeploymentResource.StageDescriptionProperty.CacheDataEncrypted``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-cachedataencrypted


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cacheTtlInSeconds

         ``DeploymentResource.StageDescriptionProperty.CacheTtlInSeconds``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-cachettlinseconds


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cachingEnabled

         ``DeploymentResource.StageDescriptionProperty.CachingEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-cachingenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: canarySetting

         ``DeploymentResource.StageDescriptionProperty.CanarySetting``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-canarysetting


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DeploymentResource.CanarySettingProperty`\  or ``undefined`` *(abstract)*


      .. py:attribute:: clientCertificateId

         ``DeploymentResource.StageDescriptionProperty.ClientCertificateId``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-clientcertificateid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: dataTraceEnabled

         ``DeploymentResource.StageDescriptionProperty.DataTraceEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-datatraceenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: description

         ``DeploymentResource.StageDescriptionProperty.Description``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-description


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: documentationVersion

         ``DeploymentResource.StageDescriptionProperty.DocumentationVersion``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-documentationversion


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: loggingLevel

         ``DeploymentResource.StageDescriptionProperty.LoggingLevel``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-logginglevel


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: methodSettings

         ``DeploymentResource.StageDescriptionProperty.MethodSettings``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-methodsettings


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DeploymentResource.MethodSettingProperty`\ )[] or ``undefined`` *(abstract)*


      .. py:attribute:: metricsEnabled

         ``DeploymentResource.StageDescriptionProperty.MetricsEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-metricsenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: throttlingBurstLimit

         ``DeploymentResource.StageDescriptionProperty.ThrottlingBurstLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-throttlingburstlimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: throttlingRateLimit

         ``DeploymentResource.StageDescriptionProperty.ThrottlingRateLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-throttlingratelimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: variables

         ``DeploymentResource.StageDescriptionProperty.Variables``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-deployment-stagedescription.html#cfn-apigateway-deployment-stagedescription-variables


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


DeploymentResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DeploymentResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DeploymentResourceProps;

      .. code-tab:: javascript

         // cloudformation.DeploymentResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.DeploymentResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: restApiId

      ``AWS::ApiGateway::Deployment.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: deploymentCanarySettings

      ``AWS::ApiGateway::Deployment.DeploymentCanarySettings``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-deploymentcanarysettings


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DeploymentResource.DeploymentCanarySettingsProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::Deployment.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: stageDescription

      ``AWS::ApiGateway::Deployment.StageDescription``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-stagedescription


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DeploymentResource.StageDescriptionProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: stageName

      ``AWS::ApiGateway::Deployment.StageName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-stagename


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


DocumentationPartResource
~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DocumentationPartResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DocumentationPartResource;

      .. code-tab:: javascript

         const { cloudformation.DocumentationPartResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.DocumentationPartResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``DocumentationPartResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``DocumentationPartResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DocumentationPartResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: documentationPartId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DocumentationPartResourceProps`\  *(readonly)*

   .. py:class:: LocationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.DocumentationPartResource.LocationProperty;

         .. code-tab:: javascript

            // cloudformation.DocumentationPartResource.LocationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DocumentationPartResource.LocationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: method

         ``DocumentationPartResource.LocationProperty.Method``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-documentationpart-location.html#cfn-apigateway-documentationpart-location-method


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: name

         ``DocumentationPartResource.LocationProperty.Name``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-documentationpart-location.html#cfn-apigateway-documentationpart-location-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: path

         ``DocumentationPartResource.LocationProperty.Path``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-documentationpart-location.html#cfn-apigateway-documentationpart-location-path


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: statusCode

         ``DocumentationPartResource.LocationProperty.StatusCode``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-documentationpart-location.html#cfn-apigateway-documentationpart-location-statuscode


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: type

         ``DocumentationPartResource.LocationProperty.Type``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-documentationpart-location.html#cfn-apigateway-documentationpart-location-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


DocumentationPartResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DocumentationPartResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DocumentationPartResourceProps;

      .. code-tab:: javascript

         // cloudformation.DocumentationPartResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.DocumentationPartResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: location

      ``AWS::ApiGateway::DocumentationPart.Location``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html#cfn-apigateway-documentationpart-location


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DocumentationPartResource.LocationProperty`\  *(abstract)*


   .. py:attribute:: properties

      ``AWS::ApiGateway::DocumentationPart.Properties``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html#cfn-apigateway-documentationpart-properties


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: restApiId

      ``AWS::ApiGateway::DocumentationPart.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html#cfn-apigateway-documentationpart-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


DocumentationVersionResource
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DocumentationVersionResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DocumentationVersionResource;

      .. code-tab:: javascript

         const { cloudformation.DocumentationVersionResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.DocumentationVersionResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``DocumentationVersionResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``DocumentationVersionResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DocumentationVersionResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: documentationVersionId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DocumentationVersionResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


DocumentationVersionResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DocumentationVersionResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DocumentationVersionResourceProps;

      .. code-tab:: javascript

         // cloudformation.DocumentationVersionResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.DocumentationVersionResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: documentationVersion

      ``AWS::ApiGateway::DocumentationVersion.DocumentationVersion``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html#cfn-apigateway-documentationversion-documentationversion


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: restApiId

      ``AWS::ApiGateway::DocumentationVersion.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html#cfn-apigateway-documentationversion-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::DocumentationVersion.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html#cfn-apigateway-documentationversion-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


DomainNameResource
~~~~~~~~~~~~~~~~~~

.. py:class:: DomainNameResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DomainNameResource;

      .. code-tab:: javascript

         const { cloudformation.DomainNameResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.DomainNameResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``DomainNameResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``DomainNameResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DomainNameResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: domainNameDistributionDomainName

      :type: string *(readonly)*


   .. py:attribute:: domainNameDistributionHostedZoneId

      :type: string *(readonly)*


   .. py:attribute:: domainNameName

      :type: string *(readonly)*


   .. py:attribute:: domainNameRegionalDomainName

      :type: string *(readonly)*


   .. py:attribute:: domainNameRegionalHostedZoneId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DomainNameResourceProps`\  *(readonly)*

   .. py:class:: EndpointConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.DomainNameResource.EndpointConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.DomainNameResource.EndpointConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DomainNameResource.EndpointConfigurationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: types

         ``DomainNameResource.EndpointConfigurationProperty.Types``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-domainname-endpointconfiguration.html#cfn-apigateway-domainname-endpointconfiguration-types


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


DomainNameResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DomainNameResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.DomainNameResourceProps;

      .. code-tab:: javascript

         // cloudformation.DomainNameResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.DomainNameResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: domainName

      ``AWS::ApiGateway::DomainName.DomainName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-domainname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: certificateArn

      ``AWS::ApiGateway::DomainName.CertificateArn``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-certificatearn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: endpointConfiguration

      ``AWS::ApiGateway::DomainName.EndpointConfiguration``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-endpointconfiguration


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.DomainNameResource.EndpointConfigurationProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: regionalCertificateArn

      ``AWS::ApiGateway::DomainName.RegionalCertificateArn``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-regionalcertificatearn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


GatewayResponseResource
~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: GatewayResponseResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.GatewayResponseResource;

      .. code-tab:: javascript

         const { cloudformation.GatewayResponseResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.GatewayResponseResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``GatewayResponseResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``GatewayResponseResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.GatewayResponseResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: gatewayResponseId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.GatewayResponseResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


GatewayResponseResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: GatewayResponseResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.GatewayResponseResourceProps;

      .. code-tab:: javascript

         // cloudformation.GatewayResponseResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.GatewayResponseResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: responseType

      ``AWS::ApiGateway::GatewayResponse.ResponseType``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-responsetype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: restApiId

      ``AWS::ApiGateway::GatewayResponse.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: responseParameters

      ``AWS::ApiGateway::GatewayResponse.ResponseParameters``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-responseparameters


      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


   .. py:attribute:: responseTemplates

      ``AWS::ApiGateway::GatewayResponse.ResponseTemplates``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-responsetemplates


      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


   .. py:attribute:: statusCode

      ``AWS::ApiGateway::GatewayResponse.StatusCode``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-statuscode


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


MethodResource
~~~~~~~~~~~~~~

.. py:class:: MethodResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.MethodResource;

      .. code-tab:: javascript

         const { cloudformation.MethodResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.MethodResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``MethodResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``MethodResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.MethodResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: methodId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.MethodResourceProps`\  *(readonly)*

   .. py:class:: IntegrationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.MethodResource.IntegrationProperty;

         .. code-tab:: javascript

            // cloudformation.MethodResource.IntegrationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.MethodResource.IntegrationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: cacheKeyParameters

         ``MethodResource.IntegrationProperty.CacheKeyParameters``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-cachekeyparameters


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


      .. py:attribute:: cacheNamespace

         ``MethodResource.IntegrationProperty.CacheNamespace``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-cachenamespace


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: connectionId

         ``MethodResource.IntegrationProperty.ConnectionId``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-connectionid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: connectionType

         ``MethodResource.IntegrationProperty.ConnectionType``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-connectiontype


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: contentHandling

         ``MethodResource.IntegrationProperty.ContentHandling``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-contenthandling


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: credentials

         ``MethodResource.IntegrationProperty.Credentials``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-credentials


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: integrationHttpMethod

         ``MethodResource.IntegrationProperty.IntegrationHttpMethod``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-integrationhttpmethod


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: integrationResponses

         ``MethodResource.IntegrationProperty.IntegrationResponses``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-integrationresponses


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.MethodResource.IntegrationResponseProperty`\ )[] or ``undefined`` *(abstract)*


      .. py:attribute:: passthroughBehavior

         ``MethodResource.IntegrationProperty.PassthroughBehavior``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-passthroughbehavior


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: requestParameters

         ``MethodResource.IntegrationProperty.RequestParameters``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-requestparameters


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: requestTemplates

         ``MethodResource.IntegrationProperty.RequestTemplates``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-requesttemplates


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: timeoutInMillis

         ``MethodResource.IntegrationProperty.TimeoutInMillis``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-timeoutinmillis


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: type

         ``MethodResource.IntegrationProperty.Type``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: uri

         ``MethodResource.IntegrationProperty.Uri``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-uri


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: IntegrationResponseProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.MethodResource.IntegrationResponseProperty;

         .. code-tab:: javascript

            // cloudformation.MethodResource.IntegrationResponseProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.MethodResource.IntegrationResponseProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: statusCode

         ``MethodResource.IntegrationResponseProperty.StatusCode``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html#cfn-apigateway-method-integration-integrationresponse-statuscode


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


      .. py:attribute:: contentHandling

         ``MethodResource.IntegrationResponseProperty.ContentHandling``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html#cfn-apigateway-method-integrationresponse-contenthandling


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: responseParameters

         ``MethodResource.IntegrationResponseProperty.ResponseParameters``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html#cfn-apigateway-method-integration-integrationresponse-responseparameters


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: responseTemplates

         ``MethodResource.IntegrationResponseProperty.ResponseTemplates``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html#cfn-apigateway-method-integration-integrationresponse-responsetemplates


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: selectionPattern

         ``MethodResource.IntegrationResponseProperty.SelectionPattern``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html#cfn-apigateway-method-integration-integrationresponse-selectionpattern


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: MethodResponseProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.MethodResource.MethodResponseProperty;

         .. code-tab:: javascript

            // cloudformation.MethodResource.MethodResponseProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.MethodResource.MethodResponseProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: statusCode

         ``MethodResource.MethodResponseProperty.StatusCode``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html#cfn-apigateway-method-methodresponse-statuscode


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


      .. py:attribute:: responseModels

         ``MethodResource.MethodResponseProperty.ResponseModels``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html#cfn-apigateway-method-methodresponse-responsemodels


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: responseParameters

         ``MethodResource.MethodResponseProperty.ResponseParameters``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html#cfn-apigateway-method-methodresponse-responseparameters


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (boolean or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


MethodResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: MethodResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.MethodResourceProps;

      .. code-tab:: javascript

         // cloudformation.MethodResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.MethodResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: httpMethod

      ``AWS::ApiGateway::Method.HttpMethod``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-httpmethod


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: resourceId

      ``AWS::ApiGateway::Method.ResourceId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-resourceid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: restApiId

      ``AWS::ApiGateway::Method.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: apiKeyRequired

      ``AWS::ApiGateway::Method.ApiKeyRequired``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-apikeyrequired


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: authorizationScopes

      ``AWS::ApiGateway::Method.AuthorizationScopes``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizationscopes


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: authorizationType

      ``AWS::ApiGateway::Method.AuthorizationType``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizationtype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: authorizerId

      ``AWS::ApiGateway::Method.AuthorizerId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizerid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: integration

      ``AWS::ApiGateway::Method.Integration``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-integration


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.MethodResource.IntegrationProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: methodResponses

      ``AWS::ApiGateway::Method.MethodResponses``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-methodresponses


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.MethodResource.MethodResponseProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: operationName

      ``AWS::ApiGateway::Method.OperationName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-operationname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: requestModels

      ``AWS::ApiGateway::Method.RequestModels``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-requestmodels


      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


   .. py:attribute:: requestParameters

      ``AWS::ApiGateway::Method.RequestParameters``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-requestparameters


      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (boolean or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


   .. py:attribute:: requestValidatorId

      ``AWS::ApiGateway::Method.RequestValidatorId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-requestvalidatorid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


ModelResource
~~~~~~~~~~~~~

.. py:class:: ModelResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.ModelResource;

      .. code-tab:: javascript

         const { cloudformation.ModelResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.ModelResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ModelResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ModelResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ModelResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: modelName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ModelResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ModelResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ModelResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.ModelResourceProps;

      .. code-tab:: javascript

         // cloudformation.ModelResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ModelResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: restApiId

      ``AWS::ApiGateway::Model.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: contentType

      ``AWS::ApiGateway::Model.ContentType``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-contenttype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::Model.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: name

      ``AWS::ApiGateway::Model.Name``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: schema

      ``AWS::ApiGateway::Model.Schema``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-schema


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


RequestValidatorResource
~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: RequestValidatorResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.RequestValidatorResource;

      .. code-tab:: javascript

         const { cloudformation.RequestValidatorResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.RequestValidatorResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``RequestValidatorResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``RequestValidatorResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.RequestValidatorResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.RequestValidatorResourceProps`\  *(readonly)*


   .. py:attribute:: requestValidatorId

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


RequestValidatorResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: RequestValidatorResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.RequestValidatorResourceProps;

      .. code-tab:: javascript

         // cloudformation.RequestValidatorResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.RequestValidatorResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: restApiId

      ``AWS::ApiGateway::RequestValidator.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: name

      ``AWS::ApiGateway::RequestValidator.Name``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: validateRequestBody

      ``AWS::ApiGateway::RequestValidator.ValidateRequestBody``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-validaterequestbody


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: validateRequestParameters

      ``AWS::ApiGateway::RequestValidator.ValidateRequestParameters``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-validaterequestparameters


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


Resource
~~~~~~~~

.. py:class:: Resource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.Resource;

      .. code-tab:: javascript

         const { cloudformation.Resource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.Resource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``Resource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``Resource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.ResourceProps`\  *(readonly)*


   .. py:attribute:: resourceId

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.ResourceProps;

      .. code-tab:: javascript

         // cloudformation.ResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: parentId

      ``AWS::ApiGateway::Resource.ParentId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html#cfn-apigateway-resource-parentid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: pathPart

      ``AWS::ApiGateway::Resource.PathPart``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html#cfn-apigateway-resource-pathpart


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: restApiId

      ``AWS::ApiGateway::Resource.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html#cfn-apigateway-resource-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


RestApiResource
~~~~~~~~~~~~~~~

.. py:class:: RestApiResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.RestApiResource;

      .. code-tab:: javascript

         const { cloudformation.RestApiResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.RestApiResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``RestApiResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``RestApiResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.RestApiResourceProps`\  or ``undefined``

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.RestApiResourceProps`\  *(readonly)*


   .. py:attribute:: restApiId

      :type: string *(readonly)*


   .. py:attribute:: restApiRootResourceId

      :type: string *(readonly)*

   .. py:class:: EndpointConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.RestApiResource.EndpointConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.RestApiResource.EndpointConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.RestApiResource.EndpointConfigurationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: types

         ``RestApiResource.EndpointConfigurationProperty.Types``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html#cfn-apigateway-restapi-endpointconfiguration-types


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


   .. py:class:: S3LocationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.RestApiResource.S3LocationProperty;

         .. code-tab:: javascript

            // cloudformation.RestApiResource.S3LocationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.RestApiResource.S3LocationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: bucket

         ``RestApiResource.S3LocationProperty.Bucket``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-bucket


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: eTag

         ``RestApiResource.S3LocationProperty.ETag``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-etag


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: key

         ``RestApiResource.S3LocationProperty.Key``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-key


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: version

         ``RestApiResource.S3LocationProperty.Version``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-s3location.html#cfn-apigateway-restapi-s3location-version


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


RestApiResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: RestApiResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.RestApiResourceProps;

      .. code-tab:: javascript

         // cloudformation.RestApiResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.RestApiResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: apiKeySourceType

      ``AWS::ApiGateway::RestApi.ApiKeySourceType``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-apikeysourcetype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: binaryMediaTypes

      ``AWS::ApiGateway::RestApi.BinaryMediaTypes``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-binarymediatypes


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: body

      ``AWS::ApiGateway::RestApi.Body``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-body


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: bodyS3Location

      ``AWS::ApiGateway::RestApi.BodyS3Location``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-bodys3location


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.RestApiResource.S3LocationProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: cloneFrom

      ``AWS::ApiGateway::RestApi.CloneFrom``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-clonefrom


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::RestApi.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: endpointConfiguration

      ``AWS::ApiGateway::RestApi.EndpointConfiguration``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-endpointconfiguration


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.RestApiResource.EndpointConfigurationProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: failOnWarnings

      ``AWS::ApiGateway::RestApi.FailOnWarnings``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-failonwarnings


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: minimumCompressionSize

      ``AWS::ApiGateway::RestApi.MinimumCompressionSize``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-minimumcompressionsize


      :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: name

      ``AWS::ApiGateway::RestApi.Name``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: parameters

      ``AWS::ApiGateway::RestApi.Parameters``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-parameters


      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


   .. py:attribute:: policy

      ``AWS::ApiGateway::RestApi.Policy``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-policy


      :type: json or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


StageResource
~~~~~~~~~~~~~

.. py:class:: StageResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.StageResource;

      .. code-tab:: javascript

         const { cloudformation.StageResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.StageResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``StageResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``StageResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.StageResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.StageResourceProps`\  *(readonly)*


   .. py:attribute:: stageName

      :type: string *(readonly)*

   .. py:class:: AccessLogSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.StageResource.AccessLogSettingProperty;

         .. code-tab:: javascript

            // cloudformation.StageResource.AccessLogSettingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.StageResource.AccessLogSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: destinationArn

         ``StageResource.AccessLogSettingProperty.DestinationArn``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html#cfn-apigateway-stage-accesslogsetting-destinationarn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: format

         ``StageResource.AccessLogSettingProperty.Format``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html#cfn-apigateway-stage-accesslogsetting-format


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: CanarySettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.StageResource.CanarySettingProperty;

         .. code-tab:: javascript

            // cloudformation.StageResource.CanarySettingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.StageResource.CanarySettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: deploymentId

         ``StageResource.CanarySettingProperty.DeploymentId``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-deploymentid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: percentTraffic

         ``StageResource.CanarySettingProperty.PercentTraffic``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-percenttraffic


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: stageVariableOverrides

         ``StageResource.CanarySettingProperty.StageVariableOverrides``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-stagevariableoverrides


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


      .. py:attribute:: useStageCache

         ``StageResource.CanarySettingProperty.UseStageCache``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-canarysetting.html#cfn-apigateway-stage-canarysetting-usestagecache


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: MethodSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.StageResource.MethodSettingProperty;

         .. code-tab:: javascript

            // cloudformation.StageResource.MethodSettingProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.StageResource.MethodSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: cacheDataEncrypted

         ``StageResource.MethodSettingProperty.CacheDataEncrypted``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-cachedataencrypted


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cacheTtlInSeconds

         ``StageResource.MethodSettingProperty.CacheTtlInSeconds``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-cachettlinseconds


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: cachingEnabled

         ``StageResource.MethodSettingProperty.CachingEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-cachingenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: dataTraceEnabled

         ``StageResource.MethodSettingProperty.DataTraceEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-datatraceenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: httpMethod

         ``StageResource.MethodSettingProperty.HttpMethod``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-httpmethod


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: loggingLevel

         ``StageResource.MethodSettingProperty.LoggingLevel``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-logginglevel


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: metricsEnabled

         ``StageResource.MethodSettingProperty.MetricsEnabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-metricsenabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: resourcePath

         ``StageResource.MethodSettingProperty.ResourcePath``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-resourcepath


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: throttlingBurstLimit

         ``StageResource.MethodSettingProperty.ThrottlingBurstLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-throttlingburstlimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: throttlingRateLimit

         ``StageResource.MethodSettingProperty.ThrottlingRateLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html#cfn-apigateway-stage-methodsetting-throttlingratelimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


StageResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: StageResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.StageResourceProps;

      .. code-tab:: javascript

         // cloudformation.StageResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.StageResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: restApiId

      ``AWS::ApiGateway::Stage.RestApiId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-restapiid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: accessLogSetting

      ``AWS::ApiGateway::Stage.AccessLogSetting``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-accesslogsetting


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.StageResource.AccessLogSettingProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: cacheClusterEnabled

      ``AWS::ApiGateway::Stage.CacheClusterEnabled``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-cacheclusterenabled


      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: cacheClusterSize

      ``AWS::ApiGateway::Stage.CacheClusterSize``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-cacheclustersize


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: canarySetting

      ``AWS::ApiGateway::Stage.CanarySetting``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-canarysetting


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.StageResource.CanarySettingProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: clientCertificateId

      ``AWS::ApiGateway::Stage.ClientCertificateId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-clientcertificateid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: deploymentId

      ``AWS::ApiGateway::Stage.DeploymentId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-deploymentid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::Stage.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: documentationVersion

      ``AWS::ApiGateway::Stage.DocumentationVersion``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-documentationversion


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: methodSettings

      ``AWS::ApiGateway::Stage.MethodSettings``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-methodsettings


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.StageResource.MethodSettingProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: stageName

      ``AWS::ApiGateway::Stage.StageName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-stagename


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: variables

      ``AWS::ApiGateway::Stage.Variables``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-variables


      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (string or :py:class:`@aws-cdk/cdk.Token`\ ) or ``undefined`` *(abstract)*


UsagePlanKeyResource
~~~~~~~~~~~~~~~~~~~~

.. py:class:: UsagePlanKeyResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.UsagePlanKeyResource;

      .. code-tab:: javascript

         const { cloudformation.UsagePlanKeyResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.UsagePlanKeyResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``UsagePlanKeyResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``UsagePlanKeyResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanKeyResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanKeyResourceProps`\  *(readonly)*


   .. py:attribute:: usagePlanKeyId

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


UsagePlanKeyResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: UsagePlanKeyResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.UsagePlanKeyResourceProps;

      .. code-tab:: javascript

         // cloudformation.UsagePlanKeyResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.UsagePlanKeyResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: keyId

      ``AWS::ApiGateway::UsagePlanKey.KeyId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html#cfn-apigateway-usageplankey-keyid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: keyType

      ``AWS::ApiGateway::UsagePlanKey.KeyType``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html#cfn-apigateway-usageplankey-keytype


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: usagePlanId

      ``AWS::ApiGateway::UsagePlanKey.UsagePlanId``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html#cfn-apigateway-usageplankey-usageplanid


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


UsagePlanResource
~~~~~~~~~~~~~~~~~

.. py:class:: UsagePlanResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.UsagePlanResource;

      .. code-tab:: javascript

         const { cloudformation.UsagePlanResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.UsagePlanResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``UsagePlanResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``UsagePlanResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanResourceProps`\  or ``undefined``

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanResourceProps`\  *(readonly)*


   .. py:attribute:: usagePlanId

      :type: string *(readonly)*

   .. py:class:: ApiStageProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.UsagePlanResource.ApiStageProperty;

         .. code-tab:: javascript

            // cloudformation.UsagePlanResource.ApiStageProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.UsagePlanResource.ApiStageProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: apiId

         ``UsagePlanResource.ApiStageProperty.ApiId``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html#cfn-apigateway-usageplan-apistage-apiid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: stage

         ``UsagePlanResource.ApiStageProperty.Stage``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html#cfn-apigateway-usageplan-apistage-stage


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: throttle

         ``UsagePlanResource.ApiStageProperty.Throttle``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html#cfn-apigateway-usageplan-apistage-throttle


         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanResource.ThrottleSettingsProperty`\ ) or ``undefined`` *(abstract)*


   .. py:class:: QuotaSettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.UsagePlanResource.QuotaSettingsProperty;

         .. code-tab:: javascript

            // cloudformation.UsagePlanResource.QuotaSettingsProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.UsagePlanResource.QuotaSettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: limit

         ``UsagePlanResource.QuotaSettingsProperty.Limit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-quotasettings.html#cfn-apigateway-usageplan-quotasettings-limit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: offset

         ``UsagePlanResource.QuotaSettingsProperty.Offset``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-quotasettings.html#cfn-apigateway-usageplan-quotasettings-offset


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: period

         ``UsagePlanResource.QuotaSettingsProperty.Period``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-quotasettings.html#cfn-apigateway-usageplan-quotasettings-period


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: ThrottleSettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.cloudformation.UsagePlanResource.ThrottleSettingsProperty;

         .. code-tab:: javascript

            // cloudformation.UsagePlanResource.ThrottleSettingsProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.UsagePlanResource.ThrottleSettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: burstLimit

         ``UsagePlanResource.ThrottleSettingsProperty.BurstLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-throttlesettings.html#cfn-apigateway-usageplan-throttlesettings-burstlimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: rateLimit

         ``UsagePlanResource.ThrottleSettingsProperty.RateLimit``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-throttlesettings.html#cfn-apigateway-usageplan-throttlesettings-ratelimit


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


UsagePlanResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: UsagePlanResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.UsagePlanResourceProps;

      .. code-tab:: javascript

         // cloudformation.UsagePlanResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.UsagePlanResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: apiStages

      ``AWS::ApiGateway::UsagePlan.ApiStages``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-apistages


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanResource.ApiStageProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::UsagePlan.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: quota

      ``AWS::ApiGateway::UsagePlan.Quota``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-quota


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanResource.QuotaSettingsProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: throttle

      ``AWS::ApiGateway::UsagePlan.Throttle``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-throttle


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.cloudformation.UsagePlanResource.ThrottleSettingsProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: usagePlanName

      ``AWS::ApiGateway::UsagePlan.UsagePlanName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-usageplanname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


VpcLinkResource
~~~~~~~~~~~~~~~

.. py:class:: VpcLinkResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.VpcLinkResource;

      .. code-tab:: javascript

         const { cloudformation.VpcLinkResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { cloudformation.VpcLinkResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``VpcLinkResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``VpcLinkResource``
   :type properties: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.VpcLinkResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.cloudformation.VpcLinkResourceProps`\  *(readonly)*


   .. py:attribute:: vpcLinkId

      :type: string *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


VpcLinkResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: VpcLinkResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.cloudformation.VpcLinkResourceProps;

      .. code-tab:: javascript

         // cloudformation.VpcLinkResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.VpcLinkResourceProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: name

      ``AWS::ApiGateway::VpcLink.Name``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html#cfn-apigateway-vpclink-name


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: targetArns

      ``AWS::ApiGateway::VpcLink.TargetArns``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html#cfn-apigateway-vpclink-targetarns


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(abstract)*


   .. py:attribute:: description

      ``AWS::ApiGateway::VpcLink.Description``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html#cfn-apigateway-vpclink-description


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*



.. py:currentmodule:: @aws-cdk/aws-apigateway

