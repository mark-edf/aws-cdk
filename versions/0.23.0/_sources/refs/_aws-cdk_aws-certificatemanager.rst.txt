.. @jsii-pacmak:meta@ {"fingerprint":"wCV+XMM8xS7iZyR+U8DnoRXUUUyYI97pc77xs0t6FI4="}

@aws-cdk/aws-certificatemanager
===============================

.. mdinclude:: ./__aws-cdk_aws-certificatemanager.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.CertificateManager/0.23.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.CertificateManager" Version="0.23.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.CertificateManager --version 0.23.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.CertificateManager" version="0.23.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/certificatemanager/0.23.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:certificatemanager:jar:0.23.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="certificatemanager" rev="0.23.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>certificatemanager</artifactId>
           <version>0.23.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:certificatemanager:0.23.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='certificatemanager', version='0.23.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-certificatemanager/v/0.23.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-certificatemanager@0.23.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-certificatemanager": "^0.23.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-certificatemanager@0.23.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-certificatemanager/v/0.23.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-certificatemanager@0.23.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-certificatemanager": "^0.23.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-certificatemanager@0.23.0



.. py:module:: @aws-cdk/aws-certificatemanager

Certificate
^^^^^^^^^^^

.. py:class:: Certificate(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CertificateManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.certificatemanager.Certificate;

      .. code-tab:: javascript

         const { Certificate } = require('@aws-cdk/aws-certificatemanager');

      .. code-tab:: typescript

         import { Certificate } from '@aws-cdk/aws-certificatemanager';



   A certificate managed by Amazon Certificate Manager

   

   IMPORTANT: if you are creating a certificate as part of your stack, the stack

   will not complete creating until you read and follow the instructions in the

   email that you will receive.

   

   ACM will send validation emails to the following addresses:

   

     admin@domain.com

     administrator@domain.com

     hostmaster@domain.com

     postmaster@domain.com

     webmaster@domain.com

   

   For every domain that you register.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-certificatemanager.ICertificate`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-certificatemanager.CertificateProps`\ 

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-certificatemanager.ICertificate

      Import a certificate



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: 
      :type id: string
      :param props: 
      :type props: :py:class:`~@aws-cdk/aws-certificatemanager.CertificateImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-certificatemanager.ICertificate`\ 


   .. py:method:: export() -> @aws-cdk/aws-certificatemanager.CertificateImportProps

      *Implements* :py:meth:`@aws-cdk/aws-certificatemanager.ICertificate.export`

      Export this certificate from the stack



      :rtype: :py:class:`~@aws-cdk/aws-certificatemanager.CertificateImportProps`\ 


   .. py:attribute:: certificateArn

      *Implements* :py:meth:`@aws-cdk/aws-certificatemanager.ICertificate.certificateArn`

      The certificate's ARN



      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CertificateImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CertificateImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CertificateManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.certificatemanager.CertificateImportProps;

      .. code-tab:: javascript

         // CertificateImportProps is an interface

      .. code-tab:: typescript

         import { CertificateImportProps } from '@aws-cdk/aws-certificatemanager';



   Reference to an existing Certificate





   .. py:attribute:: certificateArn

      The certificate's ARN



      :type: string


CertificateProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CertificateProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CertificateManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.certificatemanager.CertificateProps;

      .. code-tab:: javascript

         // CertificateProps is an interface

      .. code-tab:: typescript

         import { CertificateProps } from '@aws-cdk/aws-certificatemanager';



   Properties for your certificate





   .. py:attribute:: domainName

      Fully-qualified domain name to request a certificate for.

      

      May contain wildcards, such as ``*.domain.com``.



      :type: string


   .. py:attribute:: subjectAlternativeNames

      Alternative domain names on your certificate.

      

      Use this to register alternative domain names that represent the same site.



      :type: string[] *(optional)*


   .. py:attribute:: validationDomains

      What validation domain to use for every requested domain.

      

      Has to be a superdomain of the requested domain.



      :type: string => string *(optional)*
      :default: Apex domain is used for every domain that's not overridden.


CfnCertificate
^^^^^^^^^^^^^^

.. py:class:: CfnCertificate(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CertificateManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.certificatemanager.CfnCertificate;

      .. code-tab:: javascript

         const { CfnCertificate } = require('@aws-cdk/aws-certificatemanager');

      .. code-tab:: typescript

         import { CfnCertificate } from '@aws-cdk/aws-certificatemanager';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param scope: scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: scoped id of the resource
   :type id: string
   :param props: resource properties
   :type props: :py:class:`~@aws-cdk/aws-certificatemanager.CfnCertificateProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: certificateArn

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-certificatemanager.CfnCertificateProps`\  *(readonly)*

   .. py:class:: DomainValidationOptionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CertificateManager;

         .. code-tab:: java

            import software.amazon.awscdk.services.certificatemanager.CfnCertificate.DomainValidationOptionProperty;

         .. code-tab:: javascript

            // CfnCertificate.DomainValidationOptionProperty is an interface

         .. code-tab:: typescript

            import { CfnCertificate.DomainValidationOptionProperty } from '@aws-cdk/aws-certificatemanager';





      .. py:attribute:: domainName

         ``CfnCertificate.DomainValidationOptionProperty.DomainName``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html#cfn-certificatemanager-certificate-domainvalidationoptions-domainname


         :type: string


      .. py:attribute:: validationDomain

         ``CfnCertificate.DomainValidationOptionProperty.ValidationDomain``

         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html#cfn-certificatemanager-certificate-domainvalidationoption-validationdomain


         :type: string



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependsOn>`

      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.Resource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CfnReference

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CfnReference`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.



      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.prepare>`

      Automatically detect references in this StackElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of



      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


CfnCertificateProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnCertificateProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CertificateManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.certificatemanager.CfnCertificateProps;

      .. code-tab:: javascript

         // CfnCertificateProps is an interface

      .. code-tab:: typescript

         import { CfnCertificateProps } from '@aws-cdk/aws-certificatemanager';





   .. py:attribute:: domainName

      ``AWS::CertificateManager::Certificate.DomainName``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainname


      :type: string


   .. py:attribute:: domainValidationOptions

      ``AWS::CertificateManager::Certificate.DomainValidationOptions``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainvalidationoptions


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`~@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty`\  or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: subjectAlternativeNames

      ``AWS::CertificateManager::Certificate.SubjectAlternativeNames``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-subjectalternativenames


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] *(optional)*


   .. py:attribute:: tags

      ``AWS::CertificateManager::Certificate.Tags``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-tags


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`@aws-cdk/cdk.Tag`\ )[] *(optional)*


   .. py:attribute:: validationMethod

      ``AWS::CertificateManager::Certificate.ValidationMethod``

      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-validationmethod


      :type: string *(optional)*


ICertificate (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ICertificate

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CertificateManager;

      .. code-tab:: java

         import software.amazon.awscdk.services.certificatemanager.ICertificate;

      .. code-tab:: javascript

         // ICertificate is an interface

      .. code-tab:: typescript

         import { ICertificate } from '@aws-cdk/aws-certificatemanager';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: certificateArn

      The certificate's ARN



      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-certificatemanager.CertificateImportProps

      Export this certificate from the stack



      :rtype: :py:class:`~@aws-cdk/aws-certificatemanager.CertificateImportProps`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


