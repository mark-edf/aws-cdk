.. @jsii-pacmak:meta@ {"fingerprint":"BHstXMhidN6lDIw5EoWNRm6l8oN75UEnLuL93pS/o/Y="}

@aws-cdk/aws-codedeploy
=======================

.. mdinclude:: ./__aws-cdk_aws-codedeploy.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.CodeDeploy/0.13.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.CodeDeploy" Version="0.13.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.CodeDeploy --version 0.13.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.CodeDeploy" version="0.13.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/codedeploy/0.13.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:codedeploy:jar:0.13.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="codedeploy" rev="0.13.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>codedeploy</artifactId>
           <version>0.13.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:codedeploy:0.13.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='codedeploy', version='0.13.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-codedeploy/v/0.13.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-codedeploy@0.13.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-codedeploy": "^0.13.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-codedeploy@0.13.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-codedeploy/v/0.13.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-codedeploy@0.13.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-codedeploy": "^0.13.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-codedeploy@0.13.0



.. py:module:: @aws-cdk/aws-codedeploy

AutoRollbackConfig (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AutoRollbackConfig

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.AutoRollbackConfig;

      .. code-tab:: javascript

         // AutoRollbackConfig is an interface

      .. code-tab:: typescript

         import { AutoRollbackConfig } from '@aws-cdk/aws-codedeploy';



   The configuration for automatically rolling back deployments in a given Deployment Group.




   .. py:attribute:: deploymentInAlarm

      Whether to automatically roll back a deployment during which one of the configured CloudWatch alarms for this Deployment Group went off.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: failedDeployment

      Whether to automatically roll back a deployment that fails.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: stoppedDeployment

      Whether to automatically roll back a deployment that was manually stopped.


      :type: boolean or ``undefined`` *(abstract)*


IServerDeploymentConfig (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IServerDeploymentConfig

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.IServerDeploymentConfig;

      .. code-tab:: javascript

         // IServerDeploymentConfig is an interface

      .. code-tab:: typescript

         import { IServerDeploymentConfig } from '@aws-cdk/aws-codedeploy';



   The Deployment Configuration of an EC2/on-premise Deployment Group. The default, pre-defined Configurations are available as constants on the {@link ServerDeploymentConfig} class (`ServerDeploymentConfig.HalfAtATime`, `ServerDeploymentConfig.AllAtOnce`, etc.). To create a custom Deployment Configuration, instantiate the {@link ServerDeploymentConfig} Construct.




   .. py:attribute:: deploymentConfigArn

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: deploymentConfigName

      :type: string *(readonly)* *(abstract)*


InstanceTagSet
^^^^^^^^^^^^^^

.. py:class:: InstanceTagSet(*instanceTagGroups)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.InstanceTagSet;

      .. code-tab:: javascript

         const { InstanceTagSet } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { InstanceTagSet } from '@aws-cdk/aws-codedeploy';



   Represents a set of instance tag groups. An instance will match a set if it matches all of the groups in the set - in other words, sets follow 'and' semantics. You can have a maximum of 3 tag groups inside a set.


   :param \*instanceTagGroups: 
   :type \*instanceTagGroups: string => string[]

   .. py:attribute:: instanceTagGroups

      :type: string => string[][] *(readonly)*


PipelineDeployAction
^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineDeployAction(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.PipelineDeployAction;

      .. code-tab:: javascript

         const { PipelineDeployAction } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { PipelineDeployAction } from '@aws-cdk/aws-codedeploy';



   :extends: :py:class:`@aws-cdk/aws-codepipeline-api.DeployAction`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codedeploy.PipelineDeployActionProps`\ 

   .. py:method:: addInputArtifact([artifact]) -> @aws-cdk/aws-codepipeline-api.Action

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addInputArtifact>`

      *Protected method*

      :param artifact: 
      :type artifact: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Action`\ 


   .. py:method:: addOutputArtifact([name]) -> @aws-cdk/aws-codepipeline-api.Artifact

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.addOutputArtifact>`

      *Protected method*

      :param name: 
      :type name: string or ``undefined``
      :rtype: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\ 


   .. py:method:: onStateChange(name, [target, [options]]) -> @aws-cdk/aws-events.EventRule

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.onStateChange>`

      :param name: 
      :type name: string
      :param target: 
      :type target: :py:class:`@aws-cdk/aws-events.IEventRuleTarget`\  or ``undefined``
      :param options: 
      :type options: :py:class:`@aws-cdk/aws-events.EventRuleProps`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/aws-events.EventRule`\ 


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :rtype: string[]


   .. py:attribute:: category

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.category>`

      The category of the action. The category defines which action type the owner (the entity that performs the action) performs.


      :type: :py:class:`@aws-cdk/aws-codepipeline-api.ActionCategory`\  *(readonly)*


   .. py:attribute:: owner

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.owner>`

      :type: string *(readonly)*


   .. py:attribute:: provider

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.provider>`

      The service provider that the action calls.


      :type: string *(readonly)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.runOrder>`

      The order in which AWS CodePipeline runs this action. For more information, see the AWS CodePipeline User Guide.  https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements


      :type: number *(readonly)*


   .. py:attribute:: version

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.version>`

      :type: string *(readonly)*


   .. py:attribute:: configuration

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.Action <@aws-cdk/aws-codepipeline-api.Action.configuration>`

      The action's configuration. These are key-value pairs that specify input values for an action. For more information, see the AWS CodePipeline User Guide.  http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements


      :type: any or ``undefined`` *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


PipelineDeployActionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PipelineDeployActionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.PipelineDeployActionProps;

      .. code-tab:: javascript

         // PipelineDeployActionProps is an interface

      .. code-tab:: typescript

         import { PipelineDeployActionProps } from '@aws-cdk/aws-codedeploy';



   Construction properties of the {@link PipelineDeployAction CodeDeploy deploy CodePipeline Action}.


   :extends: :py:class:`@aws-cdk/aws-codepipeline-api.CommonActionProps`\ 
   :extends: :py:class:`@aws-cdk/aws-codepipeline-api.CommonActionConstructProps`\ 


   .. py:attribute:: applicationName

      The name of the CodeDeploy application to deploy to.


      :type: string *(abstract)*


   .. py:attribute:: deploymentGroupName

      The name of the CodeDeploy deployment group to deploy to.


      :type: string *(abstract)*


   .. py:attribute:: inputArtifact

      The source to use as input for deployment.


      :type: :py:class:`@aws-cdk/aws-codepipeline-api.Artifact`\  or ``undefined`` *(abstract)*


   .. py:attribute:: stage

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionConstructProps <@aws-cdk/aws-codepipeline-api.CommonActionConstructProps.stage>`

      The Pipeline Stage to add this Action to.


      :type: :py:class:`@aws-cdk/aws-codepipeline-api.IStage`\  *(abstract)*


   .. py:attribute:: runOrder

      *Inherited from* :py:attr:`@aws-cdk/aws-codepipeline-api.CommonActionProps <@aws-cdk/aws-codepipeline-api.CommonActionProps.runOrder>`

      The runOrder property for this Action. RunOrder determines the relative order in which multiple Actions in the same Stage execute.


      :type: number or ``undefined`` *(abstract)*


ServerApplication
^^^^^^^^^^^^^^^^^

.. py:class:: ServerApplication(parent, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerApplication;

      .. code-tab:: javascript

         const { ServerApplication } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { ServerApplication } from '@aws-cdk/aws-codedeploy';



   A CodeDeploy Application that deploys to EC2/on-premise instances.


   :extends: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRef`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationProps`\  or ``undefined``

   .. py:attribute:: applicationArn

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerApplicationRef.applicationArn`

      :type: string *(readonly)*


   .. py:attribute:: applicationName

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerApplicationRef.applicationName`

      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-codedeploy.ServerApplicationRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-codedeploy.ServerApplicationRef <@aws-cdk/aws-codedeploy.ServerApplicationRef.export>`

      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRefProps`\ 


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ServerApplicationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerApplicationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerApplicationProps;

      .. code-tab:: javascript

         // ServerApplicationProps is an interface

      .. code-tab:: typescript

         import { ServerApplicationProps } from '@aws-cdk/aws-codedeploy';



   Construction properties for {@link ServerApplication}.




   .. py:attribute:: applicationName

      The physical, human-readable name of the CodeDeploy Application.


      :type: string or ``undefined`` *(abstract)*


ServerApplicationRef
^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerApplicationRef(parent, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerApplicationRef;

      .. code-tab:: javascript

         const { ServerApplicationRef } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { ServerApplicationRef } from '@aws-cdk/aws-codedeploy';



   Represents a reference to a CodeDeploy Application deploying to EC2/on-premise instances.  If you're managing the Application alongside the rest of your CDK resources, use the {@link ServerApplication} class.  If you want to reference an already existing Application, or one defined in a different CDK Stack, use the {@link #import} method.


   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :abstract: Yes
   :param parent: The parent construct
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-codedeploy.ServerApplicationRef

      Import an Application defined either outside the CDK, or in a different CDK Stack and exported using the {@link #export} method.


      :param parent: the parent Construct for this new Construct
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: the logical ID of this new Construct
      :type id: string
      :param props: the properties of the referenced Application
      :type props: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRefProps`\ 
      :return: a Construct representing a reference to an existing Application
      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRef`\ 


   .. py:method:: export() -> @aws-cdk/aws-codedeploy.ServerApplicationRefProps

      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRefProps`\ 


   .. py:attribute:: applicationArn

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: applicationName

      :type: string *(readonly)* *(abstract)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ServerApplicationRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerApplicationRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerApplicationRefProps;

      .. code-tab:: javascript

         // ServerApplicationRefProps is an interface

      .. code-tab:: typescript

         import { ServerApplicationRefProps } from '@aws-cdk/aws-codedeploy';



   Properties of a reference to a CodeDeploy EC2/on-premise Application.




   .. py:attribute:: applicationName

      The physical, human-readable name of the CodeDeploy EC2/on-premise Application we're referencing. The Application must be in the same account and region as the root Stack.


      :type: string *(abstract)*


ServerDeploymentConfig
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentConfig(parent, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentConfig;

      .. code-tab:: javascript

         const { ServerDeploymentConfig } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { ServerDeploymentConfig } from '@aws-cdk/aws-codedeploy';



   A custom Deployment Configuration for an EC2/on-premise Deployment Group.


   :extends: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentConfigRef`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentConfigProps`\ 

   .. py:attribute:: AllAtOnce

      :type: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  *(readonly)* *(static)*


   .. py:attribute:: HalfAtATime

      :type: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  *(readonly)* *(static)*


   .. py:attribute:: OneAtATime

      :type: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  *(readonly)* *(static)*


   .. py:attribute:: deploymentConfigArn

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentConfigRef.deploymentConfigArn`

      :type: string *(readonly)*


   .. py:attribute:: deploymentConfigName

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentConfigRef.deploymentConfigName`

      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-codedeploy.ServerDeploymentConfigRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentConfigRef <@aws-cdk/aws-codedeploy.ServerDeploymentConfigRef.export>`

      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentConfigRefProps`\ 


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ServerDeploymentConfigProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentConfigProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentConfigProps;

      .. code-tab:: javascript

         // ServerDeploymentConfigProps is an interface

      .. code-tab:: typescript

         import { ServerDeploymentConfigProps } from '@aws-cdk/aws-codedeploy';



   Construction properties of {@link ServerDeploymentConfig}.




   .. py:attribute:: deploymentConfigName

      The physical, human-readable name of the Deployment Configuration.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: minHealthyHostCount

      The minimum healhty hosts threshold expressed as an absolute number. If you've specified this value, you can't specify {@link #minHealthyHostPercentage}, however one of this or {@link #minHealthyHostPercentage} is required.


      :type: number or ``undefined`` *(abstract)*


   .. py:attribute:: minHealthyHostPercentage

      The minmum healhty hosts threshold expressed as a percentage of the fleet. If you've specified this value, you can't specify {@link #minHealthyHostCount}, however one of this or {@link #minHealthyHostCount} is required.


      :type: number or ``undefined`` *(abstract)*


ServerDeploymentConfigRef
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentConfigRef(parent, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentConfigRef;

      .. code-tab:: javascript

         const { ServerDeploymentConfigRef } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { ServerDeploymentConfigRef } from '@aws-cdk/aws-codedeploy';



   Reference to a custom Deployment Configuration for an EC2/on-premise Deployment Group.


   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\ 
   :abstract: Yes
   :param parent: The parent construct
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-codedeploy.ServerDeploymentConfigRef

      Import a custom Deployment Configuration for an EC2/on-premise Deployment Group defined either outside the CDK, or in a different CDK Stack and exported using the {@link #export} method.


      :param parent: the parent Construct for this new Construct
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: the logical ID of this new Construct
      :type id: string
      :param props: the properties of the referenced custom Deployment Configuration
      :type props: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentConfigRefProps`\ 
      :return: a Construct representing a reference to an existing custom Deployment Configuration
      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentConfigRef`\ 


   .. py:method:: export() -> @aws-cdk/aws-codedeploy.ServerDeploymentConfigRefProps

      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentConfigRefProps`\ 


   .. py:attribute:: deploymentConfigArn

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.IServerDeploymentConfig.deploymentConfigArn`

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: deploymentConfigName

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.IServerDeploymentConfig.deploymentConfigName`

      :type: string *(readonly)* *(abstract)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ServerDeploymentConfigRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentConfigRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentConfigRefProps;

      .. code-tab:: javascript

         // ServerDeploymentConfigRefProps is an interface

      .. code-tab:: typescript

         import { ServerDeploymentConfigRefProps } from '@aws-cdk/aws-codedeploy';



   Properties of a reference to a CodeDeploy EC2/on-premise Deployment Configuration.




   .. py:attribute:: deploymentConfigName

      The physical, human-readable name of the custom CodeDeploy EC2/on-premise Deployment Configuration that we are referencing.


      :type: string *(abstract)*


ServerDeploymentGroup
^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentGroup(parent, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentGroup;

      .. code-tab:: javascript

         const { ServerDeploymentGroup } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { ServerDeploymentGroup } from '@aws-cdk/aws-codedeploy';



   A CodeDeploy Deployment Group that deploys to EC2/on-premise instances.


   :extends: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef`\ 
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentGroupProps`\  or ``undefined``

   .. py:method:: addAlarm(alarm)

      Associates an additional alarm with this Deployment Group.


      :param alarm: the alarm to associate with this Deployment Group
      :type alarm: :py:class:`@aws-cdk/aws-cloudwatch.Alarm`\ 


   .. py:method:: addAutoScalingGroup(asg)

      Adds an additional auto-scaling group to this Deployment Group.


      :param asg: the auto-scaling group to add to this Deployment Group
      :type asg: :py:class:`@aws-cdk/aws-autoscaling.AutoScalingGroup`\ 


   .. py:attribute:: application

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef.application`

      :type: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRef`\  *(readonly)*


   .. py:attribute:: deploymentGroupArn

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef.deploymentGroupArn`

      :type: string *(readonly)*


   .. py:attribute:: deploymentGroupName

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef.deploymentGroupName`

      :type: string *(readonly)*


   .. py:attribute:: autoScalingGroups

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef.autoScalingGroups`

      :type: :py:class:`@aws-cdk/aws-autoscaling.AutoScalingGroup`\ [] or ``undefined`` *(readonly)*


   .. py:attribute:: role

      *Implements* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef.role`

      :type: :py:class:`@aws-cdk/aws-iam.Role`\  or ``undefined`` *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-codedeploy.ServerDeploymentGroupRefProps

      *Inherited from* :py:meth:`@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef <@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef.export>`

      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentGroupRefProps`\ 


   .. py:attribute:: deploymentConfig

      *Inherited from* :py:attr:`@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef <@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef.deploymentConfig>`

      :type: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ServerDeploymentGroupProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentGroupProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentGroupProps;

      .. code-tab:: javascript

         // ServerDeploymentGroupProps is an interface

      .. code-tab:: typescript

         import { ServerDeploymentGroupProps } from '@aws-cdk/aws-codedeploy';



   Construction properties for {@link ServerDeploymentGroup}.




   .. py:attribute:: alarms

      The CloudWatch alarms associated with this Deployment Group. CodeDeploy will stop (and optionally roll back) a deployment if during it any of the alarms trigger.  Alarms can also be added after the Deployment Group is created using the {@link #addAlarm} method.


      :type: :py:class:`@aws-cdk/aws-cloudwatch.Alarm`\ [] or ``undefined`` *(abstract)*


   .. py:attribute:: application

      The CodeDeploy EC2/on-premise Application this Deployment Group belongs to. If you don't provide one, a new Application will be created.


      :type: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRef`\  or ``undefined`` *(abstract)*


   .. py:attribute:: autoRollback

      The auto-rollback configuration for this Deployment Group.


      :type: :py:class:`~@aws-cdk/aws-codedeploy.AutoRollbackConfig`\  or ``undefined`` *(abstract)*


   .. py:attribute:: autoScalingGroups

      The auto-scaling groups belonging to this Deployment Group.  Auto-scaling groups can also be added after the Deployment Group is created using the {@link #addAutoScalingGroup} method.


      :type: :py:class:`@aws-cdk/aws-autoscaling.AutoScalingGroup`\ [] or ``undefined`` *(abstract)*


   .. py:attribute:: deploymentConfig

      The EC2/on-premise Deployment Configuration to use for this Deployment Group.


      :type: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  or ``undefined`` *(abstract)*


   .. py:attribute:: deploymentGroupName

      The physical, human-readable name of the CodeDeploy Deployment Group.


      :type: string or ``undefined`` *(abstract)*


   .. py:attribute:: ec2InstanceTags

      All EC2 instances matching the given set of tags when a deployment occurs will be added to this Deployment Group.


      :type: :py:class:`~@aws-cdk/aws-codedeploy.InstanceTagSet`\  or ``undefined`` *(abstract)*


   .. py:attribute:: ignorePollAlarmsFailure

      Whether to continue a deployment even if fetching the alarm status from CloudWatch failed.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: installAgent

      If you've provided any auto-scaling groups with the {@link #autoScalingGroups} property, you can set this property to add User Data that installs the CodeDeploy agent on the instances.


      :type: boolean or ``undefined`` *(abstract)*


   .. py:attribute:: loadBalancer

      The load balancer to place in front of this Deployment Group. Can be either a classic Elastic Load Balancer, or an Application Load Balancer / Network Load Balancer Target Group.


      :type: :py:class:`@aws-cdk/aws-codedeploy-api.ILoadBalancer`\  or ``undefined`` *(abstract)*


   .. py:attribute:: onPremiseInstanceTags

      All on-premise instances matching the given set of tags when a deployment occurs will be added to this Deployment Group.


      :type: :py:class:`~@aws-cdk/aws-codedeploy.InstanceTagSet`\  or ``undefined`` *(abstract)*


   .. py:attribute:: role

      The service Role of this Deployment Group. If you don't provide one, a new Role will be created.


      :type: :py:class:`@aws-cdk/aws-iam.Role`\  or ``undefined`` *(abstract)*


ServerDeploymentGroupRef
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentGroupRef(parent, id, [deploymentConfig])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentGroupRef;

      .. code-tab:: javascript

         const { ServerDeploymentGroupRef } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { ServerDeploymentGroupRef } from '@aws-cdk/aws-codedeploy';



   Represents a reference to a CodeDeploy EC2/on-premise Deployment Group.  If you're managing the Deployment Group alongside the rest of your CDK resources, use the {@link ServerDeploymentGroup} class.  If you want to reference an already existing Deployment Group, or one defined in a different CDK Stack, use the {@link #import} method.


   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :abstract: Yes
   :param parent: 
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param deploymentConfig: 
   :type deploymentConfig: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  or ``undefined``

   .. py:staticmethod:: import(parent, id, props) -> @aws-cdk/aws-codedeploy.ServerDeploymentGroupRef

      Import an EC2/on-premise Deployment Group defined either outside the CDK, or in a different CDK Stack and exported using the {@link #export} method.


      :param parent: the parent Construct for this new Construct
      :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: the logical ID of this new Construct
      :type id: string
      :param props: the properties of the referenced Deployment Group
      :type props: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentGroupRefProps`\ 
      :return: a Construct representing a reference to an existing Deployment Group
      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentGroupRef`\ 


   .. py:method:: export() -> @aws-cdk/aws-codedeploy.ServerDeploymentGroupRefProps

      :rtype: :py:class:`~@aws-cdk/aws-codedeploy.ServerDeploymentGroupRefProps`\ 


   .. py:attribute:: application

      :type: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRef`\  *(readonly)* *(abstract)*


   .. py:attribute:: deploymentConfig

      :type: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  *(readonly)*


   .. py:attribute:: deploymentGroupArn

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: deploymentGroupName

      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: autoScalingGroups

      :type: :py:class:`@aws-cdk/aws-autoscaling.AutoScalingGroup`\ [] or ``undefined`` *(readonly)* *(abstract)*


   .. py:attribute:: role

      :type: :py:class:`@aws-cdk/aws-iam.Role`\  or ``undefined`` *(readonly)* *(abstract)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


ServerDeploymentGroupRefProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ServerDeploymentGroupRefProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.ServerDeploymentGroupRefProps;

      .. code-tab:: javascript

         // ServerDeploymentGroupRefProps is an interface

      .. code-tab:: typescript

         import { ServerDeploymentGroupRefProps } from '@aws-cdk/aws-codedeploy';



   Properties of a reference to a CodeDeploy EC2/on-premise Deployment Group.




   .. py:attribute:: application

      The reference to the CodeDeploy EC2/on-premise Application that this Deployment Group belongs to.


      :type: :py:class:`~@aws-cdk/aws-codedeploy.ServerApplicationRef`\  *(abstract)*


   .. py:attribute:: deploymentGroupName

      The physical, human-readable name of the CodeDeploy EC2/on-premise Deployment Group that we are referencing.


      :type: string *(abstract)*


   .. py:attribute:: deploymentConfig

      The Deployment Configuration this Deployment Group uses.


      :type: :py:class:`~@aws-cdk/aws-codedeploy.IServerDeploymentConfig`\  or ``undefined`` *(abstract)*



cloudformation
^^^^^^^^^^^^^^
.. py:module:: @aws-cdk/aws-codedeploy.cloudformation

ApplicationResource
~~~~~~~~~~~~~~~~~~~

.. py:class:: ApplicationResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.cloudformation.ApplicationResource;

      .. code-tab:: javascript

         const { cloudformation.ApplicationResource } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { cloudformation.ApplicationResource } from '@aws-cdk/aws-codedeploy';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``ApplicationResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``ApplicationResource``
   :type properties: :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.ApplicationResourceProps`\  or ``undefined``

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: applicationName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.ApplicationResourceProps`\  *(readonly)*


   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


ApplicationResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: ApplicationResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.cloudformation.ApplicationResourceProps;

      .. code-tab:: javascript

         // cloudformation.ApplicationResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.ApplicationResourceProps } from '@aws-cdk/aws-codedeploy';





   .. py:attribute:: applicationName

      ``AWS::CodeDeploy::Application.ApplicationName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-applicationname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: computePlatform

      ``AWS::CodeDeploy::Application.ComputePlatform``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-computeplatform


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


DeploymentConfigResource
~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DeploymentConfigResource(parent, name, [properties])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentConfigResource;

      .. code-tab:: javascript

         const { cloudformation.DeploymentConfigResource } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { cloudformation.DeploymentConfigResource } from '@aws-cdk/aws-codedeploy';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``DeploymentConfigResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``DeploymentConfigResource``
   :type properties: :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentConfigResourceProps`\  or ``undefined``

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: deploymentConfigId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentConfigResourceProps`\  *(readonly)*

   .. py:class:: MinimumHealthyHostsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentConfigResource.MinimumHealthyHostsProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentConfigResource.MinimumHealthyHostsProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentConfigResource.MinimumHealthyHostsProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: type

         ``DeploymentConfigResource.MinimumHealthyHostsProperty.Type``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


      .. py:attribute:: value

         ``DeploymentConfigResource.MinimumHealthyHostsProperty.Value``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts-value


         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


DeploymentConfigResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DeploymentConfigResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentConfigResourceProps;

      .. code-tab:: javascript

         // cloudformation.DeploymentConfigResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.DeploymentConfigResourceProps } from '@aws-cdk/aws-codedeploy';





   .. py:attribute:: deploymentConfigName

      ``AWS::CodeDeploy::DeploymentConfig.DeploymentConfigName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-deploymentconfigname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: minimumHealthyHosts

      ``AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentConfigResource.MinimumHealthyHostsProperty`\  or ``undefined`` *(abstract)*


DeploymentGroupResource
~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DeploymentGroupResource(parent, name, properties)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource;

      .. code-tab:: javascript

         const { cloudformation.DeploymentGroupResource } = require('@aws-cdk/aws-codedeploy');

      .. code-tab:: typescript

         import { cloudformation.DeploymentGroupResource } from '@aws-cdk/aws-codedeploy';



   :extends: :py:class:`@aws-cdk/cdk.Resource`\ 
   :param parent: the ``cdk.Construct`` this ``DeploymentGroupResource`` is a part of
   :type parent: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param name: the name of the resource in the ``cdk.Construct`` tree
   :type name: string
   :param properties: the properties of this ``DeploymentGroupResource``
   :type properties: :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResourceProps`\ 

   .. py:method:: renderProperties([properties]) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.Resource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any or ``undefined``
      :rtype: string => (any or ``undefined``)


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.


      :type: string *(readonly)* *(static)*


   .. py:attribute:: deploymentGroupName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResourceProps`\  *(readonly)*

   .. py:class:: AlarmConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.AlarmConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.AlarmConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.AlarmConfigurationProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: alarms

         ``DeploymentGroupResource.AlarmConfigurationProperty.Alarms``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html#cfn-codedeploy-deploymentgroup-alarmconfiguration-alarms


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.AlarmProperty`\ )[] or ``undefined`` *(abstract)*


      .. py:attribute:: enabled

         ``DeploymentGroupResource.AlarmConfigurationProperty.Enabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html#cfn-codedeploy-deploymentgroup-alarmconfiguration-enabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: ignorePollAlarmFailure

         ``DeploymentGroupResource.AlarmConfigurationProperty.IgnorePollAlarmFailure``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html#cfn-codedeploy-deploymentgroup-alarmconfiguration-ignorepollalarmfailure


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: AlarmProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.AlarmProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.AlarmProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.AlarmProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: name

         ``DeploymentGroupResource.AlarmProperty.Name``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarm.html#cfn-codedeploy-deploymentgroup-alarm-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: AutoRollbackConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.AutoRollbackConfigurationProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.AutoRollbackConfigurationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.AutoRollbackConfigurationProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: enabled

         ``DeploymentGroupResource.AutoRollbackConfigurationProperty.Enabled``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-autorollbackconfiguration.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration-enabled


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: events

         ``DeploymentGroupResource.AutoRollbackConfigurationProperty.Events``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-autorollbackconfiguration.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration-events


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


   .. py:class:: DeploymentProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.DeploymentProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.DeploymentProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.DeploymentProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: revision

         ``DeploymentGroupResource.DeploymentProperty.Revision``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.RevisionLocationProperty`\  *(abstract)*


      .. py:attribute:: description

         ``DeploymentGroupResource.DeploymentProperty.Description``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html#cfn-properties-codedeploy-deploymentgroup-deployment-description


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: ignoreApplicationStopFailures

         ``DeploymentGroupResource.DeploymentProperty.IgnoreApplicationStopFailures``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html#cfn-properties-codedeploy-deploymentgroup-deployment-ignoreapplicationstopfailures


         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: DeploymentStyleProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.DeploymentStyleProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.DeploymentStyleProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.DeploymentStyleProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: deploymentOption

         ``DeploymentGroupResource.DeploymentStyleProperty.DeploymentOption``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentstyle.html#cfn-codedeploy-deploymentgroup-deploymentstyle-deploymentoption


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: deploymentType

         ``DeploymentGroupResource.DeploymentStyleProperty.DeploymentType``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentstyle.html#cfn-codedeploy-deploymentgroup-deploymentstyle-deploymenttype


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: EC2TagFilterProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.EC2TagFilterProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.EC2TagFilterProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.EC2TagFilterProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: key

         ``DeploymentGroupResource.EC2TagFilterProperty.Key``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilter.html#cfn-codedeploy-deploymentgroup-ec2tagfilter-key


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: type

         ``DeploymentGroupResource.EC2TagFilterProperty.Type``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilter.html#cfn-codedeploy-deploymentgroup-ec2tagfilter-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: value

         ``DeploymentGroupResource.EC2TagFilterProperty.Value``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilter.html#cfn-codedeploy-deploymentgroup-ec2tagfilter-value


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: EC2TagSetListObjectProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.EC2TagSetListObjectProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.EC2TagSetListObjectProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.EC2TagSetListObjectProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: ec2TagGroup

         ``DeploymentGroupResource.EC2TagSetListObjectProperty.Ec2TagGroup``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagsetlistobject.html#cfn-codedeploy-deploymentgroup-ec2tagsetlistobject-ec2taggroup


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.EC2TagFilterProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:class:: EC2TagSetProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.EC2TagSetProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.EC2TagSetProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.EC2TagSetProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: ec2TagSetList

         ``DeploymentGroupResource.EC2TagSetProperty.Ec2TagSetList``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagset.html#cfn-codedeploy-deploymentgroup-ec2tagset-ec2tagsetlist


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.EC2TagSetListObjectProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:class:: ELBInfoProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.ELBInfoProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.ELBInfoProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.ELBInfoProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: name

         ``DeploymentGroupResource.ELBInfoProperty.Name``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-elbinfo.html#cfn-codedeploy-deploymentgroup-elbinfo-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: GitHubLocationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.GitHubLocationProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.GitHubLocationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.GitHubLocationProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: commitId

         ``DeploymentGroupResource.GitHubLocationProperty.CommitId``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-githublocation-commitid


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


      .. py:attribute:: repository

         ``DeploymentGroupResource.GitHubLocationProperty.Repository``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-githublocation-repository


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:class:: LoadBalancerInfoProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.LoadBalancerInfoProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.LoadBalancerInfoProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.LoadBalancerInfoProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: elbInfoList

         ``DeploymentGroupResource.LoadBalancerInfoProperty.ElbInfoList``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo-elbinfolist


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.ELBInfoProperty`\ )[] or ``undefined`` *(abstract)*


      .. py:attribute:: targetGroupInfoList

         ``DeploymentGroupResource.LoadBalancerInfoProperty.TargetGroupInfoList``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo-targetgroupinfolist


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.TargetGroupInfoProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:class:: OnPremisesTagSetListObjectProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.OnPremisesTagSetListObjectProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.OnPremisesTagSetListObjectProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.OnPremisesTagSetListObjectProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: onPremisesTagGroup

         ``DeploymentGroupResource.OnPremisesTagSetListObjectProperty.OnPremisesTagGroup``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisestagsetlistobject.html#cfn-codedeploy-deploymentgroup-onpremisestagsetlistobject-onpremisestaggroup


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.TagFilterProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:class:: OnPremisesTagSetProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.OnPremisesTagSetProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.OnPremisesTagSetProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.OnPremisesTagSetProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: onPremisesTagSetList

         ``DeploymentGroupResource.OnPremisesTagSetProperty.OnPremisesTagSetList``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisestagset.html#cfn-codedeploy-deploymentgroup-onpremisestagset-onpremisestagsetlist


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.OnPremisesTagSetListObjectProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:class:: RevisionLocationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.RevisionLocationProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.RevisionLocationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.RevisionLocationProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: gitHubLocation

         ``DeploymentGroupResource.RevisionLocationProperty.GitHubLocation``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-githublocation


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.GitHubLocationProperty`\  or ``undefined`` *(abstract)*


      .. py:attribute:: revisionType

         ``DeploymentGroupResource.RevisionLocationProperty.RevisionType``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-revisiontype


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: s3Location

         ``DeploymentGroupResource.RevisionLocationProperty.S3Location``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location


         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.S3LocationProperty`\  or ``undefined`` *(abstract)*


   .. py:class:: S3LocationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.S3LocationProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.S3LocationProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.S3LocationProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: bucket

         ``DeploymentGroupResource.S3LocationProperty.Bucket``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-bucket


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


      .. py:attribute:: key

         ``DeploymentGroupResource.S3LocationProperty.Key``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-key


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


      .. py:attribute:: bundleType

         ``DeploymentGroupResource.S3LocationProperty.BundleType``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-bundletype


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: eTag

         ``DeploymentGroupResource.S3LocationProperty.ETag``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-etag


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: version

         ``DeploymentGroupResource.S3LocationProperty.Version``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-value


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: TagFilterProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.TagFilterProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.TagFilterProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.TagFilterProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: key

         ``DeploymentGroupResource.TagFilterProperty.Key``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-tagfilter.html#cfn-codedeploy-deploymentgroup-tagfilter-key


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: type

         ``DeploymentGroupResource.TagFilterProperty.Type``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-tagfilter.html#cfn-codedeploy-deploymentgroup-tagfilter-type


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: value

         ``DeploymentGroupResource.TagFilterProperty.Value``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-tagfilter.html#cfn-codedeploy-deploymentgroup-tagfilter-value


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: TargetGroupInfoProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.TargetGroupInfoProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.TargetGroupInfoProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.TargetGroupInfoProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: name

         ``DeploymentGroupResource.TargetGroupInfoProperty.Name``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgroupinfo.html#cfn-codedeploy-deploymentgroup-targetgroupinfo-name


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:class:: TriggerConfigProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.CodeDeploy;

         .. code-tab:: java

            import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResource.TriggerConfigProperty;

         .. code-tab:: javascript

            // cloudformation.DeploymentGroupResource.TriggerConfigProperty is an interface

         .. code-tab:: typescript

            import { cloudformation.DeploymentGroupResource.TriggerConfigProperty } from '@aws-cdk/aws-codedeploy';





      .. py:attribute:: triggerEvents

         ``DeploymentGroupResource.TriggerConfigProperty.TriggerEvents``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html#cfn-codedeploy-deploymentgroup-triggerconfig-triggerevents


         :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


      .. py:attribute:: triggerName

         ``DeploymentGroupResource.TriggerConfigProperty.TriggerName``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html#cfn-codedeploy-deploymentgroup-triggerconfig-triggername


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


      .. py:attribute:: triggerTargetArn

         ``DeploymentGroupResource.TriggerConfigProperty.TriggerTargetArn``
         http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html#cfn-codedeploy-deploymentgroup-triggerconfig-triggertargetarn


         :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*



   .. py:method:: addChild(child, childName)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addChild>`

      Adds a child construct to this node.


      *Protected method*

      :param child: The child construct
      :type child: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param childName: 
      :type childName: string
      :return: The resolved path part name of the child


   .. py:method:: addError(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addError>`

      Adds an { error: <message> } metadata entry to this construct. The toolkit will fail synthesis when errors are reported.


      :param message: The error message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addInfo(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addInfo>`

      Adds a { "aws:cdk:info": <message> } metadata entry to this construct. The toolkit will display the info message when apps are synthesized.


      :param message: The info message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addMetadata(type, [data, [from]]) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addMetadata>`

      Adds a metadata entry to this construct. Entries are arbitrary values and will also include a stack trace to allow tracing back to the code location for when the entry was added. It can be used, for example, to include source mapping in CloudFormation templates to improve diagnostics.


      :param type: a string denoting the type of metadata
      :type type: string
      :param data: the value of the metadata (can be a Token). If null/undefined, metadata will not be added.
      :type data: any or ``undefined``
      :param from: a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)
      :type from: any or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: addWarning(message) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.addWarning>`

      Adds a { warning: <message> } metadata entry to this construct. The toolkit will display the warning when an app is synthesized, or fail if run in --strict mode.


      :param message: The warning message.
      :type message: string
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: ancestors([upTo]) -> @aws-cdk/cdk.Construct[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.ancestors>`

      Return the ancestors (including self) of this Construct up until and excluding the indicated component


      :param upTo: 
      :type upTo: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ []


   .. py:method:: findChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.findChild>`

      Return a descendant by path  Throws an exception if the descendant is not found.


      :param path: 
      :type path: string
      :return: Child with the given path.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\ 


   .. py:method:: getContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.getContext>`

      Retrieves a value from tree context.  Context is usually initialized at the root, but can be overridden at any point in the tree.


      :param key: The context key
      :type key: string
      :return: The context value or undefined
      :rtype: any or ``undefined``


   .. py:method:: lock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.lock>`

      Locks this construct from allowing more children to be added. After this call, no more children can be added to this construct or to any children.


      *Protected method*



   .. py:method:: requireContext(key) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.requireContext>`

      Retrieve a value from tree-global context  It is an error if the context object is not available.


      :param key: 
      :type key: string
      :rtype: any or ``undefined``


   .. py:method:: required(props, name) -> any

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.required>`

      Throws if the `props` bag doesn't include the property `name`. In the future we can add some type-checking here, maybe even auto-generate during compilation.


      *Protected method*

      :param props: The props bag.
      :type props: any or ``undefined``
      :param name: The name of the required property.
      :type name: string
      :rtype: any or ``undefined``


   .. py:method:: setContext(key, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.setContext>`

      This can be used to set contextual values. Context must be set before any children are added, since children may consult context info during construction. If the key already exists, it will be overridden.


      :param key: The context key
      :type key: string
      :param value: The context value
      :type value: any or ``undefined``


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.


      :rtype: string


   .. py:method:: toTreeString([depth]) -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toTreeString>`

      Returns a string with a tree representation of this construct and it's children.


      :param depth: 
      :type depth: number or ``undefined``
      :rtype: string


   .. py:method:: tryFindChild(path) -> @aws-cdk/cdk.Construct

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.tryFindChild>`

      Return a descendant by path, or undefined


      :param path: 
      :type path: string
      :return: a child by path or undefined if not found.
      :rtype: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined``


   .. py:method:: unlock()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.unlock>`

      Unlocks this costruct and allows mutations (adding children).


      *Protected method*



   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      This method can be implemented by derived constructs in order to perform validation logic. It is called on all constructs before synthesis.


      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:method:: validateTree() -> @aws-cdk/cdk.ValidationError[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validateTree>`

      Invokes 'validate' on all child constructs and then on this construct (depth-first).


      :return: A list of validation errors. If the list is empty, all constructs are valid.
      :rtype: :py:class:`@aws-cdk/cdk.ValidationError`\ []


   .. py:attribute:: children

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.children>`

      All direct children of this construct.


      :type: :py:class:`@aws-cdk/cdk.Construct`\ [] *(readonly)*


   .. py:attribute:: id

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.id>`

      The local id of the construct. This id is unique amongst its siblings. To obtain a tree-global unique id for this construct, use `uniqueId`.


      :type: string *(readonly)*


   .. py:attribute:: locked

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.locked>`

      Returns true if this construct or any of it's parent constructs are locked.


      *Protected property*

      :type: boolean *(readonly)*


   .. py:attribute:: metadata

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.metadata>`

      An array of metadata objects associated with this construct. This can be used, for example, to implement support for deprecation notices, source mapping, etc.


      :type: :py:class:`@aws-cdk/cdk.MetadataEntry`\ [] *(readonly)*


   .. py:attribute:: path

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.path>`

      The full path of this construct in the tree. Components are separated by '/'.


      :type: string *(readonly)*


   .. py:attribute:: uniqueId

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.uniqueId>`

      A tree-global unique alphanumeric identifier for this construct. Includes all components of the tree.


      :type: string *(readonly)*


   .. py:attribute:: parent

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.parent>`

      Returns the parent of this node or undefined if this is a root node.


      :type: :py:class:`@aws-cdk/cdk.Construct`\  or ``undefined`` *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.Referenceable <@aws-cdk/cdk.Referenceable.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.


      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.


      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependency(*other)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addDependency>`

      Adds a dependency on another resource.


      :param \*other: The other resource.
      :type \*other: :py:class:`@aws-cdk/cdk.IDependable`\ 


   .. py:method:: addOverride(path, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a property override, either use `addPropertyOverride` or prefix `path` with "Properties." (i.e. `Properties.TopicName`).


      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any or ``undefined``


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.


      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, [value])

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.addPropertyOverride>`

      Adds an override to a resource property.  Syntactic sugar for `addOverride("Properties.<...>", value)`.


      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any or ``undefined``


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.CloudFormationToken

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.getAtt>`

      Returns a token for an runtime attribute of this resource. Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility in case there is no generated attribute.


      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.CloudFormationToken`\ 


   .. py:method:: toCloudFormation() -> json

      *Inherited from* :py:meth:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.toCloudFormation>`

      Emits CloudFormation for this resource.


      :rtype: json


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.options>`

      Options for this resource, such as condition, update policy etc.


      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.resourceType>`

      AWS resource type.


      :type: string *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.properties>`

      AWS resource properties.  This object is rendered via a call to "renderProperties(this.properties)".


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.Resource <@aws-cdk/cdk.Resource.untypedPropertyOverrides>`

      AWS resource property overrides.  During synthesis, the method "renderProperties(this.overrides)" is called with this object, and merged on top of the output of "renderProperties(this.properties)".  Derived classes should expose a strongly-typed version of this object as a public property called `propertyOverrides`.


      *Protected property*

      :type: any or ``undefined`` *(readonly)*


   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: dependencyElements

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.dependencyElements>`

      Returns the set of all stack elements (resources, parameters, conditions) that should be added when a resource "depends on" this construct.


      :type: :py:class:`@aws-cdk/cdk.IDependable`\ [] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.logicalId>`

      The logical ID for this CloudFormation stack element


      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stackPath>`

      Return the path with respect to the stack


      :type: string *(readonly)*


   .. py:attribute:: stack

      *Inherited from* :py:attr:`@aws-cdk/cdk.StackElement <@aws-cdk/cdk.StackElement.stack>`

      The stack this Construct has been made a part of


      *Protected property*

      :type: :py:class:`@aws-cdk/cdk.Stack`\ 


DeploymentGroupResourceProps (interface)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. py:class:: DeploymentGroupResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.CodeDeploy;

      .. code-tab:: java

         import software.amazon.awscdk.services.codedeploy.cloudformation.DeploymentGroupResourceProps;

      .. code-tab:: javascript

         // cloudformation.DeploymentGroupResourceProps is an interface

      .. code-tab:: typescript

         import { cloudformation.DeploymentGroupResourceProps } from '@aws-cdk/aws-codedeploy';





   .. py:attribute:: applicationName

      ``AWS::CodeDeploy::DeploymentGroup.ApplicationName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-applicationname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: serviceRoleArn

      ``AWS::CodeDeploy::DeploymentGroup.ServiceRoleArn``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-servicerolearn


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  *(abstract)*


   .. py:attribute:: alarmConfiguration

      ``AWS::CodeDeploy::DeploymentGroup.AlarmConfiguration``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-alarmconfiguration


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.AlarmConfigurationProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: autoRollbackConfiguration

      ``AWS::CodeDeploy::DeploymentGroup.AutoRollbackConfiguration``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.AutoRollbackConfigurationProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: autoScalingGroups

      ``AWS::CodeDeploy::DeploymentGroup.AutoScalingGroups``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autoscalinggroups


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (string or :py:class:`@aws-cdk/cdk.Token`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: deployment

      ``AWS::CodeDeploy::DeploymentGroup.Deployment``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deployment


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.DeploymentProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: deploymentConfigName

      ``AWS::CodeDeploy::DeploymentGroup.DeploymentConfigName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentconfigname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: deploymentGroupName

      ``AWS::CodeDeploy::DeploymentGroup.DeploymentGroupName``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentgroupname


      :type: string or :py:class:`@aws-cdk/cdk.Token`\  or ``undefined`` *(abstract)*


   .. py:attribute:: deploymentStyle

      ``AWS::CodeDeploy::DeploymentGroup.DeploymentStyle``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentstyle


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.DeploymentStyleProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: ec2TagFilters

      ``AWS::CodeDeploy::DeploymentGroup.Ec2TagFilters``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagfilters


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.EC2TagFilterProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: ec2TagSet

      ``AWS::CodeDeploy::DeploymentGroup.Ec2TagSet``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagset


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.EC2TagSetProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: loadBalancerInfo

      ``AWS::CodeDeploy::DeploymentGroup.LoadBalancerInfo``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.LoadBalancerInfoProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: onPremisesInstanceTagFilters

      ``AWS::CodeDeploy::DeploymentGroup.OnPremisesInstanceTagFilters``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisesinstancetagfilters


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.TagFilterProperty`\ )[] or ``undefined`` *(abstract)*


   .. py:attribute:: onPremisesTagSet

      ``AWS::CodeDeploy::DeploymentGroup.OnPremisesTagSet``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisestagset


      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.OnPremisesTagSetProperty`\  or ``undefined`` *(abstract)*


   .. py:attribute:: triggerConfigurations

      ``AWS::CodeDeploy::DeploymentGroup.TriggerConfigurations``
      http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-triggerconfigurations


      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-codedeploy.cloudformation.DeploymentGroupResource.TriggerConfigProperty`\ )[] or ``undefined`` *(abstract)*



.. py:currentmodule:: @aws-cdk/aws-codedeploy

