.. @jsii-pacmak:meta@ {"fingerprint":"2NIw7eo/M7y8QVD2z9+IPMfsY3BbYu2AAAnSjNbcsO4="}

@aws-cdk/aws-apigateway
=======================

.. mdinclude:: ./__aws-cdk_aws-apigateway.README.md

Reference
---------

.. tabs::

   .. group-tab:: C#

      View in `Nuget <https://www.nuget.org/packages/Amazon.CDK.AWS.APIGateway/0.26.0>`_

      **csproj**:

      .. code-block:: xml

         <PackageReference Include="Amazon.CDK.AWS.APIGateway" Version="0.26.0" />

      **dotnet**:

      .. code-block:: console

         dotnet add package Amazon.CDK.AWS.APIGateway --version 0.26.0

      **packages.config**:

      .. code-block:: xml

         <package id="Amazon.CDK.AWS.APIGateway" version="0.26.0" />


   .. group-tab:: Java

      View in `Maven Central <https://repo1.maven.org/maven2/software/amazon/awscdk/apigateway/0.26.0/>`_

      **Apache Buildr**:

      .. code-block:: none

         'software.amazon.awscdk:apigateway:jar:0.26.0'

      **Apache Ivy**:

      .. code-block:: xml

         <dependency groupId="software.amazon.awscdk" name="apigateway" rev="0.26.0"/>

      **Apache Maven**:

      .. code-block:: xml

         <dependency>
           <groupId>software.amazon.awscdk</groupId>
           <artifactId>apigateway</artifactId>
           <version>0.26.0</version>
         </dependency>

      **Gradle / Grails**:

      .. code-block:: none

         compile 'software.amazon.awscdk:apigateway:0.26.0'

      **Groovy Grape**:

      .. code-block:: none

         @Grapes(
         @Grab(group='software.amazon.awscdk', module='apigateway', version='0.26.0')
         )


   .. group-tab:: JavaScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-apigateway/v/0.26.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-apigateway@0.26.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-apigateway": "^0.26.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-apigateway@0.26.0


   .. group-tab:: TypeScript

      View in `NPM <https://www.npmjs.com/package/@aws-cdk/aws-apigateway/v/0.26.0>`_

      **npm**:

      .. code-block:: console

         $ npm i @aws-cdk/aws-apigateway@0.26.0

      **package.json**:

      .. code-block:: js

         {
           "@aws-cdk/aws-apigateway": "^0.26.0"
         }

      **yarn**:

      .. code-block:: console

         $ yarn add @aws-cdk/aws-apigateway@0.26.0



.. py:module:: @aws-cdk/aws-apigateway

ApiKeySourceType (enum)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ApiKeySourceType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ApiKeySourceType;

      .. code-tab:: javascript

         const { ApiKeySourceType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ApiKeySourceType } from '@aws-cdk/aws-apigateway';



   .. py:data:: Header

   To read the API key from the `X-API-Key` header of a request.



   .. py:data:: Authorizer

   To read the API key from the `UsageIdentifierKey` from a custom authorizer.




AuthorizationType (enum)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AuthorizationType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.AuthorizationType;

      .. code-tab:: javascript

         const { AuthorizationType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { AuthorizationType } from '@aws-cdk/aws-apigateway';



   .. py:data:: None

   Open access.



   .. py:data:: IAM

   Use AWS IAM permissions.



   .. py:data:: Custom

   Use a custom authorizer.



   .. py:data:: Cognito

   Use an AWS Cognito user pool.




AwsIntegration
^^^^^^^^^^^^^^

.. py:class:: AwsIntegration(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.AwsIntegration;

      .. code-tab:: javascript

         const { AwsIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { AwsIntegration } from '@aws-cdk/aws-apigateway';



   This type of integration lets an API expose AWS service actions. It is

   intended for calling all AWS service actions, but is not recommended for

   calling a Lambda function, because the Lambda custom integration is a legacy

   technology.



   :extends: :py:class:`~@aws-cdk/aws-apigateway.Integration`\ 
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.AwsIntegrationProps`\ 

   .. py:method:: bind(method)

      *Overrides* :py:meth:`@aws-cdk/aws-apigateway.Integration.bind`

      Can be overridden by subclasses to allow the integration to interact with the method

      being integrated, access the REST API object, method ARNs, etc.



      :param method: 
      :type method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


AwsIntegrationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: AwsIntegrationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.AwsIntegrationProps;

      .. code-tab:: javascript

         // AwsIntegrationProps is an interface

      .. code-tab:: typescript

         import { AwsIntegrationProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: service

      The name of the integrated AWS service (e.g. `s3`)



      :type: string


   .. py:attribute:: action

      The AWS action to perform in the integration.

      

      Use `actionParams` to specify key-value params for the action.

      

      Mutually exclusive with `path`.



      :type: string *(optional)*


   .. py:attribute:: actionParameters

      Parameters for the action.

      

      `action` must be set, and `path` must be undefined.

      The action params will be URL encoded.



      :type: string => string *(optional)*


   .. py:attribute:: options

      Integration options, such as content handling, request/response mapping, etc.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  *(optional)*


   .. py:attribute:: path

      The path to use for path-base APIs.

      

      For example, for S3 GET, you can set path to `bucket/key`.

      For lambda, you can set path to `2015-03-31/functions/${function-arn}/invocations`

      

      Mutually exclusive with the `action` options.



      :type: string *(optional)*


   .. py:attribute:: proxy

      Use AWS_PROXY integration.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: subdomain

      A designated subdomain supported by certain AWS service for fast

      host-name lookup.



      :type: string *(optional)*


CfnAccount
^^^^^^^^^^

.. py:class:: CfnAccount(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnAccount;

      .. code-tab:: javascript

         const { CfnAccount } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnAccount } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::Account`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnAccountProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: accountId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnAccountProps`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnAccountProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnAccountProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnAccountProps;

      .. code-tab:: javascript

         // CfnAccountProps is an interface

      .. code-tab:: typescript

         import { CfnAccountProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::Account`





   .. py:attribute:: cloudWatchRoleArn

      `AWS::ApiGateway::Account.CloudWatchRoleArn`



      :type: string *(optional)*


CfnApiKey
^^^^^^^^^

.. py:class:: CfnApiKey(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnApiKey;

      .. code-tab:: javascript

         const { CfnApiKey } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnApiKey } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::ApiKey`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnApiKeyProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: apiKeyId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnApiKeyProps`\  *(readonly)*

   .. py:class:: StageKeyProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnApiKey.StageKeyProperty;

         .. code-tab:: javascript

            // CfnApiKey.StageKeyProperty is an interface

         .. code-tab:: typescript

            import { CfnApiKey.StageKeyProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: restApiId

         `CfnApiKey.StageKeyProperty.RestApiId`



         :type: string *(optional)*


      .. py:attribute:: stageName

         `CfnApiKey.StageKeyProperty.StageName`



         :type: string *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnApiKeyProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnApiKeyProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnApiKeyProps;

      .. code-tab:: javascript

         // CfnApiKeyProps is an interface

      .. code-tab:: typescript

         import { CfnApiKeyProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::ApiKey`





   .. py:attribute:: customerId

      `AWS::ApiGateway::ApiKey.CustomerId`



      :type: string *(optional)*


   .. py:attribute:: description

      `AWS::ApiGateway::ApiKey.Description`



      :type: string *(optional)*


   .. py:attribute:: enabled

      `AWS::ApiGateway::ApiKey.Enabled`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: generateDistinctId

      `AWS::ApiGateway::ApiKey.GenerateDistinctId`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: name

      `AWS::ApiGateway::ApiKey.Name`



      :type: string *(optional)*


   .. py:attribute:: stageKeys

      `AWS::ApiGateway::ApiKey.StageKeys`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnApiKey.StageKeyProperty`\ )[] *(optional)*


   .. py:attribute:: value

      `AWS::ApiGateway::ApiKey.Value`



      :type: string *(optional)*


CfnApiV2
^^^^^^^^

.. py:class:: CfnApiV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnApiV2;

      .. code-tab:: javascript

         const { CfnApiV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnApiV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::Api`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnApiV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: apiId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnApiV2Props`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnApiV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnApiV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnApiV2Props;

      .. code-tab:: javascript

         // CfnApiV2Props is an interface

      .. code-tab:: typescript

         import { CfnApiV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::Api`





   .. py:attribute:: name

      `AWS::ApiGatewayV2::Api.Name`



      :type: string


   .. py:attribute:: protocolType

      `AWS::ApiGatewayV2::Api.ProtocolType`



      :type: string


   .. py:attribute:: routeSelectionExpression

      `AWS::ApiGatewayV2::Api.RouteSelectionExpression`



      :type: string


   .. py:attribute:: apiKeySelectionExpression

      `AWS::ApiGatewayV2::Api.ApiKeySelectionExpression`



      :type: string *(optional)*


   .. py:attribute:: description

      `AWS::ApiGatewayV2::Api.Description`



      :type: string *(optional)*


   .. py:attribute:: disableSchemaValidation

      `AWS::ApiGatewayV2::Api.DisableSchemaValidation`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: version

      `AWS::ApiGatewayV2::Api.Version`



      :type: string *(optional)*


CfnAuthorizer
^^^^^^^^^^^^^

.. py:class:: CfnAuthorizer(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnAuthorizer;

      .. code-tab:: javascript

         const { CfnAuthorizer } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnAuthorizer } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::Authorizer`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnAuthorizerProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: authorizerId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnAuthorizerProps`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnAuthorizerProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnAuthorizerProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnAuthorizerProps;

      .. code-tab:: javascript

         // CfnAuthorizerProps is an interface

      .. code-tab:: typescript

         import { CfnAuthorizerProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::Authorizer`





   .. py:attribute:: restApiId

      `AWS::ApiGateway::Authorizer.RestApiId`



      :type: string


   .. py:attribute:: type

      `AWS::ApiGateway::Authorizer.Type`



      :type: string


   .. py:attribute:: authorizerCredentials

      `AWS::ApiGateway::Authorizer.AuthorizerCredentials`



      :type: string *(optional)*


   .. py:attribute:: authorizerResultTtlInSeconds

      `AWS::ApiGateway::Authorizer.AuthorizerResultTtlInSeconds`



      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: authorizerUri

      `AWS::ApiGateway::Authorizer.AuthorizerUri`



      :type: string *(optional)*


   .. py:attribute:: authType

      `AWS::ApiGateway::Authorizer.AuthType`



      :type: string *(optional)*


   .. py:attribute:: identitySource

      `AWS::ApiGateway::Authorizer.IdentitySource`



      :type: string *(optional)*


   .. py:attribute:: identityValidationExpression

      `AWS::ApiGateway::Authorizer.IdentityValidationExpression`



      :type: string *(optional)*


   .. py:attribute:: name

      `AWS::ApiGateway::Authorizer.Name`



      :type: string *(optional)*


   .. py:attribute:: providerArns

      `AWS::ApiGateway::Authorizer.ProviderARNs`



      :type: string[] *(optional)*


CfnAuthorizerV2
^^^^^^^^^^^^^^^

.. py:class:: CfnAuthorizerV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnAuthorizerV2;

      .. code-tab:: javascript

         const { CfnAuthorizerV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnAuthorizerV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::Authorizer`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnAuthorizerV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: authorizerId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnAuthorizerV2Props`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnAuthorizerV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnAuthorizerV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnAuthorizerV2Props;

      .. code-tab:: javascript

         // CfnAuthorizerV2Props is an interface

      .. code-tab:: typescript

         import { CfnAuthorizerV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::Authorizer`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::Authorizer.ApiId`



      :type: string


   .. py:attribute:: authorizerType

      `AWS::ApiGatewayV2::Authorizer.AuthorizerType`



      :type: string


   .. py:attribute:: authorizerUri

      `AWS::ApiGatewayV2::Authorizer.AuthorizerUri`



      :type: string


   .. py:attribute:: identitySource

      `AWS::ApiGatewayV2::Authorizer.IdentitySource`



      :type: string[]


   .. py:attribute:: name

      `AWS::ApiGatewayV2::Authorizer.Name`



      :type: string


   .. py:attribute:: authorizerCredentialsArn

      `AWS::ApiGatewayV2::Authorizer.AuthorizerCredentialsArn`



      :type: string *(optional)*


   .. py:attribute:: authorizerResultTtlInSeconds

      `AWS::ApiGatewayV2::Authorizer.AuthorizerResultTtlInSeconds`



      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: identityValidationExpression

      `AWS::ApiGatewayV2::Authorizer.IdentityValidationExpression`



      :type: string *(optional)*


CfnBasePathMapping
^^^^^^^^^^^^^^^^^^

.. py:class:: CfnBasePathMapping(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnBasePathMapping;

      .. code-tab:: javascript

         const { CfnBasePathMapping } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnBasePathMapping } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::BasePathMapping`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnBasePathMappingProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: basePathMappingId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnBasePathMappingProps`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnBasePathMappingProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnBasePathMappingProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnBasePathMappingProps;

      .. code-tab:: javascript

         // CfnBasePathMappingProps is an interface

      .. code-tab:: typescript

         import { CfnBasePathMappingProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::BasePathMapping`





   .. py:attribute:: domainName

      `AWS::ApiGateway::BasePathMapping.DomainName`



      :type: string


   .. py:attribute:: basePath

      `AWS::ApiGateway::BasePathMapping.BasePath`



      :type: string *(optional)*


   .. py:attribute:: restApiId

      `AWS::ApiGateway::BasePathMapping.RestApiId`



      :type: string *(optional)*


   .. py:attribute:: stage

      `AWS::ApiGateway::BasePathMapping.Stage`



      :type: string *(optional)*


CfnClientCertificate
^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnClientCertificate(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnClientCertificate;

      .. code-tab:: javascript

         const { CfnClientCertificate } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnClientCertificate } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::ClientCertificate`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnClientCertificateProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: clientCertificateName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnClientCertificateProps`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnClientCertificateProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnClientCertificateProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnClientCertificateProps;

      .. code-tab:: javascript

         // CfnClientCertificateProps is an interface

      .. code-tab:: typescript

         import { CfnClientCertificateProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::ClientCertificate`





   .. py:attribute:: description

      `AWS::ApiGateway::ClientCertificate.Description`



      :type: string *(optional)*


CfnDeployment
^^^^^^^^^^^^^

.. py:class:: CfnDeployment(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDeployment;

      .. code-tab:: javascript

         const { CfnDeployment } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnDeployment } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::Deployment`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnDeploymentProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: deploymentId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnDeploymentProps`\  *(readonly)*

   .. py:class:: AccessLogSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnDeployment.AccessLogSettingProperty;

         .. code-tab:: javascript

            // CfnDeployment.AccessLogSettingProperty is an interface

         .. code-tab:: typescript

            import { CfnDeployment.AccessLogSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: destinationArn

         `CfnDeployment.AccessLogSettingProperty.DestinationArn`



         :type: string *(optional)*


      .. py:attribute:: format

         `CfnDeployment.AccessLogSettingProperty.Format`



         :type: string *(optional)*


   .. py:class:: CanarySettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnDeployment.CanarySettingProperty;

         .. code-tab:: javascript

            // CfnDeployment.CanarySettingProperty is an interface

         .. code-tab:: typescript

            import { CfnDeployment.CanarySettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: percentTraffic

         `CfnDeployment.CanarySettingProperty.PercentTraffic`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: stageVariableOverrides

         `CfnDeployment.CanarySettingProperty.StageVariableOverrides`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: useStageCache

         `CfnDeployment.CanarySettingProperty.UseStageCache`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: DeploymentCanarySettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnDeployment.DeploymentCanarySettingsProperty;

         .. code-tab:: javascript

            // CfnDeployment.DeploymentCanarySettingsProperty is an interface

         .. code-tab:: typescript

            import { CfnDeployment.DeploymentCanarySettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: percentTraffic

         `CfnDeployment.DeploymentCanarySettingsProperty.PercentTraffic`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: stageVariableOverrides

         `CfnDeployment.DeploymentCanarySettingsProperty.StageVariableOverrides`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: useStageCache

         `CfnDeployment.DeploymentCanarySettingsProperty.UseStageCache`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: MethodSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnDeployment.MethodSettingProperty;

         .. code-tab:: javascript

            // CfnDeployment.MethodSettingProperty is an interface

         .. code-tab:: typescript

            import { CfnDeployment.MethodSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: cacheDataEncrypted

         `CfnDeployment.MethodSettingProperty.CacheDataEncrypted`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: cacheTtlInSeconds

         `CfnDeployment.MethodSettingProperty.CacheTtlInSeconds`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: cachingEnabled

         `CfnDeployment.MethodSettingProperty.CachingEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: dataTraceEnabled

         `CfnDeployment.MethodSettingProperty.DataTraceEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: httpMethod

         `CfnDeployment.MethodSettingProperty.HttpMethod`



         :type: string *(optional)*


      .. py:attribute:: loggingLevel

         `CfnDeployment.MethodSettingProperty.LoggingLevel`



         :type: string *(optional)*


      .. py:attribute:: metricsEnabled

         `CfnDeployment.MethodSettingProperty.MetricsEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: resourcePath

         `CfnDeployment.MethodSettingProperty.ResourcePath`



         :type: string *(optional)*


      .. py:attribute:: throttlingBurstLimit

         `CfnDeployment.MethodSettingProperty.ThrottlingBurstLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: throttlingRateLimit

         `CfnDeployment.MethodSettingProperty.ThrottlingRateLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: StageDescriptionProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnDeployment.StageDescriptionProperty;

         .. code-tab:: javascript

            // CfnDeployment.StageDescriptionProperty is an interface

         .. code-tab:: typescript

            import { CfnDeployment.StageDescriptionProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: accessLogSetting

         `CfnDeployment.StageDescriptionProperty.AccessLogSetting`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnDeployment.AccessLogSettingProperty`\  *(optional)*


      .. py:attribute:: cacheClusterEnabled

         `CfnDeployment.StageDescriptionProperty.CacheClusterEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: cacheClusterSize

         `CfnDeployment.StageDescriptionProperty.CacheClusterSize`



         :type: string *(optional)*


      .. py:attribute:: cacheDataEncrypted

         `CfnDeployment.StageDescriptionProperty.CacheDataEncrypted`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: cacheTtlInSeconds

         `CfnDeployment.StageDescriptionProperty.CacheTtlInSeconds`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: cachingEnabled

         `CfnDeployment.StageDescriptionProperty.CachingEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: canarySetting

         `CfnDeployment.StageDescriptionProperty.CanarySetting`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnDeployment.CanarySettingProperty`\  *(optional)*


      .. py:attribute:: clientCertificateId

         `CfnDeployment.StageDescriptionProperty.ClientCertificateId`



         :type: string *(optional)*


      .. py:attribute:: dataTraceEnabled

         `CfnDeployment.StageDescriptionProperty.DataTraceEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: description

         `CfnDeployment.StageDescriptionProperty.Description`



         :type: string *(optional)*


      .. py:attribute:: documentationVersion

         `CfnDeployment.StageDescriptionProperty.DocumentationVersion`



         :type: string *(optional)*


      .. py:attribute:: loggingLevel

         `CfnDeployment.StageDescriptionProperty.LoggingLevel`



         :type: string *(optional)*


      .. py:attribute:: methodSettings

         `CfnDeployment.StageDescriptionProperty.MethodSettings`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnDeployment.MethodSettingProperty`\ )[] *(optional)*


      .. py:attribute:: metricsEnabled

         `CfnDeployment.StageDescriptionProperty.MetricsEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: tags

         `CfnDeployment.StageDescriptionProperty.Tags`



         :type: :py:class:`@aws-cdk/cdk.CfnTag`\ [] *(optional)*


      .. py:attribute:: throttlingBurstLimit

         `CfnDeployment.StageDescriptionProperty.ThrottlingBurstLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: throttlingRateLimit

         `CfnDeployment.StageDescriptionProperty.ThrottlingRateLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: tracingEnabled

         `CfnDeployment.StageDescriptionProperty.TracingEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: variables

         `CfnDeployment.StageDescriptionProperty.Variables`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnDeploymentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDeploymentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDeploymentProps;

      .. code-tab:: javascript

         // CfnDeploymentProps is an interface

      .. code-tab:: typescript

         import { CfnDeploymentProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::Deployment`





   .. py:attribute:: restApiId

      `AWS::ApiGateway::Deployment.RestApiId`



      :type: string


   .. py:attribute:: deploymentCanarySettings

      `AWS::ApiGateway::Deployment.DeploymentCanarySettings`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnDeployment.DeploymentCanarySettingsProperty`\  *(optional)*


   .. py:attribute:: description

      `AWS::ApiGateway::Deployment.Description`



      :type: string *(optional)*


   .. py:attribute:: stageDescription

      `AWS::ApiGateway::Deployment.StageDescription`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnDeployment.StageDescriptionProperty`\  *(optional)*


   .. py:attribute:: stageName

      `AWS::ApiGateway::Deployment.StageName`



      :type: string *(optional)*


CfnDeploymentV2
^^^^^^^^^^^^^^^

.. py:class:: CfnDeploymentV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDeploymentV2;

      .. code-tab:: javascript

         const { CfnDeploymentV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnDeploymentV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::Deployment`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnDeploymentV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: deploymentId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnDeploymentV2Props`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnDeploymentV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDeploymentV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDeploymentV2Props;

      .. code-tab:: javascript

         // CfnDeploymentV2Props is an interface

      .. code-tab:: typescript

         import { CfnDeploymentV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::Deployment`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::Deployment.ApiId`



      :type: string


   .. py:attribute:: description

      `AWS::ApiGatewayV2::Deployment.Description`



      :type: string *(optional)*


   .. py:attribute:: stageName

      `AWS::ApiGatewayV2::Deployment.StageName`



      :type: string *(optional)*


CfnDocumentationPart
^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDocumentationPart(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDocumentationPart;

      .. code-tab:: javascript

         const { CfnDocumentationPart } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnDocumentationPart } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::DocumentationPart`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnDocumentationPartProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: documentationPartId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnDocumentationPartProps`\  *(readonly)*

   .. py:class:: LocationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnDocumentationPart.LocationProperty;

         .. code-tab:: javascript

            // CfnDocumentationPart.LocationProperty is an interface

         .. code-tab:: typescript

            import { CfnDocumentationPart.LocationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: method

         `CfnDocumentationPart.LocationProperty.Method`



         :type: string *(optional)*


      .. py:attribute:: name

         `CfnDocumentationPart.LocationProperty.Name`



         :type: string *(optional)*


      .. py:attribute:: path

         `CfnDocumentationPart.LocationProperty.Path`



         :type: string *(optional)*


      .. py:attribute:: statusCode

         `CfnDocumentationPart.LocationProperty.StatusCode`



         :type: string *(optional)*


      .. py:attribute:: type

         `CfnDocumentationPart.LocationProperty.Type`



         :type: string *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnDocumentationPartProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDocumentationPartProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDocumentationPartProps;

      .. code-tab:: javascript

         // CfnDocumentationPartProps is an interface

      .. code-tab:: typescript

         import { CfnDocumentationPartProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::DocumentationPart`





   .. py:attribute:: location

      `AWS::ApiGateway::DocumentationPart.Location`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnDocumentationPart.LocationProperty`\ 


   .. py:attribute:: properties

      `AWS::ApiGateway::DocumentationPart.Properties`



      :type: string


   .. py:attribute:: restApiId

      `AWS::ApiGateway::DocumentationPart.RestApiId`



      :type: string


CfnDocumentationVersion
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDocumentationVersion(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDocumentationVersion;

      .. code-tab:: javascript

         const { CfnDocumentationVersion } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnDocumentationVersion } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::DocumentationVersion`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnDocumentationVersionProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: documentationVersionId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnDocumentationVersionProps`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnDocumentationVersionProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDocumentationVersionProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDocumentationVersionProps;

      .. code-tab:: javascript

         // CfnDocumentationVersionProps is an interface

      .. code-tab:: typescript

         import { CfnDocumentationVersionProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::DocumentationVersion`





   .. py:attribute:: documentationVersion

      `AWS::ApiGateway::DocumentationVersion.DocumentationVersion`



      :type: string


   .. py:attribute:: restApiId

      `AWS::ApiGateway::DocumentationVersion.RestApiId`



      :type: string


   .. py:attribute:: description

      `AWS::ApiGateway::DocumentationVersion.Description`



      :type: string *(optional)*


CfnDomainName
^^^^^^^^^^^^^

.. py:class:: CfnDomainName(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDomainName;

      .. code-tab:: javascript

         const { CfnDomainName } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnDomainName } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::DomainName`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnDomainNameProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: domainNameDistributionDomainName

      :type: string *(readonly)*


   .. py:attribute:: domainNameDistributionHostedZoneId

      :type: string *(readonly)*


   .. py:attribute:: domainNameName

      :type: string *(readonly)*


   .. py:attribute:: domainNameRegionalDomainName

      :type: string *(readonly)*


   .. py:attribute:: domainNameRegionalHostedZoneId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnDomainNameProps`\  *(readonly)*

   .. py:class:: EndpointConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnDomainName.EndpointConfigurationProperty;

         .. code-tab:: javascript

            // CfnDomainName.EndpointConfigurationProperty is an interface

         .. code-tab:: typescript

            import { CfnDomainName.EndpointConfigurationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: types

         `CfnDomainName.EndpointConfigurationProperty.Types`



         :type: string[] *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnDomainNameProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnDomainNameProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnDomainNameProps;

      .. code-tab:: javascript

         // CfnDomainNameProps is an interface

      .. code-tab:: typescript

         import { CfnDomainNameProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::DomainName`





   .. py:attribute:: domainName

      `AWS::ApiGateway::DomainName.DomainName`



      :type: string


   .. py:attribute:: certificateArn

      `AWS::ApiGateway::DomainName.CertificateArn`



      :type: string *(optional)*


   .. py:attribute:: endpointConfiguration

      `AWS::ApiGateway::DomainName.EndpointConfiguration`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnDomainName.EndpointConfigurationProperty`\  *(optional)*


   .. py:attribute:: regionalCertificateArn

      `AWS::ApiGateway::DomainName.RegionalCertificateArn`



      :type: string *(optional)*


CfnGatewayResponse
^^^^^^^^^^^^^^^^^^

.. py:class:: CfnGatewayResponse(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnGatewayResponse;

      .. code-tab:: javascript

         const { CfnGatewayResponse } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnGatewayResponse } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::GatewayResponse`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnGatewayResponseProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: gatewayResponseId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnGatewayResponseProps`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnGatewayResponseProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnGatewayResponseProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnGatewayResponseProps;

      .. code-tab:: javascript

         // CfnGatewayResponseProps is an interface

      .. code-tab:: typescript

         import { CfnGatewayResponseProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::GatewayResponse`





   .. py:attribute:: responseType

      `AWS::ApiGateway::GatewayResponse.ResponseType`



      :type: string


   .. py:attribute:: restApiId

      `AWS::ApiGateway::GatewayResponse.RestApiId`



      :type: string


   .. py:attribute:: responseParameters

      `AWS::ApiGateway::GatewayResponse.ResponseParameters`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


   .. py:attribute:: responseTemplates

      `AWS::ApiGateway::GatewayResponse.ResponseTemplates`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


   .. py:attribute:: statusCode

      `AWS::ApiGateway::GatewayResponse.StatusCode`



      :type: string *(optional)*


CfnIntegrationResponseV2
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnIntegrationResponseV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnIntegrationResponseV2;

      .. code-tab:: javascript

         const { CfnIntegrationResponseV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnIntegrationResponseV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::IntegrationResponse`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnIntegrationResponseV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: integrationResponseId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnIntegrationResponseV2Props`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnIntegrationResponseV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnIntegrationResponseV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnIntegrationResponseV2Props;

      .. code-tab:: javascript

         // CfnIntegrationResponseV2Props is an interface

      .. code-tab:: typescript

         import { CfnIntegrationResponseV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::IntegrationResponse`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::IntegrationResponse.ApiId`



      :type: string


   .. py:attribute:: integrationId

      `AWS::ApiGatewayV2::IntegrationResponse.IntegrationId`



      :type: string


   .. py:attribute:: integrationResponseKey

      `AWS::ApiGatewayV2::IntegrationResponse.IntegrationResponseKey`



      :type: string


   .. py:attribute:: contentHandlingStrategy

      `AWS::ApiGatewayV2::IntegrationResponse.ContentHandlingStrategy`



      :type: string *(optional)*


   .. py:attribute:: responseParameters

      `AWS::ApiGatewayV2::IntegrationResponse.ResponseParameters`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: responseTemplates

      `AWS::ApiGatewayV2::IntegrationResponse.ResponseTemplates`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: templateSelectionExpression

      `AWS::ApiGatewayV2::IntegrationResponse.TemplateSelectionExpression`



      :type: string *(optional)*


CfnIntegrationV2
^^^^^^^^^^^^^^^^

.. py:class:: CfnIntegrationV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnIntegrationV2;

      .. code-tab:: javascript

         const { CfnIntegrationV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnIntegrationV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::Integration`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnIntegrationV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: integrationId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnIntegrationV2Props`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnIntegrationV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnIntegrationV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnIntegrationV2Props;

      .. code-tab:: javascript

         // CfnIntegrationV2Props is an interface

      .. code-tab:: typescript

         import { CfnIntegrationV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::Integration`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::Integration.ApiId`



      :type: string


   .. py:attribute:: integrationType

      `AWS::ApiGatewayV2::Integration.IntegrationType`



      :type: string


   .. py:attribute:: connectionType

      `AWS::ApiGatewayV2::Integration.ConnectionType`



      :type: string *(optional)*


   .. py:attribute:: contentHandlingStrategy

      `AWS::ApiGatewayV2::Integration.ContentHandlingStrategy`



      :type: string *(optional)*


   .. py:attribute:: credentialsArn

      `AWS::ApiGatewayV2::Integration.CredentialsArn`



      :type: string *(optional)*


   .. py:attribute:: description

      `AWS::ApiGatewayV2::Integration.Description`



      :type: string *(optional)*


   .. py:attribute:: integrationMethod

      `AWS::ApiGatewayV2::Integration.IntegrationMethod`



      :type: string *(optional)*


   .. py:attribute:: integrationUri

      `AWS::ApiGatewayV2::Integration.IntegrationUri`



      :type: string *(optional)*


   .. py:attribute:: passthroughBehavior

      `AWS::ApiGatewayV2::Integration.PassthroughBehavior`



      :type: string *(optional)*


   .. py:attribute:: requestParameters

      `AWS::ApiGatewayV2::Integration.RequestParameters`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: requestTemplates

      `AWS::ApiGatewayV2::Integration.RequestTemplates`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: templateSelectionExpression

      `AWS::ApiGatewayV2::Integration.TemplateSelectionExpression`



      :type: string *(optional)*


   .. py:attribute:: timeoutInMillis

      `AWS::ApiGatewayV2::Integration.TimeoutInMillis`



      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnMethod
^^^^^^^^^

.. py:class:: CfnMethod(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnMethod;

      .. code-tab:: javascript

         const { CfnMethod } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnMethod } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::Method`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnMethodProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: methodId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnMethodProps`\  *(readonly)*

   .. py:class:: IntegrationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnMethod.IntegrationProperty;

         .. code-tab:: javascript

            // CfnMethod.IntegrationProperty is an interface

         .. code-tab:: typescript

            import { CfnMethod.IntegrationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: cacheKeyParameters

         `CfnMethod.IntegrationProperty.CacheKeyParameters`



         :type: string[] *(optional)*


      .. py:attribute:: cacheNamespace

         `CfnMethod.IntegrationProperty.CacheNamespace`



         :type: string *(optional)*


      .. py:attribute:: connectionId

         `CfnMethod.IntegrationProperty.ConnectionId`



         :type: string *(optional)*


      .. py:attribute:: connectionType

         `CfnMethod.IntegrationProperty.ConnectionType`



         :type: string *(optional)*


      .. py:attribute:: contentHandling

         `CfnMethod.IntegrationProperty.ContentHandling`



         :type: string *(optional)*


      .. py:attribute:: credentials

         `CfnMethod.IntegrationProperty.Credentials`



         :type: string *(optional)*


      .. py:attribute:: integrationHttpMethod

         `CfnMethod.IntegrationProperty.IntegrationHttpMethod`



         :type: string *(optional)*


      .. py:attribute:: integrationResponses

         `CfnMethod.IntegrationProperty.IntegrationResponses`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnMethod.IntegrationResponseProperty`\ )[] *(optional)*


      .. py:attribute:: passthroughBehavior

         `CfnMethod.IntegrationProperty.PassthroughBehavior`



         :type: string *(optional)*


      .. py:attribute:: requestParameters

         `CfnMethod.IntegrationProperty.RequestParameters`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: requestTemplates

         `CfnMethod.IntegrationProperty.RequestTemplates`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: timeoutInMillis

         `CfnMethod.IntegrationProperty.TimeoutInMillis`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: type

         `CfnMethod.IntegrationProperty.Type`



         :type: string *(optional)*


      .. py:attribute:: uri

         `CfnMethod.IntegrationProperty.Uri`



         :type: string *(optional)*


   .. py:class:: IntegrationResponseProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnMethod.IntegrationResponseProperty;

         .. code-tab:: javascript

            // CfnMethod.IntegrationResponseProperty is an interface

         .. code-tab:: typescript

            import { CfnMethod.IntegrationResponseProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: statusCode

         `CfnMethod.IntegrationResponseProperty.StatusCode`



         :type: string


      .. py:attribute:: contentHandling

         `CfnMethod.IntegrationResponseProperty.ContentHandling`



         :type: string *(optional)*


      .. py:attribute:: responseParameters

         `CfnMethod.IntegrationResponseProperty.ResponseParameters`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: responseTemplates

         `CfnMethod.IntegrationResponseProperty.ResponseTemplates`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: selectionPattern

         `CfnMethod.IntegrationResponseProperty.SelectionPattern`



         :type: string *(optional)*


   .. py:class:: MethodResponseProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnMethod.MethodResponseProperty;

         .. code-tab:: javascript

            // CfnMethod.MethodResponseProperty is an interface

         .. code-tab:: typescript

            import { CfnMethod.MethodResponseProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: statusCode

         `CfnMethod.MethodResponseProperty.StatusCode`



         :type: string


      .. py:attribute:: responseModels

         `CfnMethod.MethodResponseProperty.ResponseModels`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: responseParameters

         `CfnMethod.MethodResponseProperty.ResponseParameters`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (boolean or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnMethodProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnMethodProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnMethodProps;

      .. code-tab:: javascript

         // CfnMethodProps is an interface

      .. code-tab:: typescript

         import { CfnMethodProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::Method`





   .. py:attribute:: httpMethod

      `AWS::ApiGateway::Method.HttpMethod`



      :type: string


   .. py:attribute:: resourceId

      `AWS::ApiGateway::Method.ResourceId`



      :type: string


   .. py:attribute:: restApiId

      `AWS::ApiGateway::Method.RestApiId`



      :type: string


   .. py:attribute:: apiKeyRequired

      `AWS::ApiGateway::Method.ApiKeyRequired`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: authorizationScopes

      `AWS::ApiGateway::Method.AuthorizationScopes`



      :type: string[] *(optional)*


   .. py:attribute:: authorizationType

      `AWS::ApiGateway::Method.AuthorizationType`



      :type: string *(optional)*


   .. py:attribute:: authorizerId

      `AWS::ApiGateway::Method.AuthorizerId`



      :type: string *(optional)*


   .. py:attribute:: integration

      `AWS::ApiGateway::Method.Integration`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnMethod.IntegrationProperty`\  *(optional)*


   .. py:attribute:: methodResponses

      `AWS::ApiGateway::Method.MethodResponses`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnMethod.MethodResponseProperty`\ )[] *(optional)*


   .. py:attribute:: operationName

      `AWS::ApiGateway::Method.OperationName`



      :type: string *(optional)*


   .. py:attribute:: requestModels

      `AWS::ApiGateway::Method.RequestModels`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


   .. py:attribute:: requestParameters

      `AWS::ApiGateway::Method.RequestParameters`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (boolean or :py:class:`@aws-cdk/cdk.Token`\ ) *(optional)*


   .. py:attribute:: requestValidatorId

      `AWS::ApiGateway::Method.RequestValidatorId`



      :type: string *(optional)*


CfnModel
^^^^^^^^

.. py:class:: CfnModel(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnModel;

      .. code-tab:: javascript

         const { CfnModel } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnModel } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::Model`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnModelProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: modelName

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnModelProps`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnModelProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnModelProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnModelProps;

      .. code-tab:: javascript

         // CfnModelProps is an interface

      .. code-tab:: typescript

         import { CfnModelProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::Model`





   .. py:attribute:: restApiId

      `AWS::ApiGateway::Model.RestApiId`



      :type: string


   .. py:attribute:: contentType

      `AWS::ApiGateway::Model.ContentType`



      :type: string *(optional)*


   .. py:attribute:: description

      `AWS::ApiGateway::Model.Description`



      :type: string *(optional)*


   .. py:attribute:: name

      `AWS::ApiGateway::Model.Name`



      :type: string *(optional)*


   .. py:attribute:: schema

      `AWS::ApiGateway::Model.Schema`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnModelV2
^^^^^^^^^^

.. py:class:: CfnModelV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnModelV2;

      .. code-tab:: javascript

         const { CfnModelV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnModelV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::Model`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnModelV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: modelId

      :type: string *(readonly)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnModelV2Props`\  *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnModelV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnModelV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnModelV2Props;

      .. code-tab:: javascript

         // CfnModelV2Props is an interface

      .. code-tab:: typescript

         import { CfnModelV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::Model`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::Model.ApiId`



      :type: string


   .. py:attribute:: name

      `AWS::ApiGatewayV2::Model.Name`



      :type: string


   .. py:attribute:: schema

      `AWS::ApiGatewayV2::Model.Schema`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\ 


   .. py:attribute:: contentType

      `AWS::ApiGatewayV2::Model.ContentType`



      :type: string *(optional)*


   .. py:attribute:: description

      `AWS::ApiGatewayV2::Model.Description`



      :type: string *(optional)*


CfnRequestValidator
^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRequestValidator(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRequestValidator;

      .. code-tab:: javascript

         const { CfnRequestValidator } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnRequestValidator } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::RequestValidator`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnRequestValidatorProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnRequestValidatorProps`\  *(readonly)*


   .. py:attribute:: requestValidatorId

      :type: string *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnRequestValidatorProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRequestValidatorProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRequestValidatorProps;

      .. code-tab:: javascript

         // CfnRequestValidatorProps is an interface

      .. code-tab:: typescript

         import { CfnRequestValidatorProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::RequestValidator`





   .. py:attribute:: restApiId

      `AWS::ApiGateway::RequestValidator.RestApiId`



      :type: string


   .. py:attribute:: name

      `AWS::ApiGateway::RequestValidator.Name`



      :type: string *(optional)*


   .. py:attribute:: validateRequestBody

      `AWS::ApiGateway::RequestValidator.ValidateRequestBody`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: validateRequestParameters

      `AWS::ApiGateway::RequestValidator.ValidateRequestParameters`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnResource
^^^^^^^^^^^

.. py:class:: CfnResource(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnResource;

      .. code-tab:: javascript

         const { CfnResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnResource } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::Resource`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnResourceProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnResourceProps`\  *(readonly)*


   .. py:attribute:: resourceId

      :type: string *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnResourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnResourceProps;

      .. code-tab:: javascript

         // CfnResourceProps is an interface

      .. code-tab:: typescript

         import { CfnResourceProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::Resource`





   .. py:attribute:: parentId

      `AWS::ApiGateway::Resource.ParentId`



      :type: string


   .. py:attribute:: pathPart

      `AWS::ApiGateway::Resource.PathPart`



      :type: string


   .. py:attribute:: restApiId

      `AWS::ApiGateway::Resource.RestApiId`



      :type: string


CfnRestApi
^^^^^^^^^^

.. py:class:: CfnRestApi(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRestApi;

      .. code-tab:: javascript

         const { CfnRestApi } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnRestApi } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::RestApi`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnRestApiProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnRestApiProps`\  *(readonly)*


   .. py:attribute:: restApiId

      :type: string *(readonly)*


   .. py:attribute:: restApiRootResourceId

      :type: string *(readonly)*

   .. py:class:: EndpointConfigurationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnRestApi.EndpointConfigurationProperty;

         .. code-tab:: javascript

            // CfnRestApi.EndpointConfigurationProperty is an interface

         .. code-tab:: typescript

            import { CfnRestApi.EndpointConfigurationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: types

         `CfnRestApi.EndpointConfigurationProperty.Types`



         :type: string[] *(optional)*


   .. py:class:: S3LocationProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnRestApi.S3LocationProperty;

         .. code-tab:: javascript

            // CfnRestApi.S3LocationProperty is an interface

         .. code-tab:: typescript

            import { CfnRestApi.S3LocationProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: bucket

         `CfnRestApi.S3LocationProperty.Bucket`



         :type: string *(optional)*


      .. py:attribute:: eTag

         `CfnRestApi.S3LocationProperty.ETag`



         :type: string *(optional)*


      .. py:attribute:: key

         `CfnRestApi.S3LocationProperty.Key`



         :type: string *(optional)*


      .. py:attribute:: version

         `CfnRestApi.S3LocationProperty.Version`



         :type: string *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnRestApiProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRestApiProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRestApiProps;

      .. code-tab:: javascript

         // CfnRestApiProps is an interface

      .. code-tab:: typescript

         import { CfnRestApiProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::RestApi`





   .. py:attribute:: apiKeySourceType

      `AWS::ApiGateway::RestApi.ApiKeySourceType`



      :type: string *(optional)*


   .. py:attribute:: binaryMediaTypes

      `AWS::ApiGateway::RestApi.BinaryMediaTypes`



      :type: string[] *(optional)*


   .. py:attribute:: body

      `AWS::ApiGateway::RestApi.Body`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: bodyS3Location

      `AWS::ApiGateway::RestApi.BodyS3Location`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnRestApi.S3LocationProperty`\  *(optional)*


   .. py:attribute:: cloneFrom

      `AWS::ApiGateway::RestApi.CloneFrom`



      :type: string *(optional)*


   .. py:attribute:: description

      `AWS::ApiGateway::RestApi.Description`



      :type: string *(optional)*


   .. py:attribute:: endpointConfiguration

      `AWS::ApiGateway::RestApi.EndpointConfiguration`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnRestApi.EndpointConfigurationProperty`\  *(optional)*


   .. py:attribute:: failOnWarnings

      `AWS::ApiGateway::RestApi.FailOnWarnings`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: minimumCompressionSize

      `AWS::ApiGateway::RestApi.MinimumCompressionSize`



      :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: name

      `AWS::ApiGateway::RestApi.Name`



      :type: string *(optional)*


   .. py:attribute:: parameters

      `AWS::ApiGateway::RestApi.Parameters`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


   .. py:attribute:: policy

      `AWS::ApiGateway::RestApi.Policy`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnRouteResponseV2
^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRouteResponseV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRouteResponseV2;

      .. code-tab:: javascript

         const { CfnRouteResponseV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnRouteResponseV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::RouteResponse`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnRouteResponseV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnRouteResponseV2Props`\  *(readonly)*


   .. py:attribute:: routeResponseId

      :type: string *(readonly)*

   .. py:class:: ParameterConstraintsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnRouteResponseV2.ParameterConstraintsProperty;

         .. code-tab:: javascript

            // CfnRouteResponseV2.ParameterConstraintsProperty is an interface

         .. code-tab:: typescript

            import { CfnRouteResponseV2.ParameterConstraintsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: required

         `CfnRouteResponseV2.ParameterConstraintsProperty.Required`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\ 



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnRouteResponseV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRouteResponseV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRouteResponseV2Props;

      .. code-tab:: javascript

         // CfnRouteResponseV2Props is an interface

      .. code-tab:: typescript

         import { CfnRouteResponseV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::RouteResponse`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::RouteResponse.ApiId`



      :type: string


   .. py:attribute:: routeId

      `AWS::ApiGatewayV2::RouteResponse.RouteId`



      :type: string


   .. py:attribute:: routeResponseKey

      `AWS::ApiGatewayV2::RouteResponse.RouteResponseKey`



      :type: string


   .. py:attribute:: modelSelectionExpression

      `AWS::ApiGatewayV2::RouteResponse.ModelSelectionExpression`



      :type: string *(optional)*


   .. py:attribute:: responseModels

      `AWS::ApiGatewayV2::RouteResponse.ResponseModels`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: responseParameters

      `AWS::ApiGatewayV2::RouteResponse.ResponseParameters`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnRouteV2
^^^^^^^^^^

.. py:class:: CfnRouteV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRouteV2;

      .. code-tab:: javascript

         const { CfnRouteV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnRouteV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::Route`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnRouteV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnRouteV2Props`\  *(readonly)*


   .. py:attribute:: routeId

      :type: string *(readonly)*

   .. py:class:: ParameterConstraintsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnRouteV2.ParameterConstraintsProperty;

         .. code-tab:: javascript

            // CfnRouteV2.ParameterConstraintsProperty is an interface

         .. code-tab:: typescript

            import { CfnRouteV2.ParameterConstraintsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: required

         `CfnRouteV2.ParameterConstraintsProperty.Required`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\ 



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnRouteV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnRouteV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnRouteV2Props;

      .. code-tab:: javascript

         // CfnRouteV2Props is an interface

      .. code-tab:: typescript

         import { CfnRouteV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::Route`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::Route.ApiId`



      :type: string


   .. py:attribute:: routeKey

      `AWS::ApiGatewayV2::Route.RouteKey`



      :type: string


   .. py:attribute:: apiKeyRequired

      `AWS::ApiGatewayV2::Route.ApiKeyRequired`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: authorizationScopes

      `AWS::ApiGatewayV2::Route.AuthorizationScopes`



      :type: string[] *(optional)*


   .. py:attribute:: authorizationType

      `AWS::ApiGatewayV2::Route.AuthorizationType`



      :type: string *(optional)*


   .. py:attribute:: authorizerId

      `AWS::ApiGatewayV2::Route.AuthorizerId`



      :type: string *(optional)*


   .. py:attribute:: modelSelectionExpression

      `AWS::ApiGatewayV2::Route.ModelSelectionExpression`



      :type: string *(optional)*


   .. py:attribute:: operationName

      `AWS::ApiGatewayV2::Route.OperationName`



      :type: string *(optional)*


   .. py:attribute:: requestModels

      `AWS::ApiGatewayV2::Route.RequestModels`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: requestParameters

      `AWS::ApiGatewayV2::Route.RequestParameters`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: routeResponseSelectionExpression

      `AWS::ApiGatewayV2::Route.RouteResponseSelectionExpression`



      :type: string *(optional)*


   .. py:attribute:: target

      `AWS::ApiGatewayV2::Route.Target`



      :type: string *(optional)*


CfnStage
^^^^^^^^

.. py:class:: CfnStage(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnStage;

      .. code-tab:: javascript

         const { CfnStage } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnStage } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::Stage`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnStageProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnStageProps`\  *(readonly)*


   .. py:attribute:: stageName

      :type: string *(readonly)*


   .. py:attribute:: tags

      The `TagManager` handles setting, removing and formatting tags

      

      Tags should be managed either passing them as properties during

      initiation or by calling methods on this object. If both techniques are

      used only the tags from the TagManager will be used. `Tag` (aspect)

      will use the manager.



      :type: :py:class:`@aws-cdk/cdk.TagManager`\  *(readonly)*

   .. py:class:: AccessLogSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnStage.AccessLogSettingProperty;

         .. code-tab:: javascript

            // CfnStage.AccessLogSettingProperty is an interface

         .. code-tab:: typescript

            import { CfnStage.AccessLogSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: destinationArn

         `CfnStage.AccessLogSettingProperty.DestinationArn`



         :type: string *(optional)*


      .. py:attribute:: format

         `CfnStage.AccessLogSettingProperty.Format`



         :type: string *(optional)*


   .. py:class:: CanarySettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnStage.CanarySettingProperty;

         .. code-tab:: javascript

            // CfnStage.CanarySettingProperty is an interface

         .. code-tab:: typescript

            import { CfnStage.CanarySettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: deploymentId

         `CfnStage.CanarySettingProperty.DeploymentId`



         :type: string *(optional)*


      .. py:attribute:: percentTraffic

         `CfnStage.CanarySettingProperty.PercentTraffic`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: stageVariableOverrides

         `CfnStage.CanarySettingProperty.StageVariableOverrides`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


      .. py:attribute:: useStageCache

         `CfnStage.CanarySettingProperty.UseStageCache`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:class:: MethodSettingProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnStage.MethodSettingProperty;

         .. code-tab:: javascript

            // CfnStage.MethodSettingProperty is an interface

         .. code-tab:: typescript

            import { CfnStage.MethodSettingProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: cacheDataEncrypted

         `CfnStage.MethodSettingProperty.CacheDataEncrypted`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: cacheTtlInSeconds

         `CfnStage.MethodSettingProperty.CacheTtlInSeconds`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: cachingEnabled

         `CfnStage.MethodSettingProperty.CachingEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: dataTraceEnabled

         `CfnStage.MethodSettingProperty.DataTraceEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: httpMethod

         `CfnStage.MethodSettingProperty.HttpMethod`



         :type: string *(optional)*


      .. py:attribute:: loggingLevel

         `CfnStage.MethodSettingProperty.LoggingLevel`



         :type: string *(optional)*


      .. py:attribute:: metricsEnabled

         `CfnStage.MethodSettingProperty.MetricsEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: resourcePath

         `CfnStage.MethodSettingProperty.ResourcePath`



         :type: string *(optional)*


      .. py:attribute:: throttlingBurstLimit

         `CfnStage.MethodSettingProperty.ThrottlingBurstLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: throttlingRateLimit

         `CfnStage.MethodSettingProperty.ThrottlingRateLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnStageProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnStageProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnStageProps;

      .. code-tab:: javascript

         // CfnStageProps is an interface

      .. code-tab:: typescript

         import { CfnStageProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::Stage`





   .. py:attribute:: restApiId

      `AWS::ApiGateway::Stage.RestApiId`



      :type: string


   .. py:attribute:: accessLogSetting

      `AWS::ApiGateway::Stage.AccessLogSetting`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnStage.AccessLogSettingProperty`\  *(optional)*


   .. py:attribute:: cacheClusterEnabled

      `AWS::ApiGateway::Stage.CacheClusterEnabled`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: cacheClusterSize

      `AWS::ApiGateway::Stage.CacheClusterSize`



      :type: string *(optional)*


   .. py:attribute:: canarySetting

      `AWS::ApiGateway::Stage.CanarySetting`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnStage.CanarySettingProperty`\  *(optional)*


   .. py:attribute:: clientCertificateId

      `AWS::ApiGateway::Stage.ClientCertificateId`



      :type: string *(optional)*


   .. py:attribute:: deploymentId

      `AWS::ApiGateway::Stage.DeploymentId`



      :type: string *(optional)*


   .. py:attribute:: description

      `AWS::ApiGateway::Stage.Description`



      :type: string *(optional)*


   .. py:attribute:: documentationVersion

      `AWS::ApiGateway::Stage.DocumentationVersion`



      :type: string *(optional)*


   .. py:attribute:: methodSettings

      `AWS::ApiGateway::Stage.MethodSettings`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnStage.MethodSettingProperty`\ )[] *(optional)*


   .. py:attribute:: stageName

      `AWS::ApiGateway::Stage.StageName`



      :type: string *(optional)*


   .. py:attribute:: tags

      `AWS::ApiGateway::Stage.Tags`



      :type: :py:class:`@aws-cdk/cdk.CfnTag`\ [] *(optional)*


   .. py:attribute:: tracingEnabled

      `AWS::ApiGateway::Stage.TracingEnabled`



      :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: variables

      `AWS::ApiGateway::Stage.Variables`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or string => string *(optional)*


CfnStageV2
^^^^^^^^^^

.. py:class:: CfnStageV2(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnStageV2;

      .. code-tab:: javascript

         const { CfnStageV2 } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnStageV2 } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGatewayV2::Stage`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnStageV2Props`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnStageV2Props`\  *(readonly)*


   .. py:attribute:: stageName

      :type: string *(readonly)*

   .. py:class:: AccessLogSettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnStageV2.AccessLogSettingsProperty;

         .. code-tab:: javascript

            // CfnStageV2.AccessLogSettingsProperty is an interface

         .. code-tab:: typescript

            import { CfnStageV2.AccessLogSettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: destinationArn

         `CfnStageV2.AccessLogSettingsProperty.DestinationArn`



         :type: string *(optional)*


      .. py:attribute:: format

         `CfnStageV2.AccessLogSettingsProperty.Format`



         :type: string *(optional)*


   .. py:class:: RouteSettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnStageV2.RouteSettingsProperty;

         .. code-tab:: javascript

            // CfnStageV2.RouteSettingsProperty is an interface

         .. code-tab:: typescript

            import { CfnStageV2.RouteSettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: dataTraceEnabled

         `CfnStageV2.RouteSettingsProperty.DataTraceEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: detailedMetricsEnabled

         `CfnStageV2.RouteSettingsProperty.DetailedMetricsEnabled`



         :type: boolean or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: loggingLevel

         `CfnStageV2.RouteSettingsProperty.LoggingLevel`



         :type: string *(optional)*


      .. py:attribute:: throttlingBurstLimit

         `CfnStageV2.RouteSettingsProperty.ThrottlingBurstLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: throttlingRateLimit

         `CfnStageV2.RouteSettingsProperty.ThrottlingRateLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnStageV2Props (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnStageV2Props

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnStageV2Props;

      .. code-tab:: javascript

         // CfnStageV2Props is an interface

      .. code-tab:: typescript

         import { CfnStageV2Props } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGatewayV2::Stage`





   .. py:attribute:: apiId

      `AWS::ApiGatewayV2::Stage.ApiId`



      :type: string


   .. py:attribute:: deploymentId

      `AWS::ApiGatewayV2::Stage.DeploymentId`



      :type: string


   .. py:attribute:: stageName

      `AWS::ApiGatewayV2::Stage.StageName`



      :type: string


   .. py:attribute:: accessLogSettings

      `AWS::ApiGatewayV2::Stage.AccessLogSettings`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnStageV2.AccessLogSettingsProperty`\  *(optional)*


   .. py:attribute:: clientCertificateId

      `AWS::ApiGatewayV2::Stage.ClientCertificateId`



      :type: string *(optional)*


   .. py:attribute:: defaultRouteSettings

      `AWS::ApiGatewayV2::Stage.DefaultRouteSettings`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnStageV2.RouteSettingsProperty`\  *(optional)*


   .. py:attribute:: description

      `AWS::ApiGatewayV2::Stage.Description`



      :type: string *(optional)*


   .. py:attribute:: routeSettings

      `AWS::ApiGatewayV2::Stage.RouteSettings`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


   .. py:attribute:: stageVariables

      `AWS::ApiGatewayV2::Stage.StageVariables`



      :type: json or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


CfnUsagePlan
^^^^^^^^^^^^

.. py:class:: CfnUsagePlan(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnUsagePlan;

      .. code-tab:: javascript

         const { CfnUsagePlan } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnUsagePlan } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::UsagePlan`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlanProps`\  *(optional)*

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlanProps`\  *(readonly)*


   .. py:attribute:: usagePlanId

      :type: string *(readonly)*

   .. py:class:: ApiStageProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnUsagePlan.ApiStageProperty;

         .. code-tab:: javascript

            // CfnUsagePlan.ApiStageProperty is an interface

         .. code-tab:: typescript

            import { CfnUsagePlan.ApiStageProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: apiId

         `CfnUsagePlan.ApiStageProperty.ApiId`



         :type: string *(optional)*


      .. py:attribute:: stage

         `CfnUsagePlan.ApiStageProperty.Stage`



         :type: string *(optional)*


      .. py:attribute:: throttle

         `CfnUsagePlan.ApiStageProperty.Throttle`



         :type: :py:class:`@aws-cdk/cdk.Token`\  or string => (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlan.ThrottleSettingsProperty`\ ) *(optional)*


   .. py:class:: QuotaSettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnUsagePlan.QuotaSettingsProperty;

         .. code-tab:: javascript

            // CfnUsagePlan.QuotaSettingsProperty is an interface

         .. code-tab:: typescript

            import { CfnUsagePlan.QuotaSettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: limit

         `CfnUsagePlan.QuotaSettingsProperty.Limit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: offset

         `CfnUsagePlan.QuotaSettingsProperty.Offset`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: period

         `CfnUsagePlan.QuotaSettingsProperty.Period`



         :type: string *(optional)*


   .. py:class:: ThrottleSettingsProperty

      **Language-specific names:**

      .. tabs::

         .. code-tab:: c#

            using Amazon.CDK.AWS.APIGateway;

         .. code-tab:: java

            import software.amazon.awscdk.services.apigateway.CfnUsagePlan.ThrottleSettingsProperty;

         .. code-tab:: javascript

            // CfnUsagePlan.ThrottleSettingsProperty is an interface

         .. code-tab:: typescript

            import { CfnUsagePlan.ThrottleSettingsProperty } from '@aws-cdk/aws-apigateway';





      .. py:attribute:: burstLimit

         `CfnUsagePlan.ThrottleSettingsProperty.BurstLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*


      .. py:attribute:: rateLimit

         `CfnUsagePlan.ThrottleSettingsProperty.RateLimit`



         :type: number or :py:class:`@aws-cdk/cdk.Token`\  *(optional)*



   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnUsagePlanKey
^^^^^^^^^^^^^^^

.. py:class:: CfnUsagePlanKey(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnUsagePlanKey;

      .. code-tab:: javascript

         const { CfnUsagePlanKey } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnUsagePlanKey } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::UsagePlanKey`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlanKeyProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlanKeyProps`\  *(readonly)*


   .. py:attribute:: usagePlanKeyId

      :type: string *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnUsagePlanKeyProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnUsagePlanKeyProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnUsagePlanKeyProps;

      .. code-tab:: javascript

         // CfnUsagePlanKeyProps is an interface

      .. code-tab:: typescript

         import { CfnUsagePlanKeyProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::UsagePlanKey`





   .. py:attribute:: keyId

      `AWS::ApiGateway::UsagePlanKey.KeyId`



      :type: string


   .. py:attribute:: keyType

      `AWS::ApiGateway::UsagePlanKey.KeyType`



      :type: string


   .. py:attribute:: usagePlanId

      `AWS::ApiGateway::UsagePlanKey.UsagePlanId`



      :type: string


CfnUsagePlanProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnUsagePlanProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnUsagePlanProps;

      .. code-tab:: javascript

         // CfnUsagePlanProps is an interface

      .. code-tab:: typescript

         import { CfnUsagePlanProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::UsagePlan`





   .. py:attribute:: apiStages

      `AWS::ApiGateway::UsagePlan.ApiStages`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or (:py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlan.ApiStageProperty`\ )[] *(optional)*


   .. py:attribute:: description

      `AWS::ApiGateway::UsagePlan.Description`



      :type: string *(optional)*


   .. py:attribute:: quota

      `AWS::ApiGateway::UsagePlan.Quota`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlan.QuotaSettingsProperty`\  *(optional)*


   .. py:attribute:: throttle

      `AWS::ApiGateway::UsagePlan.Throttle`



      :type: :py:class:`@aws-cdk/cdk.Token`\  or :py:class:`~@aws-cdk/aws-apigateway.CfnUsagePlan.ThrottleSettingsProperty`\  *(optional)*


   .. py:attribute:: usagePlanName

      `AWS::ApiGateway::UsagePlan.UsagePlanName`



      :type: string *(optional)*


CfnVpcLink
^^^^^^^^^^

.. py:class:: CfnVpcLink(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnVpcLink;

      .. code-tab:: javascript

         const { CfnVpcLink } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { CfnVpcLink } from '@aws-cdk/aws-apigateway';



   A CloudFormation `AWS::ApiGateway::VpcLink`



   :extends: :py:class:`@aws-cdk/cdk.CfnResource`\ 
   :param scope: - scope in which this resource is defined
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: - scoped id of the resource
   :type id: string
   :param props: - resource properties
   :type props: :py:class:`~@aws-cdk/aws-apigateway.CfnVpcLinkProps`\ 

   .. py:method:: renderProperties(properties) -> string => any

      *Overrides* :py:meth:`@aws-cdk/cdk.CfnResource.renderProperties`

      *Protected method*

      :param properties: 
      :type properties: any
      :rtype: string => any


   .. py:attribute:: resourceTypeName

      The CloudFormation resource type name for this resource class.



      :type: string *(readonly)* *(static)*


   .. py:attribute:: propertyOverrides

      :type: :py:class:`~@aws-cdk/aws-apigateway.CfnVpcLinkProps`\  *(readonly)*


   .. py:attribute:: vpcLinkId

      :type: string *(readonly)*


   .. py:method:: overrideLogicalId(newLogicalId)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.overrideLogicalId>`

      Overrides the auto-generated logical ID with a specific ID.



      :param newLogicalId: The new logical ID to use for this stack element.
      :type newLogicalId: string


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.prepare>`

      Automatically detect references in this CfnElement



      *Protected method*



   .. py:attribute:: creationStackTrace

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.creationStackTrace>`

      :type: string[] *(readonly)*


   .. py:attribute:: logicalId

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.logicalId>`

      The logical ID for this CloudFormation stack element. The logical ID of the element

      is calculated from the path of the resource node in the construct tree.

      

      To override this value, use `overrideLogicalId(newLogicalId)`.



      :type: string *(readonly)*


   .. py:attribute:: stackPath

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnElement <@aws-cdk/cdk.CfnElement.stackPath>`

      Return the path with respect to the stack



      :type: string *(readonly)*


   .. py:attribute:: ref

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnRefElement <@aws-cdk/cdk.CfnRefElement.ref>`

      Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID.



      :type: string *(readonly)*


   .. py:method:: addDeletionOverride(path)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDeletionOverride>`

      Syntactic sugar for `addOverride(path, undefined)`.



      :param path: The path of the value to delete
      :type path: string


   .. py:method:: addDependsOn(resource)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addDependsOn>`

      Indicates that this resource depends on another resource and cannot be provisioned

      unless the other resource has been successfully provisioned.



      :param resource: 
      :type resource: :py:class:`@aws-cdk/cdk.CfnResource`\ 


   .. py:method:: addOverride(path, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addOverride>`

      Adds an override to the synthesized CloudFormation resource. To add a

      property override, either use `addPropertyOverride` or prefix `path` with

      "Properties." (i.e. `Properties.TopicName`).



      :param path: The path of the property, you can use dot notation to override values in complex types. Any intermdediate keys will be created as needed.
      :type path: string
      :param value: The value. Could be primitive or complex.
      :type value: any


   .. py:method:: addPropertyDeletionOverride(propertyPath)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyDeletionOverride>`

      Adds an override that deletes the value of a property from the resource definition.



      :param propertyPath: The path to the property.
      :type propertyPath: string


   .. py:method:: addPropertyOverride(propertyPath, value)

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.addPropertyOverride>`

      Adds an override to a resource property.

      

      Syntactic sugar for `addOverride("Properties.<...>", value)`.



      :param propertyPath: The path of the property
      :type propertyPath: string
      :param value: The value
      :type value: any


   .. py:method:: getAtt(attributeName) -> @aws-cdk/cdk.Reference

      *Inherited from* :py:meth:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.getAtt>`

      Returns a token for an runtime attribute of this resource.

      Ideally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility

      in case there is no generated attribute.



      :param attributeName: The name of the attribute.
      :type attributeName: string
      :rtype: :py:class:`@aws-cdk/cdk.Reference`\ 


   .. py:attribute:: options

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.options>`

      Options for this resource, such as condition, update policy etc.



      :type: :py:class:`@aws-cdk/cdk.ResourceOptions`\  *(readonly)*


   .. py:attribute:: properties

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.properties>`

      AWS resource properties.

      

      This object is rendered via a call to "renderProperties(this.properties)".



      *Protected property*

      :type: any *(readonly)*


   .. py:attribute:: resourceType

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.resourceType>`

      AWS resource type.



      :type: string *(readonly)*


   .. py:attribute:: untypedPropertyOverrides

      *Inherited from* :py:attr:`@aws-cdk/cdk.CfnResource <@aws-cdk/cdk.CfnResource.untypedPropertyOverrides>`

      AWS resource property overrides.

      

      During synthesis, the method "renderProperties(this.overrides)" is called

      with this object, and merged on top of the output of

      "renderProperties(this.properties)".

      

      Derived classes should expose a strongly-typed version of this object as

      a public property called `propertyOverrides`.



      *Protected property*

      :type: any *(readonly)*


   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


CfnVpcLinkProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: CfnVpcLinkProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.CfnVpcLinkProps;

      .. code-tab:: javascript

         // CfnVpcLinkProps is an interface

      .. code-tab:: typescript

         import { CfnVpcLinkProps } from '@aws-cdk/aws-apigateway';



   Properties for defining a `AWS::ApiGateway::VpcLink`





   .. py:attribute:: name

      `AWS::ApiGateway::VpcLink.Name`



      :type: string


   .. py:attribute:: targetArns

      `AWS::ApiGateway::VpcLink.TargetArns`



      :type: string[]


   .. py:attribute:: description

      `AWS::ApiGateway::VpcLink.Description`



      :type: string *(optional)*


ConnectionType (enum)
^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ConnectionType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ConnectionType;

      .. code-tab:: javascript

         const { ConnectionType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ConnectionType } from '@aws-cdk/aws-apigateway';



   .. py:data:: Internet

   For connections through the public routable internet



   .. py:data:: VpcLink

   For private connections between API Gateway and a network load balancer in a VPC




ContentHandling (enum)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ContentHandling

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ContentHandling;

      .. code-tab:: javascript

         const { ContentHandling } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ContentHandling } from '@aws-cdk/aws-apigateway';



   .. py:data:: ConvertToBinary

   Converts a request payload from a base64-encoded string to a binary blob.



   .. py:data:: ConvertToText

   Converts a request payload from a binary blob to a base64-encoded string.




Deployment
^^^^^^^^^^

.. py:class:: Deployment(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Deployment;

      .. code-tab:: javascript

         const { Deployment } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Deployment } from '@aws-cdk/aws-apigateway';



   A Deployment of a REST API.

   

   An immutable representation of a RestApi resource that can be called by users

   using Stages. A deployment must be associated with a Stage for it to be

   callable over the Internet.

   

   Normally, you don't need to define deployments manually. The RestApi

   construct manages a Deployment resource that represents the latest model. It

   can be accessed through `restApi.latestDeployment` (unless `deploy: false` is

   set when defining the `RestApi`).

   

   If you manually define this resource, you will need to know that since

   deployments are immutable, as long as the resource's logical ID doesn't

   change, the deployment will represent the snapshot in time in which the

   resource was created. This means that if you modify the RestApi model (i.e.

   add methods or resources), these changes will not be reflected unless a new

   deployment resource is created.

   

   To achieve this behavior, the method `addToLogicalId(data)` can be used to

   augment the logical ID generated for the deployment resource such that it

   will include arbitrary data. This is done automatically for the

   `restApi.latestDeployment` deployment.

   

   Furthermore, since a deployment does not reference any of the REST API

   resources and methods, CloudFormation will likely provision it before these

   resources are created, which means that it will represent a "half-baked"

   model. Use the `node.addDependency(dep)` method to circumvent that. This is done

   automatically for the `restApi.latestDeployment` deployment.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.DeploymentProps`\ 

   .. py:method:: addToLogicalId(data)

      Adds a component to the hash that determines this Deployment resource's

      logical ID.

      

      This should be called by constructs of the API Gateway model that want to

      invalidate the deployment when their settings change. The component will

      be resolve()ed during synthesis so tokens are welcome.



      :param data: 
      :type data: any


   .. py:attribute:: api

      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApi`\  *(readonly)*


   .. py:attribute:: deploymentId

      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


DeploymentProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: DeploymentProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.DeploymentProps;

      .. code-tab:: javascript

         // DeploymentProps is an interface

      .. code-tab:: typescript

         import { DeploymentProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: api

      The Rest API to deploy.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApi`\ 


   .. py:attribute:: description

      A description of the purpose of the API Gateway deployment.



      :type: string *(optional)*


   .. py:attribute:: retainDeployments

      When an API Gateway model is updated, a new deployment will automatically be created.

      If this is true (default), the old API Gateway Deployment resource will not be deleted.

      This will allow manually reverting back to a previous deployment in case for example



      :type: boolean *(optional)*
      :default: false


EmptyModel
^^^^^^^^^^

.. py:class:: EmptyModel()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.EmptyModel;

      .. code-tab:: javascript

         const { EmptyModel } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { EmptyModel } from '@aws-cdk/aws-apigateway';



   Represents a reference to a REST API's Empty model, which is available

   as part of the model collection by default. This can be used for mapping

   JSON responses from an integration to what is returned to a client,

   where strong typing is not required. In the absence of any defined

   model, the Empty model will be used to return the response payload

   unmapped.

   

   Definition

   {

      "$schema" : "http://json-schema.org/draft-04/schema#",

      "title" : "Empty Schema",

      "type" : "object"

   }



   :implements: :py:class:`~@aws-cdk/aws-apigateway.IModel`\ 

   .. py:attribute:: modelId

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IModel.modelId`

      :type: string *(readonly)*


EndpointType (enum)
^^^^^^^^^^^^^^^^^^^

.. py:class:: EndpointType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.EndpointType;

      .. code-tab:: javascript

         const { EndpointType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { EndpointType } from '@aws-cdk/aws-apigateway';



   .. py:data:: Edge

   For an edge-optimized API and its custom domain name.



   .. py:data:: Regional

   For a regional API and its custom domain name.



   .. py:data:: Private

   For a private API and its custom domain name.




ErrorModel
^^^^^^^^^^

.. py:class:: ErrorModel()

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ErrorModel;

      .. code-tab:: javascript

         const { ErrorModel } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ErrorModel } from '@aws-cdk/aws-apigateway';



   Represents a reference to a REST API's Error model, which is available

   as part of the model collection by default. This can be used for mapping

   error JSON responses from an integration to a client, where a simple

   generic message field is sufficient to map and return an error payload.

   

   Definition

   {

      "$schema" : "http://json-schema.org/draft-04/schema#",

      "title" : "Error Schema",

      "type" : "object",

      "properties" : {

        "message" : { "type" : "string" }

      }

   }



   :implements: :py:class:`~@aws-cdk/aws-apigateway.IModel`\ 

   .. py:attribute:: modelId

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IModel.modelId`

      :type: string *(readonly)*


HttpIntegration
^^^^^^^^^^^^^^^

.. py:class:: HttpIntegration(url, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.HttpIntegration;

      .. code-tab:: javascript

         const { HttpIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { HttpIntegration } from '@aws-cdk/aws-apigateway';



   You can integrate an API method with an HTTP endpoint using the HTTP proxy

   integration or the HTTP custom integration,.

   

   With the proxy integration, the setup is simple. You only need to set the

   HTTP method and the HTTP endpoint URI, according to the backend requirements,

   if you are not concerned with content encoding or caching.

   

   With the custom integration, the setup is more involved. In addition to the

   proxy integration setup steps, you need to specify how the incoming request

   data is mapped to the integration request and how the resulting integration

   response data is mapped to the method response.



   :extends: :py:class:`~@aws-cdk/aws-apigateway.Integration`\ 
   :param url: 
   :type url: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.HttpIntegrationProps`\  *(optional)*

   .. py:method:: bind(_method)

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.bind>`

      Can be overridden by subclasses to allow the integration to interact with the method

      being integrated, access the REST API object, method ARNs, etc.



      :param _method: 
      :type _method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


HttpIntegrationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: HttpIntegrationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.HttpIntegrationProps;

      .. code-tab:: javascript

         // HttpIntegrationProps is an interface

      .. code-tab:: typescript

         import { HttpIntegrationProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: httpMethod

      HTTP method to use when invoking the backend URL.



      :type: string *(optional)*
      :default: GET


   .. py:attribute:: options

      Integration options, such as request/resopnse mapping, content handling,

      etc.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  *(optional)*
      :default: defaults based on `IntegrationOptions` defaults


   .. py:attribute:: proxy

      Determines whether to use proxy integration or custom integration.



      :type: boolean *(optional)*
      :default: true


IModel (interface)
^^^^^^^^^^^^^^^^^^

.. py:class:: IModel

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IModel;

      .. code-tab:: javascript

         // IModel is an interface

      .. code-tab:: typescript

         import { IModel } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: modelId

      :type: string *(readonly)*


IRestApi (interface)
^^^^^^^^^^^^^^^^^^^^

.. py:class:: IRestApi

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IRestApi;

      .. code-tab:: javascript

         // IRestApi is an interface

      .. code-tab:: typescript

         import { IRestApi } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: restApiId

      The ID of this API Gateway RestApi.



      :type: string *(readonly)*


   .. py:method:: export() -> @aws-cdk/aws-apigateway.RestApiImportProps

      Exports a REST API resource from this stack.



      :return: REST API props that can be imported to another stack.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.RestApiImportProps`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


IRestApiResource (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IRestApiResource

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IRestApiResource;

      .. code-tab:: javascript

         // IRestApiResource is an interface

      .. code-tab:: typescript

         import { IRestApiResource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.IConstruct`\ 


   .. py:attribute:: resourceApi

      The rest API that this resource is part of.

      

      The reason we need the RestApi object itself and not just the ID is because the model

      is being tracked by the top-level RestApi object for the purpose of calculating it's

      hash to determine the ID of the deployment. This allows us to automatically update

      the deployment when the model of the REST API changes.



      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)*


   .. py:attribute:: resourceId

      The ID of the resource.



      :type: string *(readonly)*


   .. py:attribute:: resourcePath

      The full path of this resuorce.



      :type: string *(readonly)*


   .. py:attribute:: defaultIntegration

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)*


   .. py:attribute:: defaultMethodOptions

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)*


   .. py:attribute:: parentResource

      The parent of this resource or undefined for the root resource.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)* *(readonly)*


   .. py:method:: addMethod(httpMethod, [target, [options]]) -> @aws-cdk/aws-apigateway.Method

      Defines a new method for this resource.



      :param httpMethod: The HTTP method
      :type httpMethod: string
      :param target: The target backend integration for this method
      :type target: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)*
      :param options: Method options, such as authentication.
      :type options: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)*
      :return: The newly created `Method` object.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 
      :abstract: Yes


   .. py:method:: addProxy([options]) -> @aws-cdk/aws-apigateway.ProxyResource

      Adds a greedy proxy resource ("{proxy+}") and an ANY method to this route.



      :param options: Default integration and method options.
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.ProxyResource`\ 
      :abstract: Yes


   .. py:method:: addResource(pathPart, [options]) -> @aws-cdk/aws-apigateway.Resource

      Defines a new child resource where this resource is the parent.



      :param pathPart: The path part for the child resource
      :type pathPart: string
      :param options: Resource options
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :return: A Resource object
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 
      :abstract: Yes


   .. py:method:: getResource(pathPart) -> @aws-cdk/aws-apigateway.IRestApiResource

      Retrieves a child resource by path part.



      :param pathPart: The path part of the child resource
      :type pathPart: string
      :return: the child resource or undefined if not found
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)*
      :abstract: Yes


   .. py:method:: resourceForPath(path) -> @aws-cdk/aws-apigateway.Resource

      Gets or create all resources leading up to the specified path.

      

      - Path may only start with "/" if this method is called on the root resource.

      - All resources are created using default options.



      :param path: The relative path
      :type path: string
      :return: a new or existing resource.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 
      :abstract: Yes


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.IConstruct <@aws-cdk/cdk.IConstruct.node>`

      The construct node in the scope tree.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.IDependable <@aws-cdk/cdk.IDependable.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


Integration
^^^^^^^^^^^

.. py:class:: Integration(props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Integration;

      .. code-tab:: javascript

         const { Integration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Integration } from '@aws-cdk/aws-apigateway';



   Base class for backend integrations for an API Gateway method.

   

   Use one of the concrete classes such as `MockIntegration`, `AwsIntegration`, `LambdaIntegration`

   or implement on your own by specifying the set of props.



   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\ 

   .. py:method:: bind(_method)

      Can be overridden by subclasses to allow the integration to interact with the method

      being integrated, access the REST API object, method ARNs, etc.



      :param _method: 
      :type _method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


IntegrationOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationOptions;

      .. code-tab:: javascript

         // IntegrationOptions is an interface

      .. code-tab:: typescript

         import { IntegrationOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: cacheKeyParameters

      A list of request parameters whose values are to be cached. It determines

      request parameters that will make it into the cache key.



      :type: string[] *(optional)*


   .. py:attribute:: cacheNamespace

      An API-specific tag group of related cached parameters.



      :type: string *(optional)*


   .. py:attribute:: connectionType

      The type of network connection to the integration endpoint.



      :type: :py:class:`~@aws-cdk/aws-apigateway.ConnectionType`\  *(optional)*
      :default: ConnectionType.Internet


   .. py:attribute:: contentHandling

      Specifies how to handle request payload content type conversions.



      :type: :py:class:`~@aws-cdk/aws-apigateway.ContentHandling`\  *(optional)*
      :default: none if this property isn't defined, the request payload is passed
through from the method request to the integration request without
modification, provided that the `passthroughBehaviors` property is
configured to support payload pass-through.


   .. py:attribute:: credentialsPassthrough

      Requires that the caller's identity be passed through from the request.



      :type: boolean *(optional)*
      :default: Caller identity is not passed through


   .. py:attribute:: credentialsRole

      An IAM role that API Gateway assumes.

      

      Mutually exclusive with `credentialsPassThrough`.



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: A role is not assumed


   .. py:attribute:: integrationResponses

      The response that API Gateway provides after a method's backend completes

      processing a request. API Gateway intercepts the response from the

      backend so that you can control how API Gateway surfaces backend

      responses. For example, you can map the backend status codes to codes

      that you define.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationResponse`\ [] *(optional)*


   .. py:attribute:: passthroughBehavior

      Specifies the pass-through behavior for incoming requests based on the

      Content-Type header in the request, and the available mapping templates

      specified as the requestTemplates property on the Integration resource.

      There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and

      NEVER.



      :type: :py:class:`~@aws-cdk/aws-apigateway.PassthroughBehavior`\  *(optional)*


   .. py:attribute:: requestParameters

      The request parameters that API Gateway sends with the backend request.

      Specify request parameters as key-value pairs (string-to-string

      mappings), with a destination as the key and a source as the value.

      

      Specify the destination by using the following pattern

      integration.request.location.name, where location is querystring, path,

      or header, and name is a valid, unique parameter name.

      

      The source must be an existing method request parameter or a static

      value. You must enclose static values in single quotation marks and

      pre-encode these values based on their destination in the request.



      :type: string => string *(optional)*


   .. py:attribute:: requestTemplates

      A map of Apache Velocity templates that are applied on the request

      payload. The template that API Gateway uses is based on the value of the

      Content-Type header that's sent by the client. The content type value is

      the key, and the template is the value (specified as a string), such as

      the following snippet:

      

         { "application/json": "{\n  \"statusCode\": \"200\"\n}" }



      :type: string => string *(optional)*


   .. py:attribute:: vpcLink

      The VpcLink used for the integration.

      Required if connectionType is VPC_LINK



      :type: :py:class:`~@aws-cdk/aws-apigateway.VpcLink`\  *(optional)*


IntegrationProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationProps;

      .. code-tab:: javascript

         // IntegrationProps is an interface

      .. code-tab:: typescript

         import { IntegrationProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: type

      Specifies an API method integration type.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationType`\ 


   .. py:attribute:: integrationHttpMethod

      The integration's HTTP method type.

      Required unless you use a MOCK integration.



      :type: string *(optional)*


   .. py:attribute:: options

      Integration options.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  *(optional)*


   .. py:attribute:: uri

      The Uniform Resource Identifier (URI) for the integration.

      

      - If you specify HTTP for the `type` property, specify the API endpoint URL.

      - If you specify MOCK for the `type` property, don't specify this property.

      - If you specify AWS for the `type` property, specify an AWS service that

         follows this form: `arn:aws:apigateway:region:subdomain.service|service:path|action/service_api.`

         For example, a Lambda function URI follows this form:

         arn:aws:apigateway:region:lambda:path/path. The path is usually in the

         form /2015-03-31/functions/LambdaFunctionARN/invocations.



      :type: any *(optional)*


IntegrationResponse (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationResponse

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationResponse;

      .. code-tab:: javascript

         // IntegrationResponse is an interface

      .. code-tab:: typescript

         import { IntegrationResponse } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: statusCode

      The status code that API Gateway uses to map the integration response to

      a MethodResponse status code.



      :type: string


   .. py:attribute:: contentHandling

      Specifies how to handle request payload content type conversions.



      :type: :py:class:`~@aws-cdk/aws-apigateway.ContentHandling`\  *(optional)*
      :default: none the request payload is passed through from the method
request to the integration request without modification.


   .. py:attribute:: responseParameters

      The response parameters from the backend response that API Gateway sends

      to the method response.

      

      Use the destination as the key and the source as the value:

      

      - The destination must be an existing response parameter in the

         MethodResponse property.

      - The source must be an existing method request parameter or a static

         value. You must enclose static values in single quotation marks and

         pre-encode these values based on the destination specified in the

         request.



      :type: string => string *(optional)*


   .. py:attribute:: responseTemplates

      The templates that are used to transform the integration response body.

      Specify templates as key-value pairs, with a content type as the key and

      a template as the value.



      :type: string => string *(optional)*


   .. py:attribute:: selectionPattern

      Specifies the regular expression (regex) pattern used to choose an integration response based on the response from

      the back end. For example, if the success response returns nothing and the error response returns some string, you

      could use the ``.+`` regex to match error response. However, make sure that the error response does not contain any

      newline (``\n``) character in such cases. If the back end is an AWS Lambda function, the AWS Lambda function error

      header is matched. For all other HTTP and AWS back ends, the HTTP status code is matched.



      :type: string *(optional)*


IntegrationType (enum)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: IntegrationType

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.IntegrationType;

      .. code-tab:: javascript

         const { IntegrationType } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { IntegrationType } from '@aws-cdk/aws-apigateway';



   .. py:data:: Aws

   For integrating the API method request with an AWS service action,

   including the Lambda function-invoking action. With the Lambda

   function-invoking action, this is referred to as the Lambda custom

   integration. With any other AWS service action, this is known as AWS

   integration.



   .. py:data:: AwsProxy

   For integrating the API method request with the Lambda function-invoking

   action with the client request passed through as-is. This integration is

   also referred to as the Lambda proxy integration



   .. py:data:: Http

   For integrating the API method request with an HTTP endpoint, including a

   private HTTP endpoint within a VPC. This integration is also referred to

   as the HTTP custom integration.



   .. py:data:: HttpProxy

   For integrating the API method request with an HTTP endpoint, including a

   private HTTP endpoint within a VPC, with the client request passed

   through as-is. This is also referred to as the HTTP proxy integration



   .. py:data:: Mock

   For integrating the API method request with API Gateway as a "loop-back"

   endpoint without invoking any backend.




LambdaIntegration
^^^^^^^^^^^^^^^^^

.. py:class:: LambdaIntegration(handler, [options])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaIntegration;

      .. code-tab:: javascript

         const { LambdaIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { LambdaIntegration } from '@aws-cdk/aws-apigateway';



   Integrates an AWS Lambda function to an API Gateway method.



   :extends: :py:class:`~@aws-cdk/aws-apigateway.AwsIntegration`\ 
   :param handler: 
   :type handler: :py:class:`@aws-cdk/aws-lambda.IFunction`\ 
   :param options: 
   :type options: :py:class:`~@aws-cdk/aws-apigateway.LambdaIntegrationOptions`\  *(optional)*

   .. py:method:: bind(method)

      *Overrides* :py:meth:`@aws-cdk/aws-apigateway.AwsIntegration.bind`

      Can be overridden by subclasses to allow the integration to interact with the method

      being integrated, access the REST API object, method ARNs, etc.



      :param method: 
      :type method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


LambdaIntegrationOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LambdaIntegrationOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaIntegrationOptions;

      .. code-tab:: javascript

         // LambdaIntegrationOptions is an interface

      .. code-tab:: typescript

         import { LambdaIntegrationOptions } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\ 


   .. py:attribute:: allowTestInvoke

      Allow invoking method from AWS Console UI (for testing purposes).

      

      This will add another permission to the AWS Lambda resource policy which

      will allow the `test-invoke-stage` stage to invoke this handler. If this

      is set to `false`, the function will only be usable from the deployment

      endpoint.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: proxy

      Use proxy integration or normal (request/response mapping) integration.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: cacheKeyParameters

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.cacheKeyParameters>`

      A list of request parameters whose values are to be cached. It determines

      request parameters that will make it into the cache key.



      :type: string[] *(optional)*


   .. py:attribute:: cacheNamespace

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.cacheNamespace>`

      An API-specific tag group of related cached parameters.



      :type: string *(optional)*


   .. py:attribute:: connectionType

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.connectionType>`

      The type of network connection to the integration endpoint.



      :type: :py:class:`~@aws-cdk/aws-apigateway.ConnectionType`\  *(optional)*
      :default: ConnectionType.Internet


   .. py:attribute:: contentHandling

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.contentHandling>`

      Specifies how to handle request payload content type conversions.



      :type: :py:class:`~@aws-cdk/aws-apigateway.ContentHandling`\  *(optional)*
      :default: none if this property isn't defined, the request payload is passed
through from the method request to the integration request without
modification, provided that the `passthroughBehaviors` property is
configured to support payload pass-through.


   .. py:attribute:: credentialsPassthrough

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.credentialsPassthrough>`

      Requires that the caller's identity be passed through from the request.



      :type: boolean *(optional)*
      :default: Caller identity is not passed through


   .. py:attribute:: credentialsRole

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.credentialsRole>`

      An IAM role that API Gateway assumes.

      

      Mutually exclusive with `credentialsPassThrough`.



      :type: :py:class:`@aws-cdk/aws-iam.Role`\  *(optional)*
      :default: A role is not assumed


   .. py:attribute:: integrationResponses

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.integrationResponses>`

      The response that API Gateway provides after a method's backend completes

      processing a request. API Gateway intercepts the response from the

      backend so that you can control how API Gateway surfaces backend

      responses. For example, you can map the backend status codes to codes

      that you define.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationResponse`\ [] *(optional)*


   .. py:attribute:: passthroughBehavior

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.passthroughBehavior>`

      Specifies the pass-through behavior for incoming requests based on the

      Content-Type header in the request, and the available mapping templates

      specified as the requestTemplates property on the Integration resource.

      There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and

      NEVER.



      :type: :py:class:`~@aws-cdk/aws-apigateway.PassthroughBehavior`\  *(optional)*


   .. py:attribute:: requestParameters

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.requestParameters>`

      The request parameters that API Gateway sends with the backend request.

      Specify request parameters as key-value pairs (string-to-string

      mappings), with a destination as the key and a source as the value.

      

      Specify the destination by using the following pattern

      integration.request.location.name, where location is querystring, path,

      or header, and name is a valid, unique parameter name.

      

      The source must be an existing method request parameter or a static

      value. You must enclose static values in single quotation marks and

      pre-encode these values based on their destination in the request.



      :type: string => string *(optional)*


   .. py:attribute:: requestTemplates

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.requestTemplates>`

      A map of Apache Velocity templates that are applied on the request

      payload. The template that API Gateway uses is based on the value of the

      Content-Type header that's sent by the client. The content type value is

      the key, and the template is the value (specified as a string), such as

      the following snippet:

      

         { "application/json": "{\n  \"statusCode\": \"200\"\n}" }



      :type: string => string *(optional)*


   .. py:attribute:: vpcLink

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.IntegrationOptions <@aws-cdk/aws-apigateway.IntegrationOptions.vpcLink>`

      The VpcLink used for the integration.

      Required if connectionType is VPC_LINK



      :type: :py:class:`~@aws-cdk/aws-apigateway.VpcLink`\  *(optional)*


LambdaRestApi
^^^^^^^^^^^^^

.. py:class:: LambdaRestApi(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaRestApi;

      .. code-tab:: javascript

         const { LambdaRestApi } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { LambdaRestApi } from '@aws-cdk/aws-apigateway';



   Defines an API Gateway REST API with AWS Lambda proxy integration.

   

   Use the `proxyPath` property to define a greedy proxy ("{proxy+}") and "ANY"

   method from the specified path. If not defined, you will need to explicity

   add resources and methods to the API.



   :extends: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.LambdaRestApiProps`\ 

   .. py:method:: executeApiArn([method, [path, [stage]]]) -> string

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.executeApiArn>`

      :param method: The method (default `*`)
      :type method: string *(optional)*
      :param path: The resource path. Must start with '/' (default `*`)
      :type path: string *(optional)*
      :param stage: The stage (default `*`)
      :type stage: string *(optional)*
      :return: The "execute-api" ARN.
      :rtype: string


   .. py:method:: export() -> @aws-cdk/aws-apigateway.RestApiImportProps

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.export>`

      Exports a REST API resource from this stack.



      :return: REST API props that can be imported to another stack.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.RestApiImportProps`\ 


   .. py:method:: urlForPath([path]) -> string

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.urlForPath>`

      Returns the URL for an HTTP path.

      

      Fails if `deploymentStage` is not set either by `deploy` or explicitly.



      :param path: 
      :type path: string *(optional)*
      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.validate>`

      Performs validation of the REST API.



      *Protected method*

      :rtype: string[]


   .. py:attribute:: restApiId

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.restApiId>`

      The ID of this API Gateway RestApi.



      :type: string *(readonly)*


   .. py:attribute:: root

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.root>`

      Represents the root resource ("/") of this API. Use it to define the API model:

      

          api.root.addMethod('ANY', redirectToHomePage); // "ANY /"

          api.root.addResource('friends').addMethod('GET', getFriendsHandler); // "GET /friends"



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(readonly)*


   .. py:attribute:: url

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.url>`

      The deployed root URL of this REST API.



      :type: string *(readonly)*


   .. py:attribute:: deploymentStage

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.deploymentStage>`

      API Gateway stage that points to the latest deployment (if defined).

      

      If `deploy` is disabled, you will need to explicitly assign this value in order to

      set up integrations.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Stage`\  *(optional)*


   .. py:attribute:: latestDeployment

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.RestApi <@aws-cdk/aws-apigateway.RestApi.latestDeployment>`

      API Gateway deployment that represents the latest changes of the API.

      This resource will be automatically updated every time the REST API model changes.

      This will be undefined if `deploy` is false.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Deployment`\  *(optional)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


LambdaRestApiProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: LambdaRestApiProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.LambdaRestApiProps;

      .. code-tab:: javascript

         // LambdaRestApiProps is an interface

      .. code-tab:: typescript

         import { LambdaRestApiProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: handler

      The default Lambda function that handles all requests from this API.

      

      This handler will be used as a the default integration for all methods in

      this API, unless specified otherwise in `addMethod`.



      :type: :py:class:`@aws-cdk/aws-lambda.IFunction`\ 


   .. py:attribute:: options

      Further customization of the REST API.



      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApiProps`\  *(optional)*
      :default: defaults


   .. py:attribute:: proxy

      If true, route all requests to the Lambda Function

      

      If set to false, you will need to explicitly define the API model using

      `addResource` and `addMethod` (or `addProxy`).



      :type: boolean *(optional)*
      :default: true


Method
^^^^^^

.. py:class:: Method(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Method;

      .. code-tab:: javascript

         const { Method } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Method } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.MethodProps`\ 

   .. py:attribute:: httpMethod

      :type: string *(readonly)*


   .. py:attribute:: methodArn

      Returns an execute-api ARN for this method:

      

         arn:aws:execute-api:{region}:{account}:{restApiId}/{stage}/{method}/{path}

      

      NOTE: {stage} will refer to the `restApi.deploymentStage`, which will

      automatically set if auto-deploy is enabled.



      :type: string *(readonly)*


   .. py:attribute:: methodId

      :type: string *(readonly)*


   .. py:attribute:: resource

      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(readonly)*


   .. py:attribute:: restApi

      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)*


   .. py:attribute:: testMethodArn

      Returns an execute-api ARN for this method's "test-invoke-stage" stage.

      This stage is used by the AWS Console UI when testing the method.



      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


MethodDeploymentOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodDeploymentOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodDeploymentOptions;

      .. code-tab:: javascript

         // MethodDeploymentOptions is an interface

      .. code-tab:: typescript

         import { MethodDeploymentOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: cacheDataEncrypted

      Indicates whether the cached responses are encrypted.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: cacheTtlSeconds

      Specifies the time to live (TTL), in seconds, for cached responses. The

      higher the TTL, the longer the response will be cached.



      :type: number *(optional)*


   .. py:attribute:: cachingEnabled

      Specifies whether responses should be cached and returned for requests. A

      cache cluster must be enabled on the stage for responses to be cached.



      :type: boolean *(optional)*


   .. py:attribute:: dataTraceEnabled

      Specifies whether data trace logging is enabled for this method, which

      effects the log entries pushed to Amazon CloudWatch Logs.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: loggingLevel

      Specifies the logging level for this method, which effects the log

      entries pushed to Amazon CloudWatch Logs.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodLoggingLevel`\  *(optional)*
      :default: Off


   .. py:attribute:: metricsEnabled

      Specifies whether Amazon CloudWatch metrics are enabled for this method.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: throttlingBurstLimit

      Specifies the throttling burst limit.



      :type: number *(optional)*


   .. py:attribute:: throttlingRateLimit

      Specifies the throttling rate limit.



      :type: number *(optional)*


MethodLoggingLevel (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodLoggingLevel

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodLoggingLevel;

      .. code-tab:: javascript

         const { MethodLoggingLevel } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { MethodLoggingLevel } from '@aws-cdk/aws-apigateway';



   .. py:data:: Off

   .. py:data:: Error

   .. py:data:: Info


MethodOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodOptions;

      .. code-tab:: javascript

         // MethodOptions is an interface

      .. code-tab:: typescript

         import { MethodOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: apiKeyRequired

      Indicates whether the method requires clients to submit a valid API key.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: authorizationType

      Method authorization.



      :type: :py:class:`~@aws-cdk/aws-apigateway.AuthorizationType`\  *(optional)*
      :default: None open access


   .. py:attribute:: authorizerId

      If `authorizationType` is `Custom`, this specifies the ID of the method

      authorizer resource.

      

      NOTE: in the future this will be replaced with an `IAuthorizer`

      construct.



      :type: string *(optional)*


   .. py:attribute:: methodResponses

      The responses that can be sent to the client who calls the method.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodResponse`\ [] *(optional)*
      :default: None

This property is not required, but if these are not supplied for a Lambda
proxy integration, the Lambda function must return a value of the correct format,
for the integration response to be correctly mapped to a response to the client.


   .. py:attribute:: operationName

      A friendly operation name for the method. For example, you can assign the

      OperationName of ListPets for the GET /pets method.



      :type: string *(optional)*


   .. py:attribute:: requestParameters

      The request parameters that API Gateway accepts. Specify request parameters

      as key-value pairs (string-to-Boolean mapping), with a source as the key and

      a Boolean as the value. The Boolean specifies whether a parameter is required.

      A source must match the format method.request.location.name, where the location

      is querystring, path, or header, and name is a valid, unique parameter name.



      :type: string => boolean *(optional)*
      :default: None


MethodProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodProps;

      .. code-tab:: javascript

         // MethodProps is an interface

      .. code-tab:: typescript

         import { MethodProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: httpMethod

      The HTTP method ("GET", "POST", "PUT", ...) that clients use to call this method.



      :type: string


   .. py:attribute:: resource

      The resource this method is associated with. For root resource methods,

      specify the `RestApi` object.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\ 


   .. py:attribute:: integration

      The backend system that the method calls when it receives a request.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)*


   .. py:attribute:: options

      Method options.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)*


MethodResponse (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: MethodResponse

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MethodResponse;

      .. code-tab:: javascript

         // MethodResponse is an interface

      .. code-tab:: typescript

         import { MethodResponse } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: statusCode

      The method response's status code, which you map to an IntegrationResponse.

      Required.



      :type: string


   .. py:attribute:: responseModels

      The resources used for the response's content type. Specify response models as

      key-value pairs (string-to-string maps), with a content type as the key and a Model

      resource name as the value.



      :type: string => :py:class:`~@aws-cdk/aws-apigateway.IModel`\  *(optional)*
      :default: None


   .. py:attribute:: responseParameters

      Response parameters that API Gateway sends to the client that called a method.

      Specify response parameters as key-value pairs (string-to-Boolean maps), with

      a destination as the key and a Boolean as the value. Specify the destination

      using the following pattern: method.response.header.name, where the name is a

      valid, unique header name. The Boolean specifies whether a parameter is required.



      :type: string => boolean *(optional)*
      :default: None


MockIntegration
^^^^^^^^^^^^^^^

.. py:class:: MockIntegration([options])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.MockIntegration;

      .. code-tab:: javascript

         const { MockIntegration } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { MockIntegration } from '@aws-cdk/aws-apigateway';



   This type of integration lets API Gateway return a response without sending

   the request further to the backend. This is useful for API testing because it

   can be used to test the integration set up without incurring charges for

   using the backend and to enable collaborative development of an API. In

   collaborative development, a team can isolate their development effort by

   setting up simulations of API components owned by other teams by using the

   MOCK integrations. It is also used to return CORS-related headers to ensure

   that the API method permits CORS access. In fact, the API Gateway console

   integrates the OPTIONS method to support CORS with a mock integration.

   Gateway responses are other examples of mock integrations.



   :extends: :py:class:`~@aws-cdk/aws-apigateway.Integration`\ 
   :param options: 
   :type options: :py:class:`~@aws-cdk/aws-apigateway.IntegrationOptions`\  *(optional)*

   .. py:method:: bind(_method)

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.bind>`

      Can be overridden by subclasses to allow the integration to interact with the method

      being integrated, access the REST API object, method ARNs, etc.



      :param _method: 
      :type _method: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: props

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Integration <@aws-cdk/aws-apigateway.Integration.props>`

      :type: :py:class:`~@aws-cdk/aws-apigateway.IntegrationProps`\  *(readonly)*


PassthroughBehavior (enum)
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: PassthroughBehavior

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.PassthroughBehavior;

      .. code-tab:: javascript

         const { PassthroughBehavior } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { PassthroughBehavior } from '@aws-cdk/aws-apigateway';



   .. py:data:: WhenNoMatch

   Passes the request body for unmapped content types through to the

   integration back end without transformation.



   .. py:data:: Never

   Rejects unmapped content types with an HTTP 415 'Unsupported Media Type'

   response



   .. py:data:: WhenNoTemplates

   Allows pass-through when the integration has NO content types mapped to

   templates. However if there is at least one content type defined,

   unmapped content types will be rejected with the same 415 response.




ProxyResource
^^^^^^^^^^^^^

.. py:class:: ProxyResource(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ProxyResource;

      .. code-tab:: javascript

         const { ProxyResource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ProxyResource } from '@aws-cdk/aws-apigateway';



   Defines a {proxy+} greedy resource and an ANY method on a route.



   :extends: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.ProxyResourceProps`\ 

   .. py:method:: addMethod(httpMethod, [integration, [options]]) -> @aws-cdk/aws-apigateway.Method

      *Overrides* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase.addMethod`

      Defines a new method for this resource.



      :param httpMethod: 
      :type httpMethod: string
      :param integration: 
      :type integration: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)*
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:attribute:: anyMethod

      If `props.anyMethod` is `true`, this will be the reference to the 'ANY'

      method associated with this proxy resource.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Method`\  *(optional)* *(readonly)*


   .. py:attribute:: resourceApi

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.resourceApi>`

      The rest API that this resource is part of.

      

      The reason we need the RestApi object itself and not just the ID is because the model

      is being tracked by the top-level RestApi object for the purpose of calculating it's

      hash to determine the ID of the deployment. This allows us to automatically update

      the deployment when the model of the REST API changes.



      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)*


   .. py:attribute:: resourceId

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.resourceId>`

      The ID of the resource.



      :type: string *(readonly)*


   .. py:attribute:: resourcePath

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.resourcePath>`

      The full path of this resuorce.



      :type: string *(readonly)*


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.defaultIntegration>`

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.defaultMethodOptions>`

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)*


   .. py:attribute:: parentResource

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.Resource <@aws-cdk/aws-apigateway.Resource.parentResource>`

      The parent of this resource or undefined for the root resource.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)* *(readonly)*


   .. py:method:: addProxy([options]) -> @aws-cdk/aws-apigateway.ProxyResource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.addProxy>`

      Adds a greedy proxy resource ("{proxy+}") and an ANY method to this route.



      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.ProxyResource`\ 


   .. py:method:: addResource(pathPart, [options]) -> @aws-cdk/aws-apigateway.Resource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.addResource>`

      Defines a new child resource where this resource is the parent.



      :param pathPart: 
      :type pathPart: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: getResource(pathPart) -> @aws-cdk/aws-apigateway.IRestApiResource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.getResource>`

      Retrieves a child resource by path part.



      :param pathPart: 
      :type pathPart: string
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)*


   .. py:method:: resourceForPath(path) -> @aws-cdk/aws-apigateway.Resource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.resourceForPath>`

      Gets or create all resources leading up to the specified path.

      

      - Path may only start with "/" if this method is called on the root resource.

      - All resources are created using default options.



      :param path: 
      :type path: string
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: trackChild(pathPart, resource)

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.trackChild>`

      :param pathPart: 
      :type pathPart: string
      :param resource: 
      :type resource: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


ProxyResourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ProxyResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ProxyResourceProps;

      .. code-tab:: javascript

         // ProxyResourceProps is an interface

      .. code-tab:: typescript

         import { ProxyResourceProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\ 


   .. py:attribute:: parent

      The parent resource of this resource. You can either pass another

      `Resource` object or a `RestApi` object here.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\ 


   .. py:attribute:: anyMethod

      Adds an "ANY" method to this resource. If set to `false`, you will have to explicitly

      add methods to this resource after it's created.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultIntegration>`

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultMethodOptions>`

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)*


Resource
^^^^^^^^

.. py:class:: Resource(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Resource;

      .. code-tab:: javascript

         const { Resource } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Resource } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.ResourceBase`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.ResourceProps`\ 

   .. py:attribute:: resourceApi

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase.resourceApi`

      The rest API that this resource is part of.

      

      The reason we need the RestApi object itself and not just the ID is because the model

      is being tracked by the top-level RestApi object for the purpose of calculating it's

      hash to determine the ID of the deployment. This allows us to automatically update

      the deployment when the model of the REST API changes.



      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)*


   .. py:attribute:: resourceId

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase.resourceId`

      The ID of the resource.



      :type: string *(readonly)*


   .. py:attribute:: resourcePath

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase.resourcePath`

      The full path of this resuorce.



      :type: string *(readonly)*


   .. py:attribute:: defaultIntegration

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase.defaultIntegration`

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)*


   .. py:attribute:: defaultMethodOptions

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase.defaultMethodOptions`

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)*


   .. py:attribute:: parentResource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase.parentResource`

      The parent of this resource or undefined for the root resource.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)* *(readonly)*


   .. py:method:: addMethod(httpMethod, [integration, [options]]) -> @aws-cdk/aws-apigateway.Method

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.addMethod>`

      Defines a new method for this resource.



      :param httpMethod: 
      :type httpMethod: string
      :param integration: 
      :type integration: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)*
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:method:: addProxy([options]) -> @aws-cdk/aws-apigateway.ProxyResource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.addProxy>`

      Adds a greedy proxy resource ("{proxy+}") and an ANY method to this route.



      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.ProxyResource`\ 


   .. py:method:: addResource(pathPart, [options]) -> @aws-cdk/aws-apigateway.Resource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.addResource>`

      Defines a new child resource where this resource is the parent.



      :param pathPart: 
      :type pathPart: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: getResource(pathPart) -> @aws-cdk/aws-apigateway.IRestApiResource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.getResource>`

      Retrieves a child resource by path part.



      :param pathPart: 
      :type pathPart: string
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)*


   .. py:method:: resourceForPath(path) -> @aws-cdk/aws-apigateway.Resource

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.resourceForPath>`

      Gets or create all resources leading up to the specified path.

      

      - Path may only start with "/" if this method is called on the root resource.

      - All resources are created using default options.



      :param path: 
      :type path: string
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: trackChild(pathPart, resource)

      *Inherited from* :py:meth:`@aws-cdk/aws-apigateway.ResourceBase <@aws-cdk/aws-apigateway.ResourceBase.trackChild>`

      :param pathPart: 
      :type pathPart: string
      :param resource: 
      :type resource: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


ResourceBase
^^^^^^^^^^^^

.. py:class:: ResourceBase(scope, id)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ResourceBase;

      .. code-tab:: javascript

         const { ResourceBase } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { ResourceBase } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\ 
   :abstract: Yes
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string

   .. py:method:: addMethod(httpMethod, [integration, [options]]) -> @aws-cdk/aws-apigateway.Method

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.addMethod`

      Defines a new method for this resource.



      :param httpMethod: 
      :type httpMethod: string
      :param integration: 
      :type integration: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)*
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Method`\ 


   .. py:method:: addProxy([options]) -> @aws-cdk/aws-apigateway.ProxyResource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.addProxy`

      Adds a greedy proxy resource ("{proxy+}") and an ANY method to this route.



      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.ProxyResource`\ 


   .. py:method:: addResource(pathPart, [options]) -> @aws-cdk/aws-apigateway.Resource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.addResource`

      Defines a new child resource where this resource is the parent.



      :param pathPart: 
      :type pathPart: string
      :param options: 
      :type options: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\  *(optional)*
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: getResource(pathPart) -> @aws-cdk/aws-apigateway.IRestApiResource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.getResource`

      Retrieves a child resource by path part.



      :param pathPart: 
      :type pathPart: string
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)*


   .. py:method:: resourceForPath(path) -> @aws-cdk/aws-apigateway.Resource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.resourceForPath`

      Gets or create all resources leading up to the specified path.

      

      - Path may only start with "/" if this method is called on the root resource.

      - All resources are created using default options.



      :param path: 
      :type path: string
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:method:: trackChild(pathPart, resource)

      :param pathPart: 
      :type pathPart: string
      :param resource: 
      :type resource: :py:class:`~@aws-cdk/aws-apigateway.Resource`\ 


   .. py:attribute:: resourceApi

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.resourceApi`

      The rest API that this resource is part of.

      

      The reason we need the RestApi object itself and not just the ID is because the model

      is being tracked by the top-level RestApi object for the purpose of calculating it's

      hash to determine the ID of the deployment. This allows us to automatically update

      the deployment when the model of the REST API changes.



      :type: :py:class:`~@aws-cdk/aws-apigateway.RestApi`\  *(readonly)* *(abstract)*


   .. py:attribute:: resourceId

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.resourceId`

      The ID of the resource.



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: resourcePath

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.resourcePath`

      The full path of this resuorce.



      :type: string *(readonly)* *(abstract)*


   .. py:attribute:: defaultIntegration

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.defaultIntegration`

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)* *(abstract)*


   .. py:attribute:: defaultMethodOptions

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.defaultMethodOptions`

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)* *(abstract)*


   .. py:attribute:: parentResource

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApiResource.parentResource`

      The parent of this resource or undefined for the root resource.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(optional)* *(readonly)* *(abstract)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


ResourceOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ResourceOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ResourceOptions;

      .. code-tab:: javascript

         // ResourceOptions is an interface

      .. code-tab:: typescript

         import { ResourceOptions } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: defaultIntegration

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)*


   .. py:attribute:: defaultMethodOptions

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)*


ResourceProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: ResourceProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.ResourceProps;

      .. code-tab:: javascript

         // ResourceProps is an interface

      .. code-tab:: typescript

         import { ResourceProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\ 


   .. py:attribute:: parent

      The parent resource of this resource. You can either pass another

      `Resource` object or a `RestApi` object here.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\ 


   .. py:attribute:: pathPart

      A path name for the resource.



      :type: string


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultIntegration>`

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultMethodOptions>`

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)*


RestApi
^^^^^^^

.. py:class:: RestApi(scope, id, [props])

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApi;

      .. code-tab:: javascript

         const { RestApi } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { RestApi } from '@aws-cdk/aws-apigateway';



   Represents a REST API in Amazon API Gateway.

   

   Use `addResource` and `addMethod` to configure the API model.

   

   By default, the API will automatically be deployed and accessible from a

   public endpoint.



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :implements: :py:class:`~@aws-cdk/aws-apigateway.IRestApi`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.RestApiProps`\  *(optional)*

   .. py:staticmethod:: import(scope, id, props) -> @aws-cdk/aws-apigateway.IRestApi

      Imports an existing REST API resource.



      :param scope: 
      :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
      :param id: Construct ID
      :type id: string
      :param props: Imported rest API properties
      :type props: :py:class:`~@aws-cdk/aws-apigateway.RestApiImportProps`\ 
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.IRestApi`\ 


   .. py:method:: executeApiArn([method, [path, [stage]]]) -> string

      :param method: The method (default `*`)
      :type method: string *(optional)*
      :param path: The resource path. Must start with '/' (default `*`)
      :type path: string *(optional)*
      :param stage: The stage (default `*`)
      :type stage: string *(optional)*
      :return: The "execute-api" ARN.
      :rtype: string


   .. py:method:: export() -> @aws-cdk/aws-apigateway.RestApiImportProps

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApi.export`

      Exports a REST API resource from this stack.



      :return: REST API props that can be imported to another stack.
      :rtype: :py:class:`~@aws-cdk/aws-apigateway.RestApiImportProps`\ 


   .. py:method:: urlForPath([path]) -> string

      Returns the URL for an HTTP path.

      

      Fails if `deploymentStage` is not set either by `deploy` or explicitly.



      :param path: 
      :type path: string *(optional)*
      :rtype: string


   .. py:method:: validate() -> string[]

      *Overrides* :py:meth:`@aws-cdk/cdk.Construct.validate`

      Performs validation of the REST API.



      *Protected method*

      :rtype: string[]


   .. py:attribute:: restApiId

      *Implements* :py:meth:`@aws-cdk/aws-apigateway.IRestApi.restApiId`

      The ID of this API Gateway RestApi.



      :type: string *(readonly)*


   .. py:attribute:: root

      Represents the root resource ("/") of this API. Use it to define the API model:

      

          api.root.addMethod('ANY', redirectToHomePage); // "ANY /"

          api.root.addResource('friends').addMethod('GET', getFriendsHandler); // "GET /friends"



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApiResource`\  *(readonly)*


   .. py:attribute:: url

      The deployed root URL of this REST API.



      :type: string *(readonly)*


   .. py:attribute:: deploymentStage

      API Gateway stage that points to the latest deployment (if defined).

      

      If `deploy` is disabled, you will need to explicitly assign this value in order to

      set up integrations.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Stage`\  *(optional)*


   .. py:attribute:: latestDeployment

      API Gateway deployment that represents the latest changes of the API.

      This resource will be automatically updated every time the REST API model changes.

      This will be undefined if `deploy` is false.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Deployment`\  *(optional)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


RestApiImportProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: RestApiImportProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApiImportProps;

      .. code-tab:: javascript

         // RestApiImportProps is an interface

      .. code-tab:: typescript

         import { RestApiImportProps } from '@aws-cdk/aws-apigateway';





   .. py:attribute:: restApiId

      The REST API ID of an existing REST API resource.



      :type: string


RestApiProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: RestApiProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.RestApiProps;

      .. code-tab:: javascript

         // RestApiProps is an interface

      .. code-tab:: typescript

         import { RestApiProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.ResourceOptions`\ 


   .. py:attribute:: apiKeySourceType

      The source of the API key for metering requests according to a usage

      plan.



      :type: :py:class:`~@aws-cdk/aws-apigateway.ApiKeySourceType`\  *(optional)*
      :default: undefined metering is disabled


   .. py:attribute:: binaryMediaTypes

      The list of binary media mine-types that are supported by the RestApi

      resource, such as "image/png" or "application/octet-stream"



      :type: string[] *(optional)*
      :default: By default, RestApi supports only UTF-8-encoded text payloads


   .. py:attribute:: cloneFrom

      The ID of the API Gateway RestApi resource that you want to clone.



      :type: :py:class:`~@aws-cdk/aws-apigateway.IRestApi`\  *(optional)*


   .. py:attribute:: cloudWatchRole

      Automatically configure an AWS CloudWatch role for API Gateway.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: deploy

      Indicates if a Deployment should be automatically created for this API,

      and recreated when the API model (resources, methods) changes.

      

      Since API Gateway deployments are immutable, When this option is enabled

      (by default), an AWS::ApiGateway::Deployment resource will automatically

      created with a logical ID that hashes the API model (methods, resources

      and options). This means that when the model changes, the logical ID of

      this CloudFormation resource will change, and a new deployment will be

      created.

      

      If this is set, `latestDeployment` will refer to the `Deployment` object

      and `deploymentStage` will refer to a `Stage` that points to this

      deployment. To customize the stage options, use the `deployStageOptions`

      property.

      

      A CloudFormation Output will also be defined with the root URL endpoint

      of this REST API.



      :type: boolean *(optional)*
      :default: true


   .. py:attribute:: deployOptions

      Options for the API Gateway stage that will always point to the latest

      deployment when `deploy` is enabled. If `deploy` is disabled,

      this value cannot be set.



      :type: :py:class:`~@aws-cdk/aws-apigateway.StageOptions`\  *(optional)*
      :default: defaults based on defaults of `StageOptions`


   .. py:attribute:: description

      A description of the purpose of this API Gateway RestApi resource.



      :type: string *(optional)*
      :default: No description


   .. py:attribute:: endpointTypes

      A list of the endpoint types of the API. Use this property when creating

      an API.



      :type: :py:class:`~@aws-cdk/aws-apigateway.EndpointType`\ [] *(optional)*


   .. py:attribute:: failOnWarnings

      Indicates whether to roll back the resource if a warning occurs while API

      Gateway is creating the RestApi resource.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: minimumCompressionSize

      A nullable integer that is used to enable compression (with non-negative

      between 0 and 10485760 (10M) bytes, inclusive) or disable compression

      (when undefined) on an API. When compression is enabled, compression or

      decompression is not applied on the payload if the payload size is

      smaller than this value. Setting it to zero allows compression for any

      payload size.



      :type: number *(optional)*
      :default: undefined compression is disabled


   .. py:attribute:: parameters

      Custom header parameters for the request.



      :type: string => string *(optional)*


   .. py:attribute:: policy

      A policy document that contains the permissions for this RestApi



      :type: :py:class:`@aws-cdk/aws-iam.PolicyDocument`\  *(optional)*


   .. py:attribute:: restApiName

      A name for the API Gateway RestApi resource.



      :type: string *(optional)*
      :default: construct-id defaults to the id of the RestApi construct


   .. py:attribute:: retainDeployments

      Retains old deployment resources when the API changes. This allows

      manually reverting stages to point to old deployments via the AWS

      Console.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: defaultIntegration

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultIntegration>`

      An integration to use as a default for all methods created within this

      API unless an integration is specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Integration`\  *(optional)* *(readonly)*


   .. py:attribute:: defaultMethodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.ResourceOptions <@aws-cdk/aws-apigateway.ResourceOptions.defaultMethodOptions>`

      Method options to use as a default for all methods created within this

      API unless custom options are specified.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodOptions`\  *(optional)* *(readonly)*


Stage
^^^^^

.. py:class:: Stage(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.Stage;

      .. code-tab:: javascript

         const { Stage } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { Stage } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.StageProps`\ 

   .. py:method:: urlForPath([path]) -> string

      Returns the invoke URL for a certain path.



      :param path: The resource path
      :type path: string *(optional)*
      :rtype: string


   .. py:attribute:: stageName

      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


StageOptions (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StageOptions

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.StageOptions;

      .. code-tab:: javascript

         // StageOptions is an interface

      .. code-tab:: typescript

         import { StageOptions } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.MethodDeploymentOptions`\ 


   .. py:attribute:: cacheClusterEnabled

      Indicates whether cache clustering is enabled for the stage.



      :type: boolean *(optional)*


   .. py:attribute:: cacheClusterSize

      The stage's cache cluster size.



      :type: string *(optional)*
      :default: 0.5


   .. py:attribute:: clientCertificateId

      The identifier of the client certificate that API Gateway uses to call

      your integration endpoints in the stage.



      :type: string *(optional)*
      :default: None


   .. py:attribute:: description

      A description of the purpose of the stage.



      :type: string *(optional)*


   .. py:attribute:: documentationVersion

      The version identifier of the API documentation snapshot.



      :type: string *(optional)*


   .. py:attribute:: methodOptions

      Method deployment options for specific resources/methods. These will

      override common options defined in `StageOptions#methodOptions`.



      :type: string => :py:class:`~@aws-cdk/aws-apigateway.MethodDeploymentOptions`\  *(optional)*


   .. py:attribute:: stageName

      The name of the stage, which API Gateway uses as the first path segment

      in the invoked Uniform Resource Identifier (URI).



      :type: string *(optional)*
      :default: "prod"


   .. py:attribute:: tracingEnabled

      Specifies whether Amazon X-Ray tracing is enabled for this method.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: variables

      A map that defines the stage variables. Variable names must consist of

      alphanumeric characters, and the values must match the following regular

      expression: [A-Za-z0-9-._~:/?#&amp;=,]+.



      :type: string => string *(optional)*


   .. py:attribute:: cacheDataEncrypted

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheDataEncrypted>`

      Indicates whether the cached responses are encrypted.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: cacheTtlSeconds

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheTtlSeconds>`

      Specifies the time to live (TTL), in seconds, for cached responses. The

      higher the TTL, the longer the response will be cached.



      :type: number *(optional)*


   .. py:attribute:: cachingEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cachingEnabled>`

      Specifies whether responses should be cached and returned for requests. A

      cache cluster must be enabled on the stage for responses to be cached.



      :type: boolean *(optional)*


   .. py:attribute:: dataTraceEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.dataTraceEnabled>`

      Specifies whether data trace logging is enabled for this method, which

      effects the log entries pushed to Amazon CloudWatch Logs.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: loggingLevel

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.loggingLevel>`

      Specifies the logging level for this method, which effects the log

      entries pushed to Amazon CloudWatch Logs.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodLoggingLevel`\  *(optional)*
      :default: Off


   .. py:attribute:: metricsEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.metricsEnabled>`

      Specifies whether Amazon CloudWatch metrics are enabled for this method.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: throttlingBurstLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingBurstLimit>`

      Specifies the throttling burst limit.



      :type: number *(optional)*


   .. py:attribute:: throttlingRateLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingRateLimit>`

      Specifies the throttling rate limit.



      :type: number *(optional)*


StageProps (interface)
^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: StageProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.StageProps;

      .. code-tab:: javascript

         // StageProps is an interface

      .. code-tab:: typescript

         import { StageProps } from '@aws-cdk/aws-apigateway';



   :extends: :py:class:`~@aws-cdk/aws-apigateway.StageOptions`\ 


   .. py:attribute:: deployment

      The deployment that this stage points to.



      :type: :py:class:`~@aws-cdk/aws-apigateway.Deployment`\ 


   .. py:attribute:: cacheDataEncrypted

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheDataEncrypted>`

      Indicates whether the cached responses are encrypted.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: cacheTtlSeconds

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cacheTtlSeconds>`

      Specifies the time to live (TTL), in seconds, for cached responses. The

      higher the TTL, the longer the response will be cached.



      :type: number *(optional)*


   .. py:attribute:: cachingEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.cachingEnabled>`

      Specifies whether responses should be cached and returned for requests. A

      cache cluster must be enabled on the stage for responses to be cached.



      :type: boolean *(optional)*


   .. py:attribute:: dataTraceEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.dataTraceEnabled>`

      Specifies whether data trace logging is enabled for this method, which

      effects the log entries pushed to Amazon CloudWatch Logs.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: loggingLevel

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.loggingLevel>`

      Specifies the logging level for this method, which effects the log

      entries pushed to Amazon CloudWatch Logs.



      :type: :py:class:`~@aws-cdk/aws-apigateway.MethodLoggingLevel`\  *(optional)*
      :default: Off


   .. py:attribute:: metricsEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.metricsEnabled>`

      Specifies whether Amazon CloudWatch metrics are enabled for this method.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: throttlingBurstLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingBurstLimit>`

      Specifies the throttling burst limit.



      :type: number *(optional)*


   .. py:attribute:: throttlingRateLimit

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.MethodDeploymentOptions <@aws-cdk/aws-apigateway.MethodDeploymentOptions.throttlingRateLimit>`

      Specifies the throttling rate limit.



      :type: number *(optional)*


   .. py:attribute:: cacheClusterEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.cacheClusterEnabled>`

      Indicates whether cache clustering is enabled for the stage.



      :type: boolean *(optional)*


   .. py:attribute:: cacheClusterSize

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.cacheClusterSize>`

      The stage's cache cluster size.



      :type: string *(optional)*
      :default: 0.5


   .. py:attribute:: clientCertificateId

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.clientCertificateId>`

      The identifier of the client certificate that API Gateway uses to call

      your integration endpoints in the stage.



      :type: string *(optional)*
      :default: None


   .. py:attribute:: description

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.description>`

      A description of the purpose of the stage.



      :type: string *(optional)*


   .. py:attribute:: documentationVersion

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.documentationVersion>`

      The version identifier of the API documentation snapshot.



      :type: string *(optional)*


   .. py:attribute:: methodOptions

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.methodOptions>`

      Method deployment options for specific resources/methods. These will

      override common options defined in `StageOptions#methodOptions`.



      :type: string => :py:class:`~@aws-cdk/aws-apigateway.MethodDeploymentOptions`\  *(optional)*


   .. py:attribute:: stageName

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.stageName>`

      The name of the stage, which API Gateway uses as the first path segment

      in the invoked Uniform Resource Identifier (URI).



      :type: string *(optional)*
      :default: "prod"


   .. py:attribute:: tracingEnabled

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.tracingEnabled>`

      Specifies whether Amazon X-Ray tracing is enabled for this method.



      :type: boolean *(optional)*
      :default: false


   .. py:attribute:: variables

      *Inherited from* :py:attr:`@aws-cdk/aws-apigateway.StageOptions <@aws-cdk/aws-apigateway.StageOptions.variables>`

      A map that defines the stage variables. Variable names must consist of

      alphanumeric characters, and the values must match the following regular

      expression: [A-Za-z0-9-._~:/?#&amp;=,]+.



      :type: string => string *(optional)*


VpcLink
^^^^^^^

.. py:class:: VpcLink(scope, id, props)

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.VpcLink;

      .. code-tab:: javascript

         const { VpcLink } = require('@aws-cdk/aws-apigateway');

      .. code-tab:: typescript

         import { VpcLink } from '@aws-cdk/aws-apigateway';



   Define a new VPC Link

   Specifies an API Gateway VPC link for a RestApi to access resources in an Amazon Virtual Private Cloud (VPC).



   :extends: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param scope: 
   :type scope: :py:class:`@aws-cdk/cdk.Construct`\ 
   :param id: 
   :type id: string
   :param props: 
   :type props: :py:class:`~@aws-cdk/aws-apigateway.VpcLinkProps`\ 

   .. py:attribute:: vpcLinkId

      Physical ID of the VpcLink resource



      :type: string *(readonly)*


   .. py:method:: prepare()

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.prepare>`

      Perform final modifications before synthesis

      

      This method can be implemented by derived constructs in order to perform

      final changes before synthesis. prepare() will be called after child

      constructs have been prepared.

      

      This is an advanced framework feature. Only use this if you

      understand the implications.



      *Protected method*



   .. py:method:: toString() -> string

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.toString>`

      Returns a string representation of this construct.



      :rtype: string


   .. py:method:: validate() -> string[]

      *Inherited from* :py:meth:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.validate>`

      Validate the current construct.

      

      This method can be implemented by derived constructs in order to perform

      validation logic. It is called on all constructs before synthesis.



      *Protected method*

      :return: An array of validation error messages, or an empty array if there the construct is valid.
      :rtype: string[]


   .. py:attribute:: dependencyRoots

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.dependencyRoots>`

      The set of constructs that form the root of this dependable

      

      All resources under all returned constructs are included in the ordering

      dependency.



      :type: :py:class:`@aws-cdk/cdk.IConstruct`\ [] *(readonly)*


   .. py:attribute:: node

      *Inherited from* :py:attr:`@aws-cdk/cdk.Construct <@aws-cdk/cdk.Construct.node>`

      Construct node.



      :type: :py:class:`@aws-cdk/cdk.ConstructNode`\  *(readonly)*


VpcLinkProps (interface)
^^^^^^^^^^^^^^^^^^^^^^^^

.. py:class:: VpcLinkProps

   **Language-specific names:**

   .. tabs::

      .. code-tab:: c#

         using Amazon.CDK.AWS.APIGateway;

      .. code-tab:: java

         import software.amazon.awscdk.services.apigateway.VpcLinkProps;

      .. code-tab:: javascript

         // VpcLinkProps is an interface

      .. code-tab:: typescript

         import { VpcLinkProps } from '@aws-cdk/aws-apigateway';



   Properties for a VpcLink





   .. py:attribute:: targets

      The network load balancers of the VPC targeted by the VPC link.

      The network load balancers must be owned by the same AWS account of the API owner.



      :type: :py:class:`@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancer`\ []


   .. py:attribute:: description

      The description of the VPC link.



      :type: string *(optional)*
      :default: no description


   .. py:attribute:: name

      The name used to label and identify the VPC link.



      :type: string *(optional)*
      :default: automatically generated name


